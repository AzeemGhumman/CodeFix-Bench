{
    "pr": "psf/requests/2393",
    "problem": "Requests unable to follow/retrieve links with percent in url\nA simple requests.get(url) doesn't work for the following:\n\nhttp://bit.ly/1x5vKWM\nhttp://bit.ly/1yPgqvg\nhttp://style.shoedazzle.com/dmg/3AE3B8?dzcode=FBT&dzcontent=FBT_SDZ_CPM_Q414&pid=112768085&aid=285880402&cid=0&publisher=%ppublisher=!;&placement=%pplacement=!;\n\n",
    "hint": "This bug is exactly the same as #1360, with one key difference: here, the server isn't percent-encoding percent signs. This is not valid HTTP, and we're totally allowed to fail here according to RFC 7231:\n\n> Note: Some recipients attempt to recover from Location fields that are not valid URI references.  This specification does not mandate or define such processing, but does allow it for the sake of robustness.\n\nHowever, I wonder if we can do better. Specifically, I wonder if we can update our `requote_uri` function to allow us to attempt to unquote it, and if that fails because of invalid percent-escape sequences we can just use the URL unchanged. That probably covers most of our bases, and it's gotta be better than failing hard like we do now.\n\n@sigmavirus24, thoughts?\n\nI'm +0 on the idea but my opinion really depends on the complexity of the fix.\n\nSo, looking at this again, I did tried the following:\n\n``` py\n>>> import requests\n>>> r = requests.get('http://bit.ly/1x5vKWM', allow_redirects=False)\n>>> r\n<Response [301]>\n>>> r.headers['Location']\n'http://ad.doubleclick.net/ddm/clk/285880402;112768085;k'\n>>> r2 = requests.get(r.headers['Location'], allow_redirects=False)\n>>> r2\n<Response [302]>\n>>> r2.headers['Location']\n'http://style.shoedazzle.com/dmg/3AE3B8?dzcode=FBT&dzcontent=FBT_SDZ_CPM_Q414&pid=112768085&aid=285880402&cid=0&publisher=%ppublisher=!;&placement=%pplacement=!;'\n>>> r3 = requests.get(r2.headers['Location'], allow_redirects=False)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \".../virtualenv/twine/lib/python2.7/site-packages/requests/api.py\", line 65, in get\n    return request('get', url, **kwargs)\n  File \".../virtualenv/twine/lib/python2.7/site-packages/requests/api.py\", line 49, in request\n    response = session.request(method=method, url=url, **kwargs)\n  File \".../virtualenv/twine/lib/python2.7/site-packages/requests/sessions.py\", line 447, in request\n    prep = self.prepare_request(req)\n  File \".../virtualenv/twine/lib/python2.7/site-packages/requests/sessions.py\", line 378, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \".../virtualenv/twine/lib/python2.7/site-packages/requests/models.py\", line 304, in prepare\n    self.prepare_url(url, params)\n  File \".../virtualenv/twine/lib/python2.7/site-packages/requests/models.py\", line 400, in prepare_url\n    url = requote_uri(urlunparse([scheme, netloc, path, None, query, fragment]))\n  File \".../virtualenv/twine/lib/python2.7/site-packages/requests/utils.py\", line 424, in requote_uri\n    return quote(unquote_unreserved(uri), safe=\"!#$%&'()*+,/:;=?@[]~\")\n  File \".../virtualenv/twine/lib/python2.7/site-packages/requests/utils.py\", line 404, in unquote_unreserved\n    raise InvalidURL(\"Invalid percent-escape sequence: '%s'\" % h)\nrequests.exceptions.InvalidURL: Invalid percent-escape sequence: 'pp'\n```\n\nI assume this is something along the lines of what @suhaasprasad is seeing. I'm going to see if following @Lukasa's idea will work for this.\n",
    "base": "d2d576b6b1101e2871c82f63adf2c2b534c2dabc",
    "section": 0,
    "files": [
        "test_requests.py:httpbin,RequestsTestCase.setUp,RequestsTestCase.tearDown,RequestsTestCase.test_entry_points,RequestsTestCase.test_invalid_url,RequestsTestCase.test_basic_building,RequestsTestCase.test_no_content_length,RequestsTestCase.test_override_content_length,RequestsTestCase.test_path_is_not_double_encoded,RequestsTestCase.test_params_are_added_before_fragment,RequestsTestCase.test_mixed_case_scheme_acceptable,RequestsTestCase.test_HTTP_200_OK_GET_ALTERNATIVE,RequestsTestCase.test_HTTP_302_ALLOW_REDIRECT_GET,RequestsTestCase.test_HTTP_200_OK_GET_WITH_PARAMS,RequestsTestCase.test_HTTP_200_OK_GET_WITH_MIXED_PARAMS,RequestsTestCase.test_set_cookie_on_301,RequestsTestCase.test_cookie_sent_on_redirect,RequestsTestCase.test_cookie_removed_on_expire,RequestsTestCase.test_cookie_quote_wrapped,RequestsTestCase.test_cookie_persists_via_api,RequestsTestCase.test_request_cookie_overrides_session_cookie,RequestsTestCase.test_request_cookies_not_persisted,RequestsTestCase.test_generic_cookiejar_works,RequestsTestCase.test_param_cookiejar_works,RequestsTestCase.test_requests_in_history_are_not_overridden,RequestsTestCase.test_history_is_always_a_list,RequestsTestCase.test_headers_on_session_with_None_are_not_sent,RequestsTestCase.test_user_agent_transfers,RequestsTestCase.test_HTTP_200_OK_HEAD,RequestsTestCase.test_HTTP_200_OK_PUT,RequestsTestCase.test_BASICAUTH_TUPLE_HTTP_200_OK_GET,RequestsTestCase.test_connection_error,RequestsTestCase.test_LocationParseError,RequestsTestCase.test_basicauth_with_netrc,RequestsTestCase.test_DIGEST_HTTP_200_OK_GET,RequestsTestCase.test_DIGEST_AUTH_RETURNS_COOKIE,RequestsTestCase.test_DIGEST_AUTH_SETS_SESSION_COOKIES,RequestsTestCase.test_DIGEST_STREAM,RequestsTestCase.test_DIGESTAUTH_WRONG_HTTP_401_GET,RequestsTestCase.test_DIGESTAUTH_QUOTES_QOP_VALUE,RequestsTestCase.test_POSTBIN_GET_POST_FILES,RequestsTestCase.test_POSTBIN_GET_POST_FILES_WITH_DATA,RequestsTestCase.test_conflicting_post_params,RequestsTestCase.test_request_ok_set,RequestsTestCase.test_status_raising,RequestsTestCase.test_decompress_gzip,RequestsTestCase.test_unicode_get,RequestsTestCase.test_unicode_header_name,RequestsTestCase.test_pyopenssl_redirect,RequestsTestCase.test_urlencoded_get_query_multivalued_param,RequestsTestCase.test_different_encodings_dont_break_post,RequestsTestCase.test_unicode_multipart_post,RequestsTestCase.test_unicode_multipart_post_fieldnames,RequestsTestCase.test_unicode_method_name,RequestsTestCase.test_custom_content_type,RequestsTestCase.test_hook_receives_request_arguments,RequestsTestCase.test_session_hooks_are_used_with_no_request_hooks,RequestsTestCase.test_session_hooks_are_overriden_by_request_hooks,RequestsTestCase.test_prepared_request_hook,RequestsTestCase.test_prepared_from_session,RequestsTestCase.test_prepare_request_with_bytestring_url,RequestsTestCase.test_links,RequestsTestCase.test_cookie_parameters,RequestsTestCase.test_cookie_as_dict_keeps_len,RequestsTestCase.test_cookie_as_dict_keeps_items,RequestsTestCase.test_cookie_as_dict_keys,RequestsTestCase.test_cookie_as_dict_values,RequestsTestCase.test_cookie_as_dict_items,RequestsTestCase.test_time_elapsed_blank,RequestsTestCase.test_response_is_iterable,RequestsTestCase.test_response_decode_unicode,RequestsTestCase.test_request_and_response_are_pickleable,RequestsTestCase.test_get_auth_from_url,RequestsTestCase.test_get_auth_from_url_encoded_spaces,RequestsTestCase.test_get_auth_from_url_not_encoded_spaces,RequestsTestCase.test_get_auth_from_url_percent_chars,RequestsTestCase.test_get_auth_from_url_encoded_hashes,RequestsTestCase.test_cannot_send_unprepared_requests,RequestsTestCase.test_http_error,RequestsTestCase.test_session_pickling,RequestsTestCase.test_fixes_1329,RequestsTestCase.test_uppercase_scheme_redirect,RequestsTestCase.test_transport_adapter_ordering,RequestsTestCase.test_header_remove_is_case_insensitive,RequestsTestCase.test_params_are_merged_case_sensitive,RequestsTestCase.test_long_authinfo_in_url,RequestsTestCase.test_header_keys_are_native,RequestsTestCase.test_can_send_nonstring_objects_with_files,RequestsTestCase.test_can_send_file_object_with_non_string_filename,RequestsTestCase.test_autoset_header_values_are_native,RequestsTestCase.test_nonhttp_schemes_dont_check_URLs,RequestsTestCase.test_auth_is_stripped_on_redirect_off_host,RequestsTestCase.test_auth_is_retained_for_redirect_on_host,RequestsTestCase.test_manual_redirect_with_partial_body_read,RequestsTestCase._patch_adapter_gzipped_redirect,RequestsTestCase.test_redirect_with_wrong_gzipped_header,RequestsTestCase.test_basic_auth_str_is_always_native,RequestsTestCase.test_requests_history_is_saved,RequestsTestCase.test_json_param_post_content_type_works,TestContentEncodingDetection.test_none,TestContentEncodingDetection.test_html_charset,TestContentEncodingDetection.test_html4_pragma,TestContentEncodingDetection.test_xhtml_pragma,TestContentEncodingDetection.test_xml,TestContentEncodingDetection.test_precedence,TestCaseInsensitiveDict.test_mapping_init,TestCaseInsensitiveDict.test_iterable_init,TestCaseInsensitiveDict.test_kwargs_init,TestCaseInsensitiveDict.test_docstring_example,TestCaseInsensitiveDict.test_len,TestCaseInsensitiveDict.test_getitem,TestCaseInsensitiveDict.test_fixes_649,TestCaseInsensitiveDict.test_delitem,TestCaseInsensitiveDict.test_contains,TestCaseInsensitiveDict.test_get,TestCaseInsensitiveDict.test_update,TestCaseInsensitiveDict.test_update_retains_unchanged,TestCaseInsensitiveDict.test_iter,TestCaseInsensitiveDict.test_equality,TestCaseInsensitiveDict.test_setdefault,TestCaseInsensitiveDict.test_lower_items,TestCaseInsensitiveDict.test_preserve_key_case,TestCaseInsensitiveDict.test_preserve_last_key_case,UtilsTestCase.test_super_len_io_streams,UtilsTestCase.test_get_environ_proxies_ip_ranges,UtilsTestCase.test_get_environ_proxies,UtilsTestCase.test_is_ipv4_address,UtilsTestCase.test_is_valid_cidr,UtilsTestCase.test_dotted_netmask,UtilsTestCase.test_address_in_network,UtilsTestCase.test_get_auth_from_url,TestMorselToCookieExpires.test_expires_valid_str,TestMorselToCookieExpires.test_expires_invalid_int,TestMorselToCookieExpires.test_expires_invalid_str,TestMorselToCookieExpires.test_expires_none,TestMorselToCookieMaxAge.test_max_age_valid_int,TestMorselToCookieMaxAge.test_max_age_invalid_str,TestTimeout.test_stream_timeout,TestTimeout.test_invalid_timeout,TestTimeout.test_none_timeout,TestTimeout.test_read_timeout,TestTimeout.test_connect_timeout,TestTimeout.test_total_timeout_connect,TestTimeout.test_encoded_methods,RedirectSession.__init__,RedirectSession.send,RedirectSession.build_response,RedirectSession._build_raw,TestRedirects.test_requests_are_updated_each_time,list_of_tuples,test_data_argument_accepts_tuples,assert_copy,test_prepared_request_empty_copy,test_prepared_request_no_cookies_copy,test_prepared_request_complete_copy,test_prepare_unicode_url,test_urllib3_retries,u,u,get_netrc_auth_mock,hook,hook,DummyAuth.__call__,read_mock,build_response",
        "requests/utils.py:dict_to_sequence,super_len,get_netrc_auth,guess_filename,from_key_val_list,to_key_val_list,parse_list_header,parse_dict_header,unquote_header_value,dict_from_cookiejar,add_dict_to_cookiejar,get_encodings_from_content,get_encoding_from_headers,stream_decode_response_unicode,iter_slices,get_unicode_from_response,unquote_unreserved,requote_uri,address_in_network,dotted_netmask,is_ipv4_address,is_valid_cidr,should_bypass_proxies,get_environ_proxies,default_user_agent,default_headers,parse_header_links,guess_json_utf,prepend_scheme_if_needed,get_auth_from_url,to_native_string,urldefragauth",
        "requests/sessions.py:merge_setting,merge_hooks,SessionRedirectMixin.resolve_redirects,SessionRedirectMixin.rebuild_auth,SessionRedirectMixin.rebuild_proxies,Session.__init__,Session.__enter__,Session.__exit__,Session.prepare_request,Session.request,Session.get,Session.options,Session.head,Session.post,Session.put,Session.patch,Session.delete,Session.send,Session.merge_environment_settings,Session.get_adapter,Session.close,Session.mount,Session.__getstate__,Session.__setstate__,session",
        "requests/certs.py:where",
        "requests/__init__.py:NullHandler.emit",
        "requests/models.py:RequestEncodingMixin.path_url,RequestEncodingMixin._encode_params,RequestEncodingMixin._encode_files,RequestHooksMixin.register_hook,RequestHooksMixin.deregister_hook,Request.__init__,Request.__repr__,Request.prepare,PreparedRequest.__init__,PreparedRequest.prepare,PreparedRequest.__repr__,PreparedRequest.copy,PreparedRequest.prepare_method,PreparedRequest.prepare_url,PreparedRequest.prepare_headers,PreparedRequest.prepare_body,PreparedRequest.prepare_content_length,PreparedRequest.prepare_auth,PreparedRequest.prepare_cookies,PreparedRequest.prepare_hooks,Response.__init__,Response.__getstate__,Response.__setstate__,Response.__repr__,Response.__bool__,Response.__nonzero__,Response.__iter__,Response.ok,Response.is_redirect,Response.is_permanent_redirect,Response.apparent_encoding,Response.iter_content,Response.iter_lines,Response.content,Response.text,Response.json,Response.links,Response.raise_for_status,Response.close,generate",
        "requests/auth.py:_basic_auth_str,AuthBase.__call__,HTTPBasicAuth.__init__,HTTPBasicAuth.__call__,HTTPProxyAuth.__call__,HTTPDigestAuth.__init__,HTTPDigestAuth.build_digest_header,HTTPDigestAuth.handle_redirect,HTTPDigestAuth.handle_401,HTTPDigestAuth.__call__,md5_utf8,sha_utf8",
        "requests/exceptions.py:RequestException.__init__",
        "requests/hooks.py:default_hooks,dispatch_hook",
        "requests/adapters.py:BaseAdapter.__init__,BaseAdapter.send,BaseAdapter.close,HTTPAdapter.__init__,HTTPAdapter.__getstate__,HTTPAdapter.__setstate__,HTTPAdapter.init_poolmanager,HTTPAdapter.proxy_manager_for,HTTPAdapter.cert_verify,HTTPAdapter.build_response,HTTPAdapter.get_connection,HTTPAdapter.close,HTTPAdapter.request_url,HTTPAdapter.add_headers,HTTPAdapter.proxy_headers,HTTPAdapter.send",
        "requests/structures.py:CaseInsensitiveDict.__init__,CaseInsensitiveDict.__setitem__,CaseInsensitiveDict.__getitem__,CaseInsensitiveDict.__delitem__,CaseInsensitiveDict.__iter__,CaseInsensitiveDict.__len__,CaseInsensitiveDict.lower_items,CaseInsensitiveDict.__eq__,CaseInsensitiveDict.copy,CaseInsensitiveDict.__repr__,LookupDict.__init__,LookupDict.__repr__,LookupDict.__getitem__,LookupDict.get",
        "requests/api.py:request,get,options,head,post,put,patch,delete",
        "requests/cookies.py:MockRequest.__init__,MockRequest.get_type,MockRequest.get_host,MockRequest.get_origin_req_host,MockRequest.get_full_url,MockRequest.is_unverifiable,MockRequest.has_header,MockRequest.get_header,MockRequest.add_header,MockRequest.add_unredirected_header,MockRequest.get_new_headers,MockRequest.unverifiable,MockRequest.origin_req_host,MockRequest.host,MockResponse.__init__,MockResponse.info,MockResponse.getheaders,extract_cookies_to_jar,get_cookie_header,remove_cookie_by_name,RequestsCookieJar.get,RequestsCookieJar.set,RequestsCookieJar.iterkeys,RequestsCookieJar.keys,RequestsCookieJar.itervalues,RequestsCookieJar.values,RequestsCookieJar.iteritems,RequestsCookieJar.items,RequestsCookieJar.list_domains,RequestsCookieJar.list_paths,RequestsCookieJar.multiple_domains,RequestsCookieJar.get_dict,RequestsCookieJar.__getitem__,RequestsCookieJar.__setitem__,RequestsCookieJar.__delitem__,RequestsCookieJar.set_cookie,RequestsCookieJar.update,RequestsCookieJar._find,RequestsCookieJar._find_no_duplicates,RequestsCookieJar.__getstate__,RequestsCookieJar.__setstate__,RequestsCookieJar.copy,create_cookie,morsel_to_cookie,cookiejar_from_dict,merge_cookies",
        "requests/packages/__init__.py:VendorAlias.__init__,VendorAlias.find_module,VendorAlias.load_module",
        "requests/packages/chardet/mbcharsetprober.py:MultiByteCharSetProber.__init__,MultiByteCharSetProber.reset,MultiByteCharSetProber.get_charset_name,MultiByteCharSetProber.feed,MultiByteCharSetProber.get_confidence",
        "requests/packages/chardet/sjisprober.py:SJISProber.__init__,SJISProber.reset,SJISProber.get_charset_name,SJISProber.feed,SJISProber.get_confidence",
        "requests/packages/chardet/__init__.py:detect",
        "requests/packages/chardet/universaldetector.py:UniversalDetector.__init__,UniversalDetector.reset,UniversalDetector.feed,UniversalDetector.close",
        "requests/packages/chardet/jpcntx.py:JapaneseContextAnalysis.__init__,JapaneseContextAnalysis.reset,JapaneseContextAnalysis.feed,JapaneseContextAnalysis.got_enough_data,JapaneseContextAnalysis.get_confidence,JapaneseContextAnalysis.get_order,SJISContextAnalysis.__init__,SJISContextAnalysis.get_charset_name,SJISContextAnalysis.get_order,EUCJPContextAnalysis.get_order",
        "requests/packages/chardet/charsetprober.py:CharSetProber.__init__,CharSetProber.reset,CharSetProber.get_charset_name,CharSetProber.feed,CharSetProber.get_state,CharSetProber.get_confidence,CharSetProber.filter_high_bit_only,CharSetProber.filter_without_english_letters,CharSetProber.filter_with_english_letters",
        "requests/packages/chardet/compat.py:wrap_ord",
        "requests/packages/chardet/eucjpprober.py:EUCJPProber.__init__,EUCJPProber.reset,EUCJPProber.get_charset_name,EUCJPProber.feed,EUCJPProber.get_confidence",
        "requests/packages/chardet/sbcharsetprober.py:SingleByteCharSetProber.__init__,SingleByteCharSetProber.reset,SingleByteCharSetProber.get_charset_name,SingleByteCharSetProber.feed,SingleByteCharSetProber.get_confidence",
        "requests/packages/chardet/utf8prober.py:UTF8Prober.__init__,UTF8Prober.reset,UTF8Prober.get_charset_name,UTF8Prober.feed,UTF8Prober.get_confidence",
        "requests/packages/chardet/chardistribution.py:CharDistributionAnalysis.__init__,CharDistributionAnalysis.reset,CharDistributionAnalysis.feed,CharDistributionAnalysis.get_confidence,CharDistributionAnalysis.got_enough_data,CharDistributionAnalysis.get_order,EUCTWDistributionAnalysis.__init__,EUCTWDistributionAnalysis.get_order,EUCKRDistributionAnalysis.__init__,EUCKRDistributionAnalysis.get_order,GB2312DistributionAnalysis.__init__,GB2312DistributionAnalysis.get_order,Big5DistributionAnalysis.__init__,Big5DistributionAnalysis.get_order,SJISDistributionAnalysis.__init__,SJISDistributionAnalysis.get_order,EUCJPDistributionAnalysis.__init__,EUCJPDistributionAnalysis.get_order",
        "requests/packages/chardet/sbcsgroupprober.py:SBCSGroupProber.__init__",
        "requests/packages/chardet/cp949prober.py:CP949Prober.__init__,CP949Prober.get_charset_name",
        "requests/packages/chardet/euctwprober.py:EUCTWProber.__init__,EUCTWProber.get_charset_name",
        "requests/packages/chardet/chardetect.py:description_of,main",
        "requests/packages/chardet/gb2312prober.py:GB2312Prober.__init__,GB2312Prober.get_charset_name",
        "requests/packages/chardet/latin1prober.py:Latin1Prober.__init__,Latin1Prober.reset,Latin1Prober.get_charset_name,Latin1Prober.feed,Latin1Prober.get_confidence",
        "requests/packages/chardet/euckrprober.py:EUCKRProber.__init__,EUCKRProber.get_charset_name",
        "requests/packages/chardet/codingstatemachine.py:CodingStateMachine.__init__,CodingStateMachine.reset,CodingStateMachine.next_state,CodingStateMachine.get_current_charlen,CodingStateMachine.get_coding_state_machine",
        "requests/packages/chardet/escprober.py:EscCharSetProber.__init__,EscCharSetProber.reset,EscCharSetProber.get_charset_name,EscCharSetProber.get_confidence,EscCharSetProber.feed",
        "requests/packages/chardet/hebrewprober.py:HebrewProber.__init__,HebrewProber.reset,HebrewProber.set_model_probers,HebrewProber.is_final,HebrewProber.is_non_final,HebrewProber.feed,HebrewProber.get_charset_name,HebrewProber.get_state",
        "requests/packages/chardet/big5prober.py:Big5Prober.__init__,Big5Prober.get_charset_name",
        "requests/packages/chardet/charsetgroupprober.py:CharSetGroupProber.__init__,CharSetGroupProber.reset,CharSetGroupProber.get_charset_name,CharSetGroupProber.feed,CharSetGroupProber.get_confidence",
        "requests/packages/chardet/mbcsgroupprober.py:MBCSGroupProber.__init__",
        "requests/packages/urllib3/fields.py:guess_content_type,format_header_param,RequestField.__init__,RequestField.from_tuples,RequestField._render_part,RequestField._render_parts,RequestField.render_headers,RequestField.make_multipart",
        "requests/packages/urllib3/__init__.py:add_stderr_logger,disable_warnings,NullHandler.emit",
        "requests/packages/urllib3/connectionpool.py:ConnectionPool.__init__,ConnectionPool.__str__,HTTPConnectionPool.__init__,HTTPConnectionPool._new_conn,HTTPConnectionPool._get_conn,HTTPConnectionPool._put_conn,HTTPConnectionPool._validate_conn,HTTPConnectionPool._prepare_proxy,HTTPConnectionPool._get_timeout,HTTPConnectionPool._raise_timeout,HTTPConnectionPool._make_request,HTTPConnectionPool.close,HTTPConnectionPool.is_same_host,HTTPConnectionPool.urlopen,HTTPSConnectionPool.__init__,HTTPSConnectionPool._prepare_conn,HTTPSConnectionPool._prepare_proxy,HTTPSConnectionPool._new_conn,HTTPSConnectionPool._validate_conn,connection_from_url",
        "requests/packages/urllib3/exceptions.py:PoolError.__init__,PoolError.__reduce__,RequestError.__init__,RequestError.__reduce__,MaxRetryError.__init__,HostChangedError.__init__,LocationParseError.__init__",
        "requests/packages/urllib3/connection.py:HTTPConnection.__init__,HTTPConnection._new_conn,HTTPConnection._prepare_conn,HTTPConnection.connect,HTTPSConnection.__init__,HTTPSConnection.connect,VerifiedHTTPSConnection.set_cert,VerifiedHTTPSConnection.connect",
        "requests/packages/urllib3/response.py:DeflateDecoder.__init__,DeflateDecoder.__getattr__,DeflateDecoder.decompress,_get_decoder,HTTPResponse.__init__,HTTPResponse.get_redirect_location,HTTPResponse.release_conn,HTTPResponse.data,HTTPResponse.tell,HTTPResponse.read,HTTPResponse.stream,HTTPResponse.from_httplib,HTTPResponse.getheaders,HTTPResponse.getheader,HTTPResponse.close,HTTPResponse.closed,HTTPResponse.fileno,HTTPResponse.flush,HTTPResponse.readable,HTTPResponse.readinto",
        "requests/packages/urllib3/filepost.py:choose_boundary,iter_field_objects,iter_fields,encode_multipart_formdata",
        "requests/packages/urllib3/poolmanager.py:PoolManager.__init__,PoolManager._new_pool,PoolManager.clear,PoolManager.connection_from_host,PoolManager.connection_from_url,PoolManager.urlopen,ProxyManager.__init__,ProxyManager.connection_from_host,ProxyManager._set_proxy_headers,ProxyManager.urlopen,proxy_from_url",
        "requests/packages/urllib3/request.py:RequestMethods.__init__,RequestMethods.urlopen,RequestMethods.request,RequestMethods.request_encode_url,RequestMethods.request_encode_body",
        "requests/packages/urllib3/_collections.py:RecentlyUsedContainer.__init__,RecentlyUsedContainer.__getitem__,RecentlyUsedContainer.__setitem__,RecentlyUsedContainer.__delitem__,RecentlyUsedContainer.__len__,RecentlyUsedContainer.__iter__,RecentlyUsedContainer.clear,RecentlyUsedContainer.keys,HTTPHeaderDict.__init__,HTTPHeaderDict.add,HTTPHeaderDict.getlist,HTTPHeaderDict.copy,HTTPHeaderDict.__eq__,HTTPHeaderDict.__getitem__,HTTPHeaderDict.__setitem__,HTTPHeaderDict.__delitem__,HTTPHeaderDict.__len__,HTTPHeaderDict.__iter__,HTTPHeaderDict.__repr__,RLock.__enter__,RLock.__exit__",
        "requests/packages/urllib3/packages/ordered_dict.py:OrderedDict.__init__,OrderedDict.__setitem__,OrderedDict.__delitem__,OrderedDict.__iter__,OrderedDict.__reversed__,OrderedDict.clear,OrderedDict.popitem,OrderedDict.keys,OrderedDict.values,OrderedDict.items,OrderedDict.iterkeys,OrderedDict.itervalues,OrderedDict.iteritems,OrderedDict.update,OrderedDict.pop,OrderedDict.setdefault,OrderedDict.__repr__,OrderedDict.__reduce__,OrderedDict.copy,OrderedDict.fromkeys,OrderedDict.__eq__,OrderedDict.__ne__,OrderedDict.viewkeys,OrderedDict.viewvalues,OrderedDict.viewitems",
        "requests/packages/urllib3/packages/six.py:_add_doc,_import_module,_LazyDescr.__init__,_LazyDescr.__get__,MovedModule.__init__,MovedModule._resolve,MovedAttribute.__init__,MovedAttribute._resolve,add_move,remove_move,iterkeys,itervalues,iteritems,with_metaclass,get_unbound_function,callable,get_unbound_function,Iterator.next,b,u,b,u,reraise,exec_,print_,X.__len__,advance_iterator,int2byte,write",
        "requests/packages/urllib3/packages/ssl_match_hostname/_implementation.py:_dnsname_match,match_hostname",
        "requests/packages/urllib3/util/url.py:Url.__new__,Url.hostname,Url.request_uri,Url.netloc,Url.url,Url.__str__,split_first,parse_url,get_host",
        "requests/packages/urllib3/util/retry.py:Retry.__init__,Retry.new,Retry.from_int,Retry.get_backoff_time,Retry.sleep,Retry._is_connection_error,Retry._is_read_error,Retry.is_forced_retry,Retry.is_exhausted,Retry.increment,Retry.__repr__",
        "requests/packages/urllib3/util/timeout.py:current_time,Timeout.__init__,Timeout.__str__,Timeout._validate_timeout,Timeout.from_float,Timeout.clone,Timeout.start_connect,Timeout.get_connect_duration,Timeout.connect_timeout,Timeout.read_timeout",
        "requests/packages/urllib3/util/connection.py:is_connection_dropped,create_connection,_set_socket_options",
        "requests/packages/urllib3/util/response.py:is_fp_closed",
        "requests/packages/urllib3/util/ssl_.py:assert_fingerprint,resolve_cert_reqs,resolve_ssl_version,create_urllib3_context,ssl_wrap_socket,SSLContext.__init__,SSLContext.load_cert_chain,SSLContext.load_verify_locations,SSLContext.set_ciphers,SSLContext.wrap_socket",
        "requests/packages/urllib3/util/request.py:make_headers",
        "requests/packages/urllib3/contrib/ntlmpool.py:NTLMConnectionPool.__init__,NTLMConnectionPool._new_conn,NTLMConnectionPool.urlopen",
        "requests/packages/urllib3/contrib/pyopenssl.py:inject_into_urllib3,extract_from_urllib3,get_subj_alt_name,WrappedSocket.__init__,WrappedSocket.fileno,WrappedSocket.makefile,WrappedSocket.recv,WrappedSocket.settimeout,WrappedSocket._send_until_done,WrappedSocket.sendall,WrappedSocket.close,WrappedSocket.getpeercert,WrappedSocket._reuse,WrappedSocket._drop,_verify_callback,ssl_wrap_socket"
    ]
}