{
    "pr": "pydata/xarray/6889",
    "problem": "Alignment of dataset with MultiIndex fails after applying xr.concat  \n### What happened?\n\nAfter applying the `concat` function to a dataset with a Multiindex, a lot of functions related to indexing are broken. For example, it is not possible to apply `reindex_like` to itself anymore. \r\n\r\nThe error is raised in the alignment module. It seems that the function `find_matching_indexes` does not find indexes that belong to the same dimension. \n\n### What did you expect to happen?\n\nI expected the alignment to be functional and that these basic functions work.  \n\n### Minimal Complete Verifiable Example\n\n```Python\nimport xarray as xr\r\nimport pandas as pd\r\n\r\nindex = pd.MultiIndex.from_product([[1,2], ['a', 'b']], names=('level1', 'level2'))\r\nindex.name = 'dim'\r\n\r\nvar = xr.DataArray(1, coords=[index])\r\nds = xr.Dataset({\"var\":var})\r\n\r\nnew = xr.concat([ds], dim='newdim')\r\nxr.Dataset(new) # breaks\r\nnew.reindex_like(new) # breaks\n```\n\n\n### MVCE confirmation\n\n- [X] Minimal example \u2014 the example is as focused as reasonably possible to demonstrate the underlying issue in xarray.\n- [X] Complete example \u2014 the example is self-contained, including all data and the text of any traceback.\n- [X] Verifiable example \u2014 the example copy & pastes into an IPython prompt or [Binder notebook](https://mybinder.org/v2/gh/pydata/xarray/main?urlpath=lab/tree/doc/examples/blank_template.ipynb), returning the result.\n- [X] New issue \u2014 a search of GitHub Issues suggests this is not a duplicate.\n\n### Relevant log output\n\n```Python\nTraceback (most recent call last):\r\n\r\n  File \"/tmp/ipykernel_407170/4030736219.py\", line 11, in <cell line: 11>\r\n    xr.Dataset(new) # breaks\r\n\r\n  File \"/home/fabian/.miniconda3/lib/python3.10/site-packages/xarray/core/dataset.py\", line 599, in __init__\r\n    variables, coord_names, dims, indexes, _ = merge_data_and_coords(\r\n\r\n  File \"/home/fabian/.miniconda3/lib/python3.10/site-packages/xarray/core/merge.py\", line 575, in merge_data_and_coords\r\n    return merge_core(\r\n\r\n  File \"/home/fabian/.miniconda3/lib/python3.10/site-packages/xarray/core/merge.py\", line 752, in merge_core\r\n    aligned = deep_align(\r\n\r\n  File \"/home/fabian/.miniconda3/lib/python3.10/site-packages/xarray/core/alignment.py\", line 827, in deep_align\r\n    aligned = align(\r\n\r\n  File \"/home/fabian/.miniconda3/lib/python3.10/site-packages/xarray/core/alignment.py\", line 764, in align\r\n    aligner.align()\r\n\r\n  File \"/home/fabian/.miniconda3/lib/python3.10/site-packages/xarray/core/alignment.py\", line 550, in align\r\n    self.assert_no_index_conflict()\r\n\r\n  File \"/home/fabian/.miniconda3/lib/python3.10/site-packages/xarray/core/alignment.py\", line 319, in assert_no_index_conflict\r\n    raise ValueError(\r\n\r\nValueError: cannot re-index or align objects with conflicting indexes found for the following dimensions: 'dim' (2 conflicting indexes)\r\nConflicting indexes may occur when\r\n- they relate to different sets of coordinate and/or dimension names\r\n- they don't have the same type\r\n- they may be used to reindex data along common dimensions\n```\n\n\n### Anything else we need to know?\n\n_No response_\n\n### Environment\n\n<details>\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.10.5 | packaged by conda-forge | (main, Jun 14 2022, 07:04:59) [GCC 10.3.0]\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 5.15.0-41-generic\r\nmachine: x86_64\r\nprocessor: x86_64\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.UTF-8\r\nLOCALE: ('en_US', 'UTF-8')\r\nlibhdf5: 1.12.1\r\nlibnetcdf: 4.8.1\r\n\r\nxarray: 2022.6.0\r\npandas: 1.4.2\r\nnumpy: 1.21.6\r\nscipy: 1.8.1\r\nnetCDF4: 1.6.0\r\npydap: None\r\nh5netcdf: None\r\nh5py: 3.6.0\r\nNio: None\r\nzarr: None\r\ncftime: 1.5.1.1\r\nnc_time_axis: None\r\nPseudoNetCDF: None\r\nrasterio: 1.2.10\r\ncfgrib: None\r\niris: None\r\nbottleneck: 1.3.4\r\ndask: 2022.6.1\r\ndistributed: 2022.6.1\r\nmatplotlib: 3.5.1\r\ncartopy: 0.20.2\r\nseaborn: 0.11.2\r\nnumbagg: None\r\nfsspec: 2022.3.0\r\ncupy: None\r\npint: None\r\nsparse: 0.13.0\r\nflox: None\r\nnumpy_groupies: None\r\nsetuptools: 61.2.0\r\npip: 22.1.2\r\nconda: 4.13.0\r\npytest: 7.1.2\r\nIPython: 7.33.0\r\nsphinx: 5.0.2\r\n/home/fabian/.miniconda3/lib/python3.10/site-packages/_distutils_hack/__init__.py:30: UserWarning: Setuptools is replacing distutils.\r\n  warnings.warn(\"Setuptools is replacing distutils.\")\r\n\r\n</details>\r\n\n",
    "hint": "",
    "base": "790a444b11c244fd2d33e2d2484a590f8fc000ff",
    "section": 0,
    "files": [
        "conftest.py:pytest_addoption,pytest_runtest_setup,add_standard_imports",
        "xarray/testing.py:ensure_warnings,_decode_string_data,_data_allclose_or_equiv,assert_equal,assert_identical,assert_allclose,_format_message,assert_duckarray_allclose,assert_duckarray_equal,assert_chunks_equal,_assert_indexes_invariants_checks,_assert_variable_invariants,_assert_dataarray_invariants,_assert_dataset_invariants,_assert_internal_invariants,wrapper,compat_variable",
        "xarray/conventions.py:NativeEndiannessArray.__init__,NativeEndiannessArray.dtype,NativeEndiannessArray.__getitem__,BoolTypeArray.__init__,BoolTypeArray.dtype,BoolTypeArray.__getitem__,_var_as_tuple,maybe_encode_nonstring_dtype,maybe_default_fill_value,maybe_encode_bools,_infer_dtype,ensure_not_multiindex,_copy_with_dtype,ensure_dtype_not_object,encode_cf_variable,decode_cf_variable,_update_bounds_attributes,_update_bounds_encoding,decode_cf_variables,decode_cf,cf_decoder,_encode_coordinates,encode_dataset_coordinates,cf_encoder,stackable",
        "xarray/convert.py:encode,_filter_attrs,from_cdms2,to_cdms2,_pick_attrs,_get_iris_args,to_iris,_iris_obj_to_attrs,_iris_cell_methods_to_str,_name,from_iris,set_cdms2_attrs",
        "xarray/tutorial.py:_construct_cache_dir,_check_netcdf_engine_installed,open_dataset,open_rasterio,load_dataset,scatter_example_dataset",
        "xarray/core/utils.py:alias_message,alias_warning,alias,_maybe_cast_to_cftimeindex,get_valid_numpy_dtype,maybe_coerce_to_str,safe_cast_to_index,maybe_wrap_array,equivalent,list_equiv,peek_at,update_safety_check,remove_incompatible_items,is_dict_like,is_full_slice,is_list_like,is_duck_array,either_dict_or_kwargs,_is_scalar,is_valid_numpy_dtype,to_0d_object_array,to_0d_array,dict_equiv,compat_dict_intersection,compat_dict_union,Frozen.__init__,Frozen.__getitem__,Frozen.__iter__,Frozen.__len__,Frozen.__contains__,Frozen.__repr__,FrozenDict,HybridMappingProxy.__init__,HybridMappingProxy.__getitem__,HybridMappingProxy.__iter__,HybridMappingProxy.__len__,OrderedSet.__init__,OrderedSet.__contains__,OrderedSet.__iter__,OrderedSet.__len__,OrderedSet.add,OrderedSet.discard,OrderedSet.update,OrderedSet.__repr__,NdimSizeLenMixin.ndim,NdimSizeLenMixin.size,NdimSizeLenMixin.__len__,NDArrayMixin.dtype,NDArrayMixin.shape,NDArrayMixin.__getitem__,NDArrayMixin.__repr__,ReprObject.__init__,ReprObject.__repr__,ReprObject.__eq__,ReprObject.__hash__,ReprObject.__dask_tokenize__,close_on_error,is_remote_uri,read_magic_number_from_file,try_read_magic_number_from_path,try_read_magic_number_from_file_or_path,is_uniform_spaced,hashable,iterable,iterable_of_hashable,decode_numpy_dict_values,ensure_us_time_resolution,HiddenKeyDict.__init__,HiddenKeyDict._raise_if_hidden,HiddenKeyDict.__setitem__,HiddenKeyDict.__getitem__,HiddenKeyDict.__delitem__,HiddenKeyDict.__iter__,HiddenKeyDict.__len__,infix_dims,get_temp_dimname,drop_dims_from_indexers,drop_missing_dims,UncachedAccessor.__init__,UncachedAccessor.__get__,UncachedAccessor.__get__,UncachedAccessor.__get__,iterate_nested,contains_only_dask_or_numpy,wrapper,is_scalar,is_scalar",
        "xarray/core/_typed_ops.py:DatasetOpsMixin._binary_op,DatasetOpsMixin.__add__,DatasetOpsMixin.__sub__,DatasetOpsMixin.__mul__,DatasetOpsMixin.__pow__,DatasetOpsMixin.__truediv__,DatasetOpsMixin.__floordiv__,DatasetOpsMixin.__mod__,DatasetOpsMixin.__and__,DatasetOpsMixin.__xor__,DatasetOpsMixin.__or__,DatasetOpsMixin.__lt__,DatasetOpsMixin.__le__,DatasetOpsMixin.__gt__,DatasetOpsMixin.__ge__,DatasetOpsMixin.__eq__,DatasetOpsMixin.__ne__,DatasetOpsMixin.__radd__,DatasetOpsMixin.__rsub__,DatasetOpsMixin.__rmul__,DatasetOpsMixin.__rpow__,DatasetOpsMixin.__rtruediv__,DatasetOpsMixin.__rfloordiv__,DatasetOpsMixin.__rmod__,DatasetOpsMixin.__rand__,DatasetOpsMixin.__rxor__,DatasetOpsMixin.__ror__,DatasetOpsMixin._inplace_binary_op,DatasetOpsMixin.__iadd__,DatasetOpsMixin.__isub__,DatasetOpsMixin.__imul__,DatasetOpsMixin.__ipow__,DatasetOpsMixin.__itruediv__,DatasetOpsMixin.__ifloordiv__,DatasetOpsMixin.__imod__,DatasetOpsMixin.__iand__,DatasetOpsMixin.__ixor__,DatasetOpsMixin.__ior__,DatasetOpsMixin._unary_op,DatasetOpsMixin.__neg__,DatasetOpsMixin.__pos__,DatasetOpsMixin.__abs__,DatasetOpsMixin.__invert__,DatasetOpsMixin.round,DatasetOpsMixin.argsort,DatasetOpsMixin.conj,DatasetOpsMixin.conjugate,DataArrayOpsMixin._binary_op,DataArrayOpsMixin.__add__,DataArrayOpsMixin.__sub__,DataArrayOpsMixin.__mul__,DataArrayOpsMixin.__pow__,DataArrayOpsMixin.__truediv__,DataArrayOpsMixin.__floordiv__,DataArrayOpsMixin.__mod__,DataArrayOpsMixin.__and__,DataArrayOpsMixin.__xor__,DataArrayOpsMixin.__or__,DataArrayOpsMixin.__lt__,DataArrayOpsMixin.__le__,DataArrayOpsMixin.__gt__,DataArrayOpsMixin.__ge__,DataArrayOpsMixin.__eq__,DataArrayOpsMixin.__ne__,DataArrayOpsMixin.__radd__,DataArrayOpsMixin.__rsub__,DataArrayOpsMixin.__rmul__,DataArrayOpsMixin.__rpow__,DataArrayOpsMixin.__rtruediv__,DataArrayOpsMixin.__rfloordiv__,DataArrayOpsMixin.__rmod__,DataArrayOpsMixin.__rand__,DataArrayOpsMixin.__rxor__,DataArrayOpsMixin.__ror__,DataArrayOpsMixin._inplace_binary_op,DataArrayOpsMixin.__iadd__,DataArrayOpsMixin.__isub__,DataArrayOpsMixin.__imul__,DataArrayOpsMixin.__ipow__,DataArrayOpsMixin.__itruediv__,DataArrayOpsMixin.__ifloordiv__,DataArrayOpsMixin.__imod__,DataArrayOpsMixin.__iand__,DataArrayOpsMixin.__ixor__,DataArrayOpsMixin.__ior__,DataArrayOpsMixin._unary_op,DataArrayOpsMixin.__neg__,DataArrayOpsMixin.__pos__,DataArrayOpsMixin.__abs__,DataArrayOpsMixin.__invert__,DataArrayOpsMixin.round,DataArrayOpsMixin.argsort,DataArrayOpsMixin.conj,DataArrayOpsMixin.conjugate,VariableOpsMixin._binary_op,VariableOpsMixin.__add__,VariableOpsMixin.__sub__,VariableOpsMixin.__mul__,VariableOpsMixin.__pow__,VariableOpsMixin.__truediv__,VariableOpsMixin.__floordiv__,VariableOpsMixin.__mod__,VariableOpsMixin.__and__,VariableOpsMixin.__xor__,VariableOpsMixin.__or__,VariableOpsMixin.__lt__,VariableOpsMixin.__le__,VariableOpsMixin.__gt__,VariableOpsMixin.__ge__,VariableOpsMixin.__eq__,VariableOpsMixin.__ne__,VariableOpsMixin.__radd__,VariableOpsMixin.__rsub__,VariableOpsMixin.__rmul__,VariableOpsMixin.__rpow__,VariableOpsMixin.__rtruediv__,VariableOpsMixin.__rfloordiv__,VariableOpsMixin.__rmod__,VariableOpsMixin.__rand__,VariableOpsMixin.__rxor__,VariableOpsMixin.__ror__,VariableOpsMixin._inplace_binary_op,VariableOpsMixin.__iadd__,VariableOpsMixin.__isub__,VariableOpsMixin.__imul__,VariableOpsMixin.__ipow__,VariableOpsMixin.__itruediv__,VariableOpsMixin.__ifloordiv__,VariableOpsMixin.__imod__,VariableOpsMixin.__iand__,VariableOpsMixin.__ixor__,VariableOpsMixin.__ior__,VariableOpsMixin._unary_op,VariableOpsMixin.__neg__,VariableOpsMixin.__pos__,VariableOpsMixin.__abs__,VariableOpsMixin.__invert__,VariableOpsMixin.round,VariableOpsMixin.argsort,VariableOpsMixin.conj,VariableOpsMixin.conjugate,DatasetGroupByOpsMixin._binary_op,DatasetGroupByOpsMixin.__add__,DatasetGroupByOpsMixin.__sub__,DatasetGroupByOpsMixin.__mul__,DatasetGroupByOpsMixin.__pow__,DatasetGroupByOpsMixin.__truediv__,DatasetGroupByOpsMixin.__floordiv__,DatasetGroupByOpsMixin.__mod__,DatasetGroupByOpsMixin.__and__,DatasetGroupByOpsMixin.__xor__,DatasetGroupByOpsMixin.__or__,DatasetGroupByOpsMixin.__lt__,DatasetGroupByOpsMixin.__le__,DatasetGroupByOpsMixin.__gt__,DatasetGroupByOpsMixin.__ge__,DatasetGroupByOpsMixin.__eq__,DatasetGroupByOpsMixin.__ne__,DatasetGroupByOpsMixin.__radd__,DatasetGroupByOpsMixin.__rsub__,DatasetGroupByOpsMixin.__rmul__,DatasetGroupByOpsMixin.__rpow__,DatasetGroupByOpsMixin.__rtruediv__,DatasetGroupByOpsMixin.__rfloordiv__,DatasetGroupByOpsMixin.__rmod__,DatasetGroupByOpsMixin.__rand__,DatasetGroupByOpsMixin.__rxor__,DatasetGroupByOpsMixin.__ror__,DataArrayGroupByOpsMixin._binary_op,DataArrayGroupByOpsMixin.__add__,DataArrayGroupByOpsMixin.__sub__,DataArrayGroupByOpsMixin.__mul__,DataArrayGroupByOpsMixin.__pow__,DataArrayGroupByOpsMixin.__truediv__,DataArrayGroupByOpsMixin.__floordiv__,DataArrayGroupByOpsMixin.__mod__,DataArrayGroupByOpsMixin.__and__,DataArrayGroupByOpsMixin.__xor__,DataArrayGroupByOpsMixin.__or__,DataArrayGroupByOpsMixin.__lt__,DataArrayGroupByOpsMixin.__le__,DataArrayGroupByOpsMixin.__gt__,DataArrayGroupByOpsMixin.__ge__,DataArrayGroupByOpsMixin.__eq__,DataArrayGroupByOpsMixin.__ne__,DataArrayGroupByOpsMixin.__radd__,DataArrayGroupByOpsMixin.__rsub__,DataArrayGroupByOpsMixin.__rmul__,DataArrayGroupByOpsMixin.__rpow__,DataArrayGroupByOpsMixin.__rtruediv__,DataArrayGroupByOpsMixin.__rfloordiv__,DataArrayGroupByOpsMixin.__rmod__,DataArrayGroupByOpsMixin.__rand__,DataArrayGroupByOpsMixin.__rxor__,DataArrayGroupByOpsMixin.__ror__",
        "xarray/core/parallel.py:unzip,assert_chunks_compatible,check_result_variables,dataset_to_dataarray,dataarray_to_dataset,make_meta,infer_template,make_dict,_get_chunk_slicer,map_blocks,_wrapper,subset_dataset_to_block",
        "xarray/core/concat.py:concat,concat,concat,_calc_concat_dim_index,_calc_concat_over,_parse_datasets,_dataset_concat,_dataarray_concat,process_subset_opt,ensure_common_dims,get_indexes",
        "xarray/core/resample.py:Resample.__init__,Resample._flox_reduce,Resample._drop_coords,Resample.pad,Resample.backfill,Resample.nearest,Resample.interpolate,Resample._interpolate,DataArrayResample.map,DataArrayResample.apply,DataArrayResample.asfreq,DatasetResample.map,DatasetResample.apply,DatasetResample.reduce,DatasetResample.asfreq",
        "xarray/core/dtypes.py:AlwaysGreaterThan.__gt__,AlwaysGreaterThan.__eq__,AlwaysLessThan.__lt__,AlwaysLessThan.__eq__,maybe_promote,get_fill_value,get_pos_infinity,get_neg_infinity,is_datetime_like,result_type",
        "xarray/core/alignment.py:reindex_variables,Aligner.__init__,Aligner._normalize_indexes,Aligner.find_matching_indexes,Aligner.find_matching_unindexed_dims,Aligner.assert_no_index_conflict,Aligner._need_reindex,Aligner._get_index_joiner,Aligner.align_indexes,Aligner.assert_unindexed_dim_sizes_equal,Aligner.override_indexes,Aligner._get_dim_pos_indexers,Aligner._get_indexes_and_vars,Aligner._reindex_one,Aligner.reindex_all,Aligner.align,align,deep_align,reindex,reindex_like,_get_broadcast_dims_map_common_coords,_broadcast_helper,broadcast,is_alignable,_set_dims,_broadcast_array,_broadcast_dataset",
        "xarray/core/pdcompat.py:count_not_none",
        "xarray/core/dataarray.py:_infer_coords_and_dims,_check_data_shape,_LocIndexer.__init__,_LocIndexer.__getitem__,_LocIndexer.__setitem__,DataArray.__init__,DataArray._construct_direct,DataArray._replace,DataArray._replace_maybe_drop_dims,DataArray._overwrite_indexes,DataArray._to_temp_dataset,DataArray._from_temp_dataset,DataArray._to_dataset_split,DataArray._to_dataset_whole,DataArray.to_dataset,DataArray.name,DataArray.name,DataArray.variable,DataArray.dtype,DataArray.shape,DataArray.size,DataArray.nbytes,DataArray.ndim,DataArray.__len__,DataArray.data,DataArray.data,DataArray.values,DataArray.values,DataArray.to_numpy,DataArray.as_numpy,DataArray._in_memory,DataArray.to_index,DataArray.dims,DataArray.dims,DataArray._item_key_to_dict,DataArray._getitem_coord,DataArray.__getitem__,DataArray.__setitem__,DataArray.__delitem__,DataArray._attr_sources,DataArray._item_sources,DataArray.__contains__,DataArray.loc,DataArray.attrs,DataArray.attrs,DataArray.encoding,DataArray.encoding,DataArray.indexes,DataArray.xindexes,DataArray.coords,DataArray.reset_coords,DataArray.reset_coords,DataArray.reset_coords,DataArray.__dask_tokenize__,DataArray.__dask_graph__,DataArray.__dask_keys__,DataArray.__dask_layers__,DataArray.__dask_optimize__,DataArray.__dask_scheduler__,DataArray.__dask_postcompute__,DataArray.__dask_postpersist__,DataArray._dask_finalize,DataArray.load,DataArray.compute,DataArray.persist,DataArray.copy,DataArray.__copy__,DataArray.__deepcopy__,DataArray.chunks,DataArray.chunksizes,DataArray.chunk,DataArray.isel,DataArray.sel,DataArray.head,DataArray.tail,DataArray.thin,DataArray.broadcast_like,DataArray._reindex_callback,DataArray.reindex_like,DataArray.reindex,DataArray.interp,DataArray.interp_like,DataArray.rename,DataArray.swap_dims,DataArray.expand_dims,DataArray.set_index,DataArray.reset_index,DataArray.reorder_levels,DataArray.stack,DataArray.unstack,DataArray.to_unstacked_dataset,DataArray.transpose,DataArray.T,DataArray.drop_vars,DataArray.drop,DataArray.drop_sel,DataArray.drop_isel,DataArray.dropna,DataArray.fillna,DataArray.interpolate_na,DataArray.ffill,DataArray.bfill,DataArray.combine_first,DataArray.reduce,DataArray.to_pandas,DataArray.to_dataframe,DataArray.to_series,DataArray.to_masked_array,DataArray.to_netcdf,DataArray.to_netcdf,DataArray.to_netcdf,DataArray.to_netcdf,DataArray.to_dict,DataArray.from_dict,DataArray.from_series,DataArray.to_cdms2,DataArray.from_cdms2,DataArray.to_iris,DataArray.from_iris,DataArray._all_compat,DataArray.broadcast_equals,DataArray.equals,DataArray.identical,DataArray._result_name,DataArray.__array_wrap__,DataArray.__matmul__,DataArray.__rmatmul__,DataArray._unary_op,DataArray._binary_op,DataArray._inplace_binary_op,DataArray._copy_attrs_from,DataArray._title_for_slice,DataArray.diff,DataArray.shift,DataArray.roll,DataArray.real,DataArray.imag,DataArray.dot,DataArray.sortby,DataArray.quantile,DataArray.rank,DataArray.differentiate,DataArray.integrate,DataArray.cumulative_integrate,DataArray.unify_chunks,DataArray.map_blocks,DataArray.polyfit,DataArray.pad,DataArray.idxmin,DataArray.idxmax,DataArray.argmin,DataArray.argmax,DataArray.query,DataArray.curvefit,DataArray.drop_duplicates,DataArray.convert_calendar,DataArray.interp_calendar,DataArray.groupby,DataArray.groupby_bins,DataArray.weighted,DataArray.rolling,DataArray.coarsen,DataArray.resample,subset,compat",
        "xarray/core/computation.py:_first_of_type,_all_of_type,_UFuncSignature.__init__,_UFuncSignature.all_input_core_dims,_UFuncSignature.all_output_core_dims,_UFuncSignature.all_core_dims,_UFuncSignature.dims_map,_UFuncSignature.num_inputs,_UFuncSignature.num_outputs,_UFuncSignature.__eq__,_UFuncSignature.__ne__,_UFuncSignature.__repr__,_UFuncSignature.__str__,_UFuncSignature.to_gufunc_string,result_name,_get_coords_list,build_output_coords_and_indexes,apply_dataarray_vfunc,ordered_set_union,ordered_set_intersection,assert_and_return_exact_match,join_dict_keys,collect_dict_values,_as_variables_or_variable,_unpack_dict_tuples,apply_dict_of_variables_vfunc,_fast_dataset,apply_dataset_vfunc,_iter_over_selections,apply_groupby_func,unified_dim_sizes,broadcast_compat_data,_vectorize,apply_variable_ufunc,apply_array_ufunc,apply_ufunc,cov,corr,_cov_corr,cross,dot,where,polyval,polyval,polyval,polyval,polyval,polyval,_ensure_numeric,_calc_idxminmax,unify_chunks,unify_chunks,unify_chunks,unify_chunks,unify_chunks,_cfoffset,to_floatable,_enumerate,func",
        "xarray/core/common.py:ImplementsArrayReduce._reduce_method,ImplementsDatasetReduce._reduce_method,AbstractArray.__bool__,AbstractArray.__float__,AbstractArray.__int__,AbstractArray.__complex__,AbstractArray.__array__,AbstractArray.__repr__,AbstractArray._repr_html_,AbstractArray.__format__,AbstractArray._iter,AbstractArray.__iter__,AbstractArray.get_axis_num,AbstractArray._get_axis_num,AbstractArray.sizes,AttrAccessMixin.__init_subclass__,AttrAccessMixin._attr_sources,AttrAccessMixin._item_sources,AttrAccessMixin.__getattr__,AttrAccessMixin._setattr_dict,AttrAccessMixin.__setattr__,AttrAccessMixin.__dir__,AttrAccessMixin._ipython_key_completions_,get_squeeze_dims,DataWithCoords.squeeze,DataWithCoords.clip,DataWithCoords.get_index,DataWithCoords._calc_assign_results,DataWithCoords.assign_coords,DataWithCoords.assign_attrs,DataWithCoords.pipe,DataWithCoords.rolling_exp,DataWithCoords._resample,DataWithCoords.where,DataWithCoords.set_close,DataWithCoords.close,DataWithCoords.isnull,DataWithCoords.notnull,DataWithCoords.isin,DataWithCoords.astype,DataWithCoords.__enter__,DataWithCoords.__exit__,DataWithCoords.__getitem__,full_like,full_like,full_like,full_like,full_like,full_like,_full_like_variable,zeros_like,zeros_like,zeros_like,zeros_like,zeros_like,zeros_like,ones_like,ones_like,ones_like,ones_like,ones_like,ones_like,get_chunksizes,is_np_datetime_like,is_np_timedelta_like,_contains_cftime_datetimes,contains_cftime_datetimes,_contains_datetime_like_objects,wrapped_func,wrapped_func,wrapped_func,wrapped_func,_dataarray_indexer,_dataset_indexer",
        "xarray/core/variable.py:as_variable,_maybe_wrap_data,_possibly_convert_objects,as_compatible_data,_as_array_or_item,Variable.__init__,Variable.dtype,Variable.shape,Variable.nbytes,Variable._in_memory,Variable.data,Variable.data,Variable.astype,Variable.load,Variable.compute,Variable.__dask_tokenize__,Variable.__dask_graph__,Variable.__dask_keys__,Variable.__dask_layers__,Variable.__dask_optimize__,Variable.__dask_scheduler__,Variable.__dask_postcompute__,Variable.__dask_postpersist__,Variable._dask_finalize,Variable.values,Variable.values,Variable.to_base_variable,Variable.to_index_variable,Variable.to_index,Variable.to_dict,Variable.dims,Variable.dims,Variable._parse_dimensions,Variable._item_key_to_tuple,Variable._broadcast_indexes,Variable._broadcast_indexes_basic,Variable._validate_indexers,Variable._broadcast_indexes_outer,Variable._nonzero,Variable._broadcast_indexes_vectorized,Variable.__getitem__,Variable._finalize_indexing_result,Variable._getitem_with_mask,Variable.__setitem__,Variable.attrs,Variable.attrs,Variable.encoding,Variable.encoding,Variable.copy,Variable._replace,Variable.__copy__,Variable.__deepcopy__,Variable.chunks,Variable.chunksizes,Variable.chunk,Variable.to_numpy,Variable.as_numpy,Variable._as_sparse,Variable._to_dense,Variable.isel,Variable.squeeze,Variable._shift_one_dim,Variable.shift,Variable._pad_options_dim_to_index,Variable.pad,Variable._roll_one_dim,Variable.roll,Variable.transpose,Variable.T,Variable.set_dims,Variable._stack_once,Variable.stack,Variable._unstack_once_full,Variable._unstack_once,Variable.unstack,Variable.fillna,Variable.where,Variable.clip,Variable.reduce,Variable.concat,Variable.equals,Variable.broadcast_equals,Variable.identical,Variable.no_conflicts,Variable.quantile,Variable.rank,Variable.rolling_window,Variable.coarsen,Variable.coarsen_reshape,Variable.isnull,Variable.notnull,Variable.real,Variable.imag,Variable.__array_wrap__,Variable._unary_op,Variable._binary_op,Variable._inplace_binary_op,Variable._to_numeric,Variable._unravel_argminmax,Variable.argmin,Variable.argmax,IndexVariable.__init__,IndexVariable.__dask_tokenize__,IndexVariable.load,IndexVariable.data,IndexVariable.values,IndexVariable.chunk,IndexVariable._as_sparse,IndexVariable._to_dense,IndexVariable._finalize_indexing_result,IndexVariable.__setitem__,IndexVariable.concat,IndexVariable.copy,IndexVariable.equals,IndexVariable._data_equals,IndexVariable.to_index_variable,IndexVariable.to_index,IndexVariable.level_names,IndexVariable.get_level_variable,IndexVariable.name,IndexVariable.name,IndexVariable._inplace_binary_op,_unified_dims,_broadcast_compat_variables,broadcast_variables,_broadcast_compat_data,concat,calculate_dimensions,_wrapper",
        "xarray/core/accessor_dt.py:_season_from_months,_access_through_cftimeindex,_access_through_series,_get_date_field,_round_through_series_or_index,_round_field,_strftime_through_cftimeindex,_strftime_through_series,_strftime,TimeAccessor.__init__,TimeAccessor._date_field,TimeAccessor._tslib_round_accessor,TimeAccessor.floor,TimeAccessor.ceil,TimeAccessor.round,DatetimeAccessor.strftime,DatetimeAccessor.isocalendar,DatetimeAccessor.year,DatetimeAccessor.month,DatetimeAccessor.day,DatetimeAccessor.hour,DatetimeAccessor.minute,DatetimeAccessor.second,DatetimeAccessor.microsecond,DatetimeAccessor.nanosecond,DatetimeAccessor.weekofyear,DatetimeAccessor.dayofweek,DatetimeAccessor.weekday_name,DatetimeAccessor.dayofyear,DatetimeAccessor.quarter,DatetimeAccessor.days_in_month,DatetimeAccessor.season,DatetimeAccessor.time,DatetimeAccessor.date,DatetimeAccessor.is_month_start,DatetimeAccessor.is_month_end,DatetimeAccessor.is_quarter_start,DatetimeAccessor.is_quarter_end,DatetimeAccessor.is_year_start,DatetimeAccessor.is_year_end,DatetimeAccessor.is_leap_year,DatetimeAccessor.calendar,TimedeltaAccessor.days,TimedeltaAccessor.seconds,TimedeltaAccessor.microseconds,TimedeltaAccessor.nanoseconds,CombinedDatetimelikeAccessor.__new__",
        "xarray/core/merge.py:Context.__init__,broadcast_dimension_size,unique_variable,_assert_compat_valid,_assert_prioritized_valid,merge_collected,collect_variables_and_indexes,collect_from_coordinates,merge_coordinates_without_align,determine_coords,coerce_pandas_values,_get_priority_vars_and_indexes,merge_coords,merge_data_and_coords,_create_indexes_from_coords,assert_valid_explicit_coords,merge_attrs,merge_core,merge,dataset_merge_method,dataset_update_method,append,append_all",
        "xarray/core/missing.py:_get_nan_block_lengths,BaseInterpolator.__call__,BaseInterpolator.__repr__,NumpyInterpolator.__init__,NumpyInterpolator.__call__,ScipyInterpolator.__init__,SplineInterpolator.__init__,_apply_over_vars_with_dim,get_clean_interp_index,interp_na,func_interpolate_na,_bfill,ffill,bfill,_import_interpolant,_get_interpolator,_get_interpolator_nd,_get_valid_fill_mask,_localize,_floatize_x,interp,interp_func,_interp1d,_interpnd,_dask_aware_interpnd,decompose_interp",
        "xarray/core/groupby.py:check_reduce_dims,unique_value_groups,_dummy_copy,_is_one_or_none,_consolidate_slices,_inverse_permutation_indices,_DummyGroup.__init__,_DummyGroup.dims,_DummyGroup.ndim,_DummyGroup.values,_DummyGroup.data,_DummyGroup.shape,_DummyGroup.__getitem__,_ensure_1d,_unique_and_monotonic,_apply_loffset,GroupBy.__init__,GroupBy.sizes,GroupBy.map,GroupBy.reduce,GroupBy.groups,GroupBy.__getitem__,GroupBy.__len__,GroupBy.__iter__,GroupBy.__repr__,GroupBy._get_index_and_items,GroupBy._iter_grouped,GroupBy._infer_concat_args,GroupBy._binary_op,GroupBy._maybe_restore_empty_groups,GroupBy._maybe_unstack,GroupBy._flox_reduce,GroupBy.fillna,GroupBy.quantile,GroupBy.where,GroupBy._first_or_last,GroupBy.first,GroupBy.last,GroupBy.assign_coords,_maybe_reorder,DataArrayGroupByBase.dims,DataArrayGroupByBase._iter_grouped_shortcut,DataArrayGroupByBase._concat_shortcut,DataArrayGroupByBase._restore_dim_order,DataArrayGroupByBase.map,DataArrayGroupByBase.apply,DataArrayGroupByBase._combine,DataArrayGroupByBase.reduce,DatasetGroupByBase.dims,DatasetGroupByBase.map,DatasetGroupByBase.apply,DatasetGroupByBase._combine,DatasetGroupByBase.reduce,DatasetGroupByBase.assign,lookup_order,reduce_array,reduce_dataset",
        "xarray/core/accessor_str.py:_contains_obj_type,_contains_str_like,_contains_compiled_re,_contains_callable,_apply_str_ufunc,StringAccessor.__init__,StringAccessor._stringify,StringAccessor._apply,StringAccessor._re_compile,StringAccessor.len,StringAccessor.__getitem__,StringAccessor.__add__,StringAccessor.__mul__,StringAccessor.__mod__,StringAccessor.get,StringAccessor.slice,StringAccessor.slice_replace,StringAccessor.cat,StringAccessor.join,StringAccessor.format,StringAccessor.capitalize,StringAccessor.lower,StringAccessor.swapcase,StringAccessor.title,StringAccessor.upper,StringAccessor.casefold,StringAccessor.normalize,StringAccessor.isalnum,StringAccessor.isalpha,StringAccessor.isdecimal,StringAccessor.isdigit,StringAccessor.islower,StringAccessor.isnumeric,StringAccessor.isspace,StringAccessor.istitle,StringAccessor.isupper,StringAccessor.count,StringAccessor.startswith,StringAccessor.endswith,StringAccessor.pad,StringAccessor._padder,StringAccessor.center,StringAccessor.ljust,StringAccessor.rjust,StringAccessor.zfill,StringAccessor.contains,StringAccessor.match,StringAccessor.strip,StringAccessor.lstrip,StringAccessor.rstrip,StringAccessor.wrap,StringAccessor.translate,StringAccessor.repeat,StringAccessor.find,StringAccessor.rfind,StringAccessor.index,StringAccessor.rindex,StringAccessor.replace,StringAccessor.extract,StringAccessor.extractall,StringAccessor.findall,StringAccessor._partitioner,StringAccessor.partition,StringAccessor.rpartition,StringAccessor._splitter,StringAccessor.split,StringAccessor.rsplit,StringAccessor.get_dummies,StringAccessor.decode,StringAccessor.encode,func,f,func,overfunc,_get_res_single,_get_res_multi,_get_res,func,_dosplit,func",
        "xarray/core/ops.py:fillna,where_method,_call_possibly_missing_method,_values_method_wrapper,_method_wrapper,_func_slash_method_wrapper,inject_reduce_methods,inject_cum_methods,op_str,get_op,inplace_to_noninplace_op,inject_numpy_same,IncludeReduceMethods.__init_subclass__,IncludeCumMethods.__init_subclass__,IncludeNumpySameMethods.__init_subclass__,func,func,func",
        "xarray/core/weighted.py:Weighted.__init__,Weighted._check_dim,Weighted._reduce,Weighted._sum_of_weights,Weighted._sum_of_squares,Weighted._weighted_sum,Weighted._weighted_mean,Weighted._weighted_var,Weighted._weighted_std,Weighted._weighted_quantile,Weighted._implementation,Weighted.sum_of_weights,Weighted.sum_of_squares,Weighted.sum,Weighted.mean,Weighted.var,Weighted.std,Weighted.quantile,Weighted.__repr__,DataArrayWeighted._implementation,DatasetWeighted._implementation,_inject_docstring,_weight_check,_get_h,_weighted_quantile_1d",
        "xarray/core/dask_array_ops.py:dask_rolling_wrapper,least_squares,push,_fill_with_last_one",
        "xarray/core/duck_array_ops.py:_dask_or_eager_func,fail_on_dask_array_input,isnull,notnull,gradient,trapz,cumulative_trapezoid,astype,asarray,as_shared_dtype,lazy_array_equiv,allclose_or_equiv,array_equiv,array_notnull_equiv,count,where,where_method,fillna,concatenate,stack,_ignore_warnings_if,_create_nan_agg_method,_datetime_nanmin,datetime_to_numeric,timedelta_to_numeric,_to_pytimedelta,np_timedelta64_to_float,pd_timedelta_to_float,_timedelta_to_seconds,py_timedelta_to_float,mean,_nd_cum_func,cumprod,cumsum,first,last,sliding_window_view,least_squares,push,f,f",
        "xarray/core/dask_array_compat.py:_validate_pad_output_shape,pad",
        "xarray/core/nputils.py:_select_along_axis,nanfirst,nanlast,inverse_permutation,_ensure_bool_is_ndarray,array_eq,array_ne,_is_contiguous,_advanced_indexer_subspaces,NumpyVIndexAdapter.__init__,NumpyVIndexAdapter.__getitem__,NumpyVIndexAdapter.__setitem__,_create_bottleneck_method,_nanpolyfit_1d,warn_on_deficient_rank,least_squares,f",
        "xarray/core/pycompat.py:DuckArrayModule.__init__,is_dask_collection,is_duck_dask_array",
        "xarray/core/resample_cftime.py:CFTimeGrouper.__init__,CFTimeGrouper.first_items,_get_time_bins,_adjust_bin_edges,_get_range_edges,_adjust_dates_anchored,exact_cftime_datetime_difference",
        "xarray/core/nanops.py:_maybe_null_out,_nan_argminmax_object,_nan_minmax_object,nanmin,nanmax,nanargmin,nanargmax,nansum,_nanmean_ddof_object,nanmean,nanmedian,_nanvar_object,nanvar,nanstd,nanprod,nancumsum,nancumprod",
        "xarray/core/indexes.py:Index.from_variables,Index.concat,Index.stack,Index.unstack,Index.create_variables,Index.to_pandas_index,Index.isel,Index.sel,Index.join,Index.reindex_like,Index.equals,Index.roll,Index.rename,Index.__copy__,Index.__deepcopy__,Index.copy,Index.__getitem__,_sanitize_slice_element,_query_slice,_asarray_tuplesafe,_is_nested_tuple,normalize_label,as_scalar,get_indexer_nd,PandasIndex.__init__,PandasIndex._replace,PandasIndex.from_variables,PandasIndex._concat_indexes,PandasIndex.concat,PandasIndex.create_variables,PandasIndex.to_pandas_index,PandasIndex.isel,PandasIndex.sel,PandasIndex.equals,PandasIndex.join,PandasIndex.reindex_like,PandasIndex.roll,PandasIndex.rename,PandasIndex.copy,PandasIndex.__getitem__,_check_dim_compat,remove_unused_levels_categories,PandasMultiIndex.__init__,PandasMultiIndex._replace,PandasMultiIndex.from_variables,PandasMultiIndex.concat,PandasMultiIndex.stack,PandasMultiIndex.unstack,PandasMultiIndex.from_variables_maybe_expand,PandasMultiIndex.keep_levels,PandasMultiIndex.reorder_levels,PandasMultiIndex.create_variables,PandasMultiIndex.sel,PandasMultiIndex.join,PandasMultiIndex.rename,create_default_index_implicit,Indexes.__init__,Indexes._coord_name_id,Indexes._id_index,Indexes._id_coord_names,Indexes.variables,Indexes.dims,Indexes.copy,Indexes.get_unique,Indexes.is_multi,Indexes.get_all_coords,Indexes.get_all_dims,Indexes.group_by_index,Indexes.to_pandas_indexes,Indexes.copy_indexes,Indexes.__iter__,Indexes.__len__,Indexes.__contains__,Indexes.__getitem__,Indexes.__repr__,default_indexes,indexes_equal,indexes_all_equal,_apply_indexes,isel_indexes,roll_indexes,filter_indexes_from_coords,assert_no_index_corrupted,check_variables",
        "xarray/core/dataset.py:_get_virtual_variable,_assert_empty,_get_chunk,_maybe_chunk,as_dataset,_get_func_args,_initialize_curvefit_params,DataVariables.__init__,DataVariables.__iter__,DataVariables.__len__,DataVariables.__contains__,DataVariables.__getitem__,DataVariables.__repr__,DataVariables.variables,DataVariables.dtypes,DataVariables._ipython_key_completions_,_LocIndexer.__init__,_LocIndexer.__getitem__,_LocIndexer.__setitem__,Dataset.__init__,Dataset.load_store,Dataset.variables,Dataset.attrs,Dataset.attrs,Dataset.encoding,Dataset.encoding,Dataset.dims,Dataset.sizes,Dataset.dtypes,Dataset.load,Dataset.__dask_tokenize__,Dataset.__dask_graph__,Dataset.__dask_keys__,Dataset.__dask_layers__,Dataset.__dask_optimize__,Dataset.__dask_scheduler__,Dataset.__dask_postcompute__,Dataset.__dask_postpersist__,Dataset._dask_postcompute,Dataset._dask_postpersist,Dataset.compute,Dataset._persist_inplace,Dataset.persist,Dataset._construct_direct,Dataset._replace,Dataset._replace_with_new_dims,Dataset._replace_vars_and_dims,Dataset._overwrite_indexes,Dataset.copy,Dataset.as_numpy,Dataset._copy_listed,Dataset._construct_dataarray,Dataset.__copy__,Dataset.__deepcopy__,Dataset._attr_sources,Dataset._item_sources,Dataset.__contains__,Dataset.__len__,Dataset.__bool__,Dataset.__iter__,Dataset.__array__,Dataset.nbytes,Dataset.loc,Dataset.__getitem__,Dataset.__getitem__,Dataset.__getitem__,Dataset.__setitem__,Dataset._setitem_check,Dataset.__delitem__,Dataset._all_compat,Dataset.broadcast_equals,Dataset.equals,Dataset.identical,Dataset.indexes,Dataset.xindexes,Dataset.coords,Dataset.data_vars,Dataset.set_coords,Dataset.reset_coords,Dataset.dump_to_store,Dataset.to_netcdf,Dataset.to_netcdf,Dataset.to_netcdf,Dataset.to_netcdf,Dataset.to_zarr,Dataset.to_zarr,Dataset.to_zarr,Dataset.__repr__,Dataset._repr_html_,Dataset.info,Dataset.chunks,Dataset.chunksizes,Dataset.chunk,Dataset._validate_indexers,Dataset._validate_interp_indexers,Dataset._get_indexers_coords_and_indexes,Dataset.isel,Dataset._isel_fancy,Dataset.sel,Dataset.head,Dataset.tail,Dataset.thin,Dataset.broadcast_like,Dataset._reindex_callback,Dataset.reindex_like,Dataset.reindex,Dataset._reindex,Dataset.interp,Dataset.interp_like,Dataset._rename_vars,Dataset._rename_dims,Dataset._rename_indexes,Dataset._rename_all,Dataset.rename,Dataset.rename_dims,Dataset.rename_vars,Dataset.swap_dims,Dataset.expand_dims,Dataset.set_index,Dataset.reset_index,Dataset.reorder_levels,Dataset._get_stack_index,Dataset._stack_once,Dataset.stack,Dataset.to_stacked_array,Dataset._unstack_once,Dataset._unstack_full_reindex,Dataset.unstack,Dataset.update,Dataset.merge,Dataset._assert_all_in_dataset,Dataset.drop_vars,Dataset.drop,Dataset.drop_sel,Dataset.drop_isel,Dataset.drop_dims,Dataset.transpose,Dataset.dropna,Dataset.fillna,Dataset.interpolate_na,Dataset.ffill,Dataset.bfill,Dataset.combine_first,Dataset.reduce,Dataset.map,Dataset.apply,Dataset.assign,Dataset.to_array,Dataset._normalize_dim_order,Dataset.to_pandas,Dataset._to_dataframe,Dataset.to_dataframe,Dataset._set_sparse_data_from_dataframe,Dataset._set_numpy_data_from_dataframe,Dataset.from_dataframe,Dataset.to_dask_dataframe,Dataset.to_dict,Dataset.from_dict,Dataset._unary_op,Dataset._binary_op,Dataset._inplace_binary_op,Dataset._calculate_binary_op,Dataset._copy_attrs_from,Dataset.diff,Dataset.shift,Dataset.roll,Dataset.sortby,Dataset.quantile,Dataset.rank,Dataset.differentiate,Dataset.integrate,Dataset._integrate_one,Dataset.cumulative_integrate,Dataset.real,Dataset.imag,Dataset.filter_by_attrs,Dataset.unify_chunks,Dataset.map_blocks,Dataset.polyfit,Dataset.pad,Dataset.idxmin,Dataset.idxmax,Dataset.argmin,Dataset.argmax,Dataset.query,Dataset.curvefit,Dataset.drop_duplicates,Dataset.convert_calendar,Dataset.interp_calendar,Dataset.groupby,Dataset.groupby_bins,Dataset.weighted,Dataset.rolling,Dataset.coarsen,Dataset.resample,_initialize_feasible,compat,maybe_variable,_validate_interp_indexer,ensure_stackable,apply_over_both,_wrapper",
        "xarray/core/arithmetic.py:SupportsArithmetic.__array_ufunc__",
        "xarray/core/coordinates.py:Coordinates.__getitem__,Coordinates.__setitem__,Coordinates._names,Coordinates.dims,Coordinates.dtypes,Coordinates.indexes,Coordinates.xindexes,Coordinates.variables,Coordinates._update_coords,Coordinates._maybe_drop_multiindex_coords,Coordinates.__iter__,Coordinates.__len__,Coordinates.__contains__,Coordinates.__repr__,Coordinates.to_dataset,Coordinates.to_index,Coordinates.update,Coordinates._merge_raw,Coordinates._merge_inplace,Coordinates.merge,DatasetCoordinates.__init__,DatasetCoordinates._names,DatasetCoordinates.dims,DatasetCoordinates.dtypes,DatasetCoordinates.variables,DatasetCoordinates.__getitem__,DatasetCoordinates.to_dataset,DatasetCoordinates._update_coords,DatasetCoordinates._maybe_drop_multiindex_coords,DatasetCoordinates.__delitem__,DatasetCoordinates._ipython_key_completions_,DataArrayCoordinates.__init__,DataArrayCoordinates.dims,DataArrayCoordinates.dtypes,DataArrayCoordinates._names,DataArrayCoordinates.__getitem__,DataArrayCoordinates._update_coords,DataArrayCoordinates._maybe_drop_multiindex_coords,DataArrayCoordinates.variables,DataArrayCoordinates.to_dataset,DataArrayCoordinates.__delitem__,DataArrayCoordinates._ipython_key_completions_,drop_coords,assert_coordinate_consistent",
        "xarray/core/rolling_exp.py:_get_alpha,move_exp_nanmean,move_exp_nansum,_get_center_of_mass,RollingExp.__init__,RollingExp.mean,RollingExp.sum",
        "xarray/core/formatting_html.py:_load_static_files,short_data_repr_html,format_dims,summarize_attrs,_icon,summarize_variable,summarize_coords,summarize_vars,collapsible_section,_mapping_section,dim_section,array_section,_obj_repr,array_repr,dataset_repr",
        "xarray/core/formatting.py:pretty_print,maybe_truncate,wrap_indent,_get_indexer_at_least_n_items,first_n_items,last_n_items,last_item,calc_max_rows_first,calc_max_rows_last,format_timestamp,format_timedelta,format_item,format_items,format_array_flat,inline_dask_repr,inline_sparse_repr,inline_variable_array_repr,summarize_variable,summarize_attr,_calculate_col_width,_mapping_repr,coords_repr,indexes_repr,dim_summary,_element_formatter,dim_summary_limited,unindexed_dims_repr,set_numpy_options,limit_lines,short_numpy_repr,short_data_repr,array_repr,dataset_repr,diff_dim_summary,_diff_mapping_repr,diff_coords_repr,_compat_to_str,diff_array_repr,diff_dataset_repr,extra_items_repr",
        "xarray/core/indexing.py:IndexSelResult.as_tuple,merge_sel_results,group_indexers_by_index,map_index_queries,expanded_indexer,_expand_slice,_normalize_slice,slice_slice,_index_indexer_1d,ExplicitIndexer.__init__,ExplicitIndexer.tuple,ExplicitIndexer.__repr__,as_integer_or_none,as_integer_slice,BasicIndexer.__init__,OuterIndexer.__init__,VectorizedIndexer.__init__,ExplicitlyIndexedNDArrayMixin.__array__,ImplicitToExplicitIndexingAdapter.__init__,ImplicitToExplicitIndexingAdapter.__array__,ImplicitToExplicitIndexingAdapter.__getitem__,LazilyIndexedArray.__init__,LazilyIndexedArray._updated_key,LazilyIndexedArray.shape,LazilyIndexedArray.__array__,LazilyIndexedArray.transpose,LazilyIndexedArray.__getitem__,LazilyIndexedArray.__setitem__,LazilyIndexedArray.__repr__,LazilyVectorizedIndexedArray.__init__,LazilyVectorizedIndexedArray.shape,LazilyVectorizedIndexedArray.__array__,LazilyVectorizedIndexedArray._updated_key,LazilyVectorizedIndexedArray.__getitem__,LazilyVectorizedIndexedArray.transpose,LazilyVectorizedIndexedArray.__setitem__,LazilyVectorizedIndexedArray.__repr__,_wrap_numpy_scalars,CopyOnWriteArray.__init__,CopyOnWriteArray._ensure_copied,CopyOnWriteArray.__array__,CopyOnWriteArray.__getitem__,CopyOnWriteArray.transpose,CopyOnWriteArray.__setitem__,CopyOnWriteArray.__deepcopy__,MemoryCachedArray.__init__,MemoryCachedArray._ensure_cached,MemoryCachedArray.__array__,MemoryCachedArray.__getitem__,MemoryCachedArray.transpose,MemoryCachedArray.__setitem__,as_indexable,_outer_to_vectorized_indexer,_outer_to_numpy_indexer,_combine_indexers,explicit_indexing_adapter,decompose_indexer,_decompose_slice,_decompose_vectorized_indexer,_decompose_outer_indexer,_arrayize_vectorized_indexer,_dask_array_with_chunks_hint,_logical_any,_masked_result_drop_slice,create_mask,_posify_mask_subindexer,posify_mask_indexer,is_fancy_indexer,NumpyIndexingAdapter.__init__,NumpyIndexingAdapter._indexing_array_and_key,NumpyIndexingAdapter.transpose,NumpyIndexingAdapter.__getitem__,NumpyIndexingAdapter.__setitem__,NdArrayLikeIndexingAdapter.__init__,ArrayApiIndexingAdapter.__init__,ArrayApiIndexingAdapter.__getitem__,ArrayApiIndexingAdapter.__setitem__,ArrayApiIndexingAdapter.transpose,DaskIndexingAdapter.__init__,DaskIndexingAdapter.__getitem__,DaskIndexingAdapter.__setitem__,DaskIndexingAdapter.transpose,PandasIndexingAdapter.__init__,PandasIndexingAdapter.dtype,PandasIndexingAdapter.__array__,PandasIndexingAdapter.shape,PandasIndexingAdapter._convert_scalar,PandasIndexingAdapter.__getitem__,PandasIndexingAdapter.transpose,PandasIndexingAdapter.__repr__,PandasIndexingAdapter.copy,PandasMultiIndexingAdapter.__init__,PandasMultiIndexingAdapter.__array__,PandasMultiIndexingAdapter._convert_scalar,PandasMultiIndexingAdapter.__getitem__,PandasMultiIndexingAdapter.__repr__,PandasMultiIndexingAdapter._get_array_subset,PandasMultiIndexingAdapter._repr_inline_,PandasMultiIndexingAdapter._repr_html_,PandasMultiIndexingAdapter.copy",
        "xarray/core/rolling.py:Rolling.__init__,Rolling.__repr__,Rolling.__len__,Rolling.ndim,Rolling._reduce_method,Rolling._mean,Rolling._counts,Rolling.count,Rolling._mapping_to_list,Rolling._get_keep_attrs,DataArrayRolling.__init__,DataArrayRolling.__iter__,DataArrayRolling.construct,DataArrayRolling._construct,DataArrayRolling.reduce,DataArrayRolling._counts,DataArrayRolling._bottleneck_reduce,DataArrayRolling._numpy_or_bottleneck_reduce,DatasetRolling.__init__,DatasetRolling._dataset_implementation,DatasetRolling.reduce,DatasetRolling._counts,DatasetRolling._numpy_or_bottleneck_reduce,DatasetRolling.construct,Coarsen.__init__,Coarsen._get_keep_attrs,Coarsen.__repr__,Coarsen.construct,DataArrayCoarsen._reduce_method,DataArrayCoarsen.reduce,DatasetCoarsen._reduce_method,DatasetCoarsen.reduce,method,wrapped_func,wrapped_func",
        "xarray/core/combine.py:_infer_concat_order_from_positions,_infer_tile_ids_from_nested_list,_ensure_same_types,_infer_concat_order_from_coords,_check_dimension_depth_tile_ids,_check_shape_tile_ids,_combine_nd,_combine_all_along_first_dim,_combine_1d,_new_tile_id,_nested_combine,combine_nested,vars_as_keys,_combine_single_variable_hypercube,combine_by_coords",
        "xarray/core/npcompat.py:_SupportsArray.__array__,_SupportsDType.dtype,sliding_window_view",
        "xarray/core/_reductions.py:DatasetReductions.reduce,DatasetReductions.count,DatasetReductions.all,DatasetReductions.any,DatasetReductions.max,DatasetReductions.min,DatasetReductions.mean,DatasetReductions.prod,DatasetReductions.sum,DatasetReductions.std,DatasetReductions.var,DatasetReductions.median,DataArrayReductions.reduce,DataArrayReductions.count,DataArrayReductions.all,DataArrayReductions.any,DataArrayReductions.max,DataArrayReductions.min,DataArrayReductions.mean,DataArrayReductions.prod,DataArrayReductions.sum,DataArrayReductions.std,DataArrayReductions.var,DataArrayReductions.median,DatasetGroupByReductions.reduce,DatasetGroupByReductions._flox_reduce,DatasetGroupByReductions.count,DatasetGroupByReductions.all,DatasetGroupByReductions.any,DatasetGroupByReductions.max,DatasetGroupByReductions.min,DatasetGroupByReductions.mean,DatasetGroupByReductions.prod,DatasetGroupByReductions.sum,DatasetGroupByReductions.std,DatasetGroupByReductions.var,DatasetGroupByReductions.median,DatasetResampleReductions.reduce,DatasetResampleReductions._flox_reduce,DatasetResampleReductions.count,DatasetResampleReductions.all,DatasetResampleReductions.any,DatasetResampleReductions.max,DatasetResampleReductions.min,DatasetResampleReductions.mean,DatasetResampleReductions.prod,DatasetResampleReductions.sum,DatasetResampleReductions.std,DatasetResampleReductions.var,DatasetResampleReductions.median,DataArrayGroupByReductions.reduce,DataArrayGroupByReductions._flox_reduce,DataArrayGroupByReductions.count,DataArrayGroupByReductions.all,DataArrayGroupByReductions.any,DataArrayGroupByReductions.max,DataArrayGroupByReductions.min,DataArrayGroupByReductions.mean,DataArrayGroupByReductions.prod,DataArrayGroupByReductions.sum,DataArrayGroupByReductions.std,DataArrayGroupByReductions.var,DataArrayGroupByReductions.median,DataArrayResampleReductions.reduce,DataArrayResampleReductions._flox_reduce,DataArrayResampleReductions.count,DataArrayResampleReductions.all,DataArrayResampleReductions.any,DataArrayResampleReductions.max,DataArrayResampleReductions.min,DataArrayResampleReductions.mean,DataArrayResampleReductions.prod,DataArrayResampleReductions.sum,DataArrayResampleReductions.std,DataArrayResampleReductions.var,DataArrayResampleReductions.median",
        "xarray/core/extensions.py:_CachedAccessor.__init__,_CachedAccessor.__get__,_register_accessor,register_dataarray_accessor,register_dataset_accessor,decorator",
        "xarray/core/options.py:_positive_integer,_set_file_cache_maxsize,_warn_on_setting_enable_cftimeindex,_get_boolean_with_default,_get_keep_attrs,set_options.__init__,set_options._apply_update,set_options.__enter__,set_options.__exit__,get_options",
        "xarray/plot/utils.py:import_matplotlib_pyplot,_determine_extend,_build_discrete_cmap,_color_palette,_determine_cmap_params,_infer_xy_labels_3d,_infer_xy_labels,_assert_valid_xy,get_axis,_maybe_gca,_get_units_from_attrs,label_from_attrs,_interval_to_mid_points,_interval_to_bound_points,_interval_to_double_bound_points,_resolve_intervals_1dplot,_resolve_intervals_2dplot,_valid_other_type,_valid_numpy_subdtype,_ensure_plottable,_is_numeric,_add_colorbar,_rescale_imshow_rgb,_update_axes,_is_monotonic,_infer_interval_breaks,_process_cmap_cbar_kwargs,_get_nice_quiver_magnitude,legend_elements,_legend_add_subtitle,_adjust_legend_subtitles,_infer_meta_data,_parse_size,_get_color_and_size,_get_color_and_size",
        "xarray/plot/dataset_plot.py:_infer_scatter_data,_Dataset_PlotMethods.__init__,_Dataset_PlotMethods.__call__,_dsplot,scatter,quiver,streamplot,newplotfunc,plotmethod",
        "xarray/plot/plot.py:_infer_scatter_metadata,_parse_size,_infer_scatter_data,_infer_line_data,plot,line,step,hist,scatter,_PlotMethods.__init__,_PlotMethods.__call__,_PlotMethods.hist,_PlotMethods.line,_PlotMethods.step,_PlotMethods._scatter,override_signature,_plot2d,imshow,contour,contourf,pcolormesh,surface,_determine_array,wrapper,signature,newplotfunc,plotmethod,_center_pixels,to_label",
        "xarray/plot/facetgrid.py:_nicetitle,FacetGrid.__init__,FacetGrid._left_axes,FacetGrid._bottom_axes,FacetGrid.map_dataarray,FacetGrid.map_dataarray_line,FacetGrid.map_dataset,FacetGrid._finalize_grid,FacetGrid._adjust_fig_for_guide,FacetGrid.add_legend,FacetGrid.add_colorbar,FacetGrid.add_quiverkey,FacetGrid.set_axis_labels,FacetGrid._set_labels,FacetGrid.set_xlabels,FacetGrid.set_ylabels,FacetGrid.set_zlabels,FacetGrid.set_titles,FacetGrid.set_ticks,FacetGrid.map,_easy_facetgrid",
        "xarray/backends/locks.py:_get_threaded_lock,_get_multiprocessing_lock,_get_lock_maker,_get_scheduler,get_write_lock,acquire,CombinedLock.__init__,CombinedLock.acquire,CombinedLock.release,CombinedLock.__enter__,CombinedLock.__exit__,CombinedLock.locked,CombinedLock.__repr__,DummyLock.acquire,DummyLock.release,DummyLock.__enter__,DummyLock.__exit__,DummyLock.locked,combine_locks,ensure_lock",
        "xarray/backends/netcdf3.py:coerce_nc3_dtype,encode_nc3_attr_value,encode_nc3_attrs,encode_nc3_variable,_isalnumMUTF8,is_valid_nc3_name",
        "xarray/backends/pynio_.py:NioArrayWrapper.__init__,NioArrayWrapper.get_array,NioArrayWrapper.__getitem__,NioArrayWrapper._getitem,NioDataStore.__init__,NioDataStore.ds,NioDataStore.open_store_variable,NioDataStore.get_variables,NioDataStore.get_attrs,NioDataStore.get_dimensions,NioDataStore.get_encoding,NioDataStore.close,PynioBackendEntrypoint.open_dataset",
        "xarray/backends/memory.py:InMemoryDataStore.__init__,InMemoryDataStore.get_attrs,InMemoryDataStore.get_variables,InMemoryDataStore.get_dimensions,InMemoryDataStore.prepare_variable,InMemoryDataStore.set_attribute,InMemoryDataStore.set_dimension",
        "xarray/backends/common.py:_normalize_path,_encode_variable_name,_decode_variable_name,find_root_and_group,robust_getitem,BackendArray.__array__,AbstractDataStore.get_dimensions,AbstractDataStore.get_attrs,AbstractDataStore.get_variables,AbstractDataStore.get_encoding,AbstractDataStore.load,AbstractDataStore.close,AbstractDataStore.__enter__,AbstractDataStore.__exit__,ArrayWriter.__init__,ArrayWriter.add,ArrayWriter.sync,AbstractWritableDataStore.encode,AbstractWritableDataStore.encode_variable,AbstractWritableDataStore.encode_attribute,AbstractWritableDataStore.set_dimension,AbstractWritableDataStore.set_attribute,AbstractWritableDataStore.set_variable,AbstractWritableDataStore.store_dataset,AbstractWritableDataStore.store,AbstractWritableDataStore.set_attributes,AbstractWritableDataStore.set_variables,AbstractWritableDataStore.set_dimensions,WritableCFDataStore.encode,BackendEntrypoint.open_dataset,BackendEntrypoint.guess_can_open",
        "xarray/backends/netCDF4_.py:BaseNetCDF4Array.__init__,BaseNetCDF4Array.__setitem__,BaseNetCDF4Array.get_array,NetCDF4ArrayWrapper.get_array,NetCDF4ArrayWrapper.__getitem__,NetCDF4ArrayWrapper._getitem,_encode_nc4_variable,_check_encoding_dtype_is_vlen_string,_get_datatype,_nc4_dtype,_netcdf4_create_group,_nc4_require_group,_ensure_fill_value_valid,_force_native_endianness,_extract_nc4_variable_encoding,_is_list_of_strings,NetCDF4DataStore.__init__,NetCDF4DataStore.open,NetCDF4DataStore._acquire,NetCDF4DataStore.ds,NetCDF4DataStore.open_store_variable,NetCDF4DataStore.get_variables,NetCDF4DataStore.get_attrs,NetCDF4DataStore.get_dimensions,NetCDF4DataStore.get_encoding,NetCDF4DataStore.set_dimension,NetCDF4DataStore.set_attribute,NetCDF4DataStore.encode_variable,NetCDF4DataStore.prepare_variable,NetCDF4DataStore.sync,NetCDF4DataStore.close,NetCDF4BackendEntrypoint.guess_can_open,NetCDF4BackendEntrypoint.open_dataset",
        "xarray/backends/scipy_.py:_decode_string,_decode_attrs,ScipyArrayWrapper.__init__,ScipyArrayWrapper.get_variable,ScipyArrayWrapper.__getitem__,ScipyArrayWrapper.__setitem__,_open_scipy_netcdf,ScipyDataStore.__init__,ScipyDataStore.ds,ScipyDataStore.open_store_variable,ScipyDataStore.get_variables,ScipyDataStore.get_attrs,ScipyDataStore.get_dimensions,ScipyDataStore.get_encoding,ScipyDataStore.set_dimension,ScipyDataStore._validate_attr_key,ScipyDataStore.set_attribute,ScipyDataStore.encode_variable,ScipyDataStore.prepare_variable,ScipyDataStore.sync,ScipyDataStore.close,ScipyBackendEntrypoint.guess_can_open,ScipyBackendEntrypoint.open_dataset",
        "xarray/backends/pseudonetcdf_.py:PncArrayWrapper.__init__,PncArrayWrapper.get_array,PncArrayWrapper.__getitem__,PncArrayWrapper._getitem,PseudoNetCDFDataStore.open,PseudoNetCDFDataStore.__init__,PseudoNetCDFDataStore.ds,PseudoNetCDFDataStore.open_store_variable,PseudoNetCDFDataStore.get_variables,PseudoNetCDFDataStore.get_attrs,PseudoNetCDFDataStore.get_dimensions,PseudoNetCDFDataStore.get_encoding,PseudoNetCDFDataStore.close,PseudoNetCDFBackendEntrypoint.open_dataset",
        "xarray/backends/zarr.py:encode_zarr_attr_value,ZarrArrayWrapper.__init__,ZarrArrayWrapper.get_array,ZarrArrayWrapper.__getitem__,_determine_zarr_chunks,_get_zarr_dims_and_attrs,extract_zarr_variable_encoding,encode_zarr_variable,_validate_existing_dims,_put_attrs,ZarrStore.open_group,ZarrStore.__init__,ZarrStore.ds,ZarrStore.open_store_variable,ZarrStore.get_variables,ZarrStore.get_attrs,ZarrStore.get_dimensions,ZarrStore.set_dimensions,ZarrStore.set_attributes,ZarrStore.encode_variable,ZarrStore.encode_attribute,ZarrStore.store,ZarrStore.sync,ZarrStore.set_variables,ZarrStore.close,open_zarr,ZarrBackendEntrypoint.guess_can_open,ZarrBackendEntrypoint.open_dataset",
        "xarray/backends/api.py:_get_default_engine_remote_uri,_get_default_engine_gz,_get_default_engine_netcdf,_get_default_engine,_validate_dataset_names,_validate_attrs,_resolve_decoders_kwargs,_get_mtime,_protect_dataset_variables_inplace,_finalize_store,load_dataset,load_dataarray,_chunk_ds,_dataset_from_backend_dataset,open_dataset,open_dataarray,open_mfdataset,to_netcdf,to_netcdf,to_netcdf,to_netcdf,to_netcdf,dump_to_store,save_mfdataset,_validate_region,_validate_datatypes_for_zarr_append,to_zarr,to_zarr,to_zarr,check_name,check_attr,multi_file_closer,check_dtype",
        "xarray/backends/store.py:StoreBackendEntrypoint.guess_can_open,StoreBackendEntrypoint.open_dataset",
        "xarray/backends/h5netcdf_.py:H5NetCDFArrayWrapper.get_array,H5NetCDFArrayWrapper.__getitem__,H5NetCDFArrayWrapper._getitem,maybe_decode_bytes,_read_attributes,_h5netcdf_create_group,H5NetCDFStore.__init__,H5NetCDFStore.open,H5NetCDFStore._acquire,H5NetCDFStore.ds,H5NetCDFStore.open_store_variable,H5NetCDFStore.get_variables,H5NetCDFStore.get_attrs,H5NetCDFStore.get_dimensions,H5NetCDFStore.get_encoding,H5NetCDFStore.set_dimension,H5NetCDFStore.set_attribute,H5NetCDFStore.encode_variable,H5NetCDFStore.prepare_variable,H5NetCDFStore.sync,H5NetCDFStore.close,H5netcdfBackendEntrypoint.guess_can_open,H5netcdfBackendEntrypoint.open_dataset",
        "xarray/backends/pydap_.py:PydapArrayWrapper.__init__,PydapArrayWrapper.shape,PydapArrayWrapper.dtype,PydapArrayWrapper.__getitem__,PydapArrayWrapper._getitem,_fix_attributes,PydapDataStore.__init__,PydapDataStore.open,PydapDataStore.open_store_variable,PydapDataStore.get_variables,PydapDataStore.get_attrs,PydapDataStore.get_dimensions,PydapBackendEntrypoint.guess_can_open,PydapBackendEntrypoint.open_dataset",
        "xarray/backends/cfgrib_.py:CfGribArrayWrapper.__init__,CfGribArrayWrapper.__getitem__,CfGribArrayWrapper._getitem,CfGribDataStore.__init__,CfGribDataStore.open_store_variable,CfGribDataStore.get_variables,CfGribDataStore.get_attrs,CfGribDataStore.get_dimensions,CfGribDataStore.get_encoding,CfgribfBackendEntrypoint.guess_can_open,CfgribfBackendEntrypoint.open_dataset",
        "xarray/backends/file_manager.py:FileManager.acquire,FileManager.acquire_context,FileManager.close,CachingFileManager.__init__,CachingFileManager._make_key,CachingFileManager._optional_lock,CachingFileManager.acquire,CachingFileManager.acquire_context,CachingFileManager._acquire_with_cache_info,CachingFileManager.close,CachingFileManager.__del__,CachingFileManager.__getstate__,CachingFileManager.__setstate__,CachingFileManager.__repr__,_RefCounter.__init__,_RefCounter.increment,_RefCounter.decrement,_HashedSequence.__init__,_HashedSequence.__hash__,DummyFileManager.__init__,DummyFileManager.acquire,DummyFileManager.acquire_context,DummyFileManager.close",
        "xarray/backends/plugins.py:remove_duplicates,detect_parameters,backends_dict_from_pkg,set_missing_parameters,sort_backends,build_engines,list_engines,guess_engine,get_backend",
        "xarray/backends/lru_cache.py:LRUCache.__init__,LRUCache.__getitem__,LRUCache._enforce_size_limit,LRUCache.__setitem__,LRUCache.__delitem__,LRUCache.__iter__,LRUCache.__len__,LRUCache.maxsize,LRUCache.maxsize",
        "xarray/backends/rasterio_.py:RasterioArrayWrapper.__init__,RasterioArrayWrapper.dtype,RasterioArrayWrapper.shape,RasterioArrayWrapper._get_indexer,RasterioArrayWrapper._getitem,RasterioArrayWrapper.__getitem__,_parse_envi,open_rasterio,parsevec,default",
        "xarray/coding/calendar_ops.py:_days_in_year,convert_calendar,_interpolate_day_of_year,_convert_to_new_calendar_with_new_day_of_year,_datetime_to_decimal_year,interp_calendar,_make_index",
        "xarray/coding/variables.py:VariableCoder.encode,VariableCoder.decode,_ElementwiseFunctionArray.__init__,_ElementwiseFunctionArray.dtype,_ElementwiseFunctionArray.__getitem__,_ElementwiseFunctionArray.__array__,_ElementwiseFunctionArray.__repr__,lazy_elemwise_func,unpack_for_encoding,unpack_for_decoding,safe_setitem,pop_to,_apply_mask,CFMaskCoder.encode,CFMaskCoder.decode,_scale_offset_decoding,_choose_float_dtype,CFScaleOffsetCoder.encode,CFScaleOffsetCoder.decode,UnsignedIntegerCoder.encode,UnsignedIntegerCoder.decode",
        "xarray/coding/cftime_offsets.py:get_date_type,BaseCFTimeOffset.__init__,BaseCFTimeOffset.rule_code,BaseCFTimeOffset.__eq__,BaseCFTimeOffset.__ne__,BaseCFTimeOffset.__add__,BaseCFTimeOffset.__sub__,BaseCFTimeOffset.__mul__,BaseCFTimeOffset.__neg__,BaseCFTimeOffset.__rmul__,BaseCFTimeOffset.__radd__,BaseCFTimeOffset.__rsub__,BaseCFTimeOffset.__apply__,BaseCFTimeOffset.onOffset,BaseCFTimeOffset.rollforward,BaseCFTimeOffset.rollback,BaseCFTimeOffset.__str__,BaseCFTimeOffset.__repr__,BaseCFTimeOffset._get_offset_day,Tick._next_higher_resolution,Tick.__mul__,_get_day_of_month,_days_in_month,_adjust_n_months,_adjust_n_years,_shift_month,roll_qtrday,_validate_month,MonthBegin.__apply__,MonthBegin.onOffset,MonthEnd.__apply__,MonthEnd.onOffset,QuarterOffset.__init__,QuarterOffset.__apply__,QuarterOffset.onOffset,QuarterOffset.__sub__,QuarterOffset.__mul__,QuarterOffset.rule_code,QuarterOffset.__str__,QuarterBegin.rollforward,QuarterBegin.rollback,QuarterEnd.rollforward,QuarterEnd.rollback,YearOffset.__init__,YearOffset.__apply__,YearOffset.__sub__,YearOffset.__mul__,YearOffset.rule_code,YearOffset.__str__,YearBegin.onOffset,YearBegin.rollforward,YearBegin.rollback,YearEnd.onOffset,YearEnd.rollforward,YearEnd.rollback,Day.as_timedelta,Day.__apply__,Hour.as_timedelta,Hour.__apply__,Minute.as_timedelta,Minute.__apply__,Second.as_timedelta,Second.__apply__,Millisecond.as_timedelta,Millisecond.__apply__,Microsecond.as_timedelta,Microsecond.__apply__,to_offset,to_cftime_datetime,normalize_date,_maybe_normalize_date,_generate_linear_range,_generate_range,cftime_range,date_range,date_range_like",
        "xarray/coding/frequencies.py:infer_freq,_CFTimeFrequencyInferer.__init__,_CFTimeFrequencyInferer.get_freq,_CFTimeFrequencyInferer._infer_daily_rule,_CFTimeFrequencyInferer._get_annual_rule,_CFTimeFrequencyInferer._get_quartely_rule,_CFTimeFrequencyInferer._get_monthly_rule,_CFTimeFrequencyInferer.deltas,_CFTimeFrequencyInferer.year_deltas,_CFTimeFrequencyInferer.month_deltas,_unique_deltas,_is_multiple,_maybe_add_count,month_anchor_check",
        "xarray/coding/strings.py:create_vlen_dtype,check_vlen_dtype,is_unicode_dtype,is_bytes_dtype,EncodedStringCoder.__init__,EncodedStringCoder.encode,EncodedStringCoder.decode,decode_bytes_array,encode_string_array,ensure_fixed_length_bytes,CharacterArrayCoder.encode,CharacterArrayCoder.decode,bytes_to_char,_numpy_bytes_to_char,char_to_bytes,_numpy_char_to_bytes,StackedBytesArray.__init__,StackedBytesArray.dtype,StackedBytesArray.shape,StackedBytesArray.__repr__,StackedBytesArray.__getitem__",
        "xarray/coding/times.py:_is_standard_calendar,_is_numpy_compatible_time_range,_netcdf_to_numpy_timeunit,_ensure_padded_year,_unpack_netcdf_time_units,_decode_cf_datetime_dtype,_decode_datetime_with_cftime,_decode_datetime_with_pandas,decode_cf_datetime,to_timedelta_unboxed,to_datetime_unboxed,decode_cf_timedelta,_unit_timedelta_cftime,_unit_timedelta_numpy,_infer_time_units_from_diff,infer_calendar_name,infer_datetime_units,format_cftime_datetime,infer_timedelta_units,cftime_to_nptime,convert_times,convert_time_or_go_back,_should_cftime_be_used,_cleanup_netcdf_time_units,_encode_datetime_with_cftime,cast_to_int_if_safe,encode_cf_datetime,encode_cf_timedelta,CFDatetimeCoder.__init__,CFDatetimeCoder.encode,CFDatetimeCoder.decode,CFTimedeltaCoder.encode,CFTimedeltaCoder.decode,encode_datetime",
        "xarray/coding/cftimeindex.py:named,optional,trailing_optional,build_pattern,parse_iso8601_like,_parse_iso8601_with_reso,_parsed_string_to_bounds,get_date_field,_field_accessor,get_date_type,assert_all_valid_date_type,format_row,format_times,format_attrs,CFTimeIndex.__new__,CFTimeIndex.__repr__,CFTimeIndex._partial_date_slice,CFTimeIndex._get_string_slice,CFTimeIndex._get_nearest_indexer,CFTimeIndex._filter_indexer_tolerance,CFTimeIndex.get_loc,CFTimeIndex._maybe_cast_slice_bound,CFTimeIndex.get_value,CFTimeIndex.__contains__,CFTimeIndex.contains,CFTimeIndex.shift,CFTimeIndex.__add__,CFTimeIndex.__radd__,CFTimeIndex.__sub__,CFTimeIndex.__rsub__,CFTimeIndex.to_datetimeindex,CFTimeIndex.strftime,CFTimeIndex.asi8,CFTimeIndex.calendar,CFTimeIndex.freq,CFTimeIndex._round_via_method,CFTimeIndex.floor,CFTimeIndex.ceil,CFTimeIndex.round,_parse_iso8601_without_reso,_parse_array_of_cftime_strings,_contains_datetime_timedeltas,_cftimeindex_from_i8,_total_microseconds,_floor_int,_ceil_int,_round_to_nearest_half_even,f",
        "xarray/util/print_versions.py:get_sys_info,netcdf_and_hdf5_versions,show_versions",
        "xarray/util/deprecation_helpers.py:_deprecate_positional_args,_decorator,inner",
        "xarray/util/generate_reductions.py:Method.__init__,ReductionGenerator.__init__,ReductionGenerator.generate_methods,ReductionGenerator.generate_method,ReductionGenerator.generate_example,GroupByReductionGenerator.generate_code,GenericReductionGenerator.generate_code",
        "xarray/util/generate_ops.py:unops,binops,inplace,render,_render_classbody",
        "asv_bench/benchmarks/pandas.py:MultiIndexSeries.setup,MultiIndexSeries.time_from_series",
        "asv_bench/benchmarks/polyfit.py:Polyval.setup,Polyval.time_polyval,Polyval.peakmem_polyval,PolyvalDask.setup",
        "asv_bench/benchmarks/__init__.py:parameterized,requires_dask,requires_sparse,randn,randint,_skip_slow,decorator",
        "asv_bench/benchmarks/dataarray_missing.py:make_bench_data,DataArrayMissingInterpolateNA.setup,DataArrayMissingInterpolateNA.time_interpolate_na,DataArrayMissingBottleneck.setup,DataArrayMissingBottleneck.time_ffill,DataArrayMissingBottleneck.time_bfill",
        "asv_bench/benchmarks/repr.py:Repr.setup,Repr.time_repr,Repr.time_repr_html,ReprMultiIndex.setup,ReprMultiIndex.time_repr,ReprMultiIndex.time_repr_html",
        "asv_bench/benchmarks/dataset_io.py:IOSingleNetCDF.make_ds,IOWriteSingleNetCDF3.setup,IOWriteSingleNetCDF3.time_write_dataset_netcdf4,IOWriteSingleNetCDF3.time_write_dataset_scipy,IOReadSingleNetCDF4.setup,IOReadSingleNetCDF4.time_load_dataset_netcdf4,IOReadSingleNetCDF4.time_orthogonal_indexing,IOReadSingleNetCDF4.time_vectorized_indexing,IOReadSingleNetCDF3.setup,IOReadSingleNetCDF3.time_load_dataset_scipy,IOReadSingleNetCDF3.time_orthogonal_indexing,IOReadSingleNetCDF3.time_vectorized_indexing,IOReadSingleNetCDF4Dask.setup,IOReadSingleNetCDF4Dask.time_load_dataset_netcdf4_with_block_chunks,IOReadSingleNetCDF4Dask.time_load_dataset_netcdf4_with_block_chunks_oindexing,IOReadSingleNetCDF4Dask.time_load_dataset_netcdf4_with_block_chunks_vindexing,IOReadSingleNetCDF4Dask.time_load_dataset_netcdf4_with_block_chunks_multiprocessing,IOReadSingleNetCDF4Dask.time_load_dataset_netcdf4_with_time_chunks,IOReadSingleNetCDF4Dask.time_load_dataset_netcdf4_with_time_chunks_multiprocessing,IOReadSingleNetCDF3Dask.setup,IOReadSingleNetCDF3Dask.time_load_dataset_scipy_with_block_chunks,IOReadSingleNetCDF3Dask.time_load_dataset_scipy_with_block_chunks_oindexing,IOReadSingleNetCDF3Dask.time_load_dataset_scipy_with_block_chunks_vindexing,IOReadSingleNetCDF3Dask.time_load_dataset_scipy_with_time_chunks,IOMultipleNetCDF.make_ds,IOWriteMultipleNetCDF3.setup,IOWriteMultipleNetCDF3.time_write_dataset_netcdf4,IOWriteMultipleNetCDF3.time_write_dataset_scipy,IOReadMultipleNetCDF4.setup,IOReadMultipleNetCDF4.time_load_dataset_netcdf4,IOReadMultipleNetCDF4.time_open_dataset_netcdf4,IOReadMultipleNetCDF3.setup,IOReadMultipleNetCDF3.time_load_dataset_scipy,IOReadMultipleNetCDF3.time_open_dataset_scipy,IOReadMultipleNetCDF4Dask.setup,IOReadMultipleNetCDF4Dask.time_load_dataset_netcdf4_with_block_chunks,IOReadMultipleNetCDF4Dask.time_load_dataset_netcdf4_with_block_chunks_multiprocessing,IOReadMultipleNetCDF4Dask.time_load_dataset_netcdf4_with_time_chunks,IOReadMultipleNetCDF4Dask.time_load_dataset_netcdf4_with_time_chunks_multiprocessing,IOReadMultipleNetCDF4Dask.time_open_dataset_netcdf4_with_block_chunks,IOReadMultipleNetCDF4Dask.time_open_dataset_netcdf4_with_block_chunks_multiprocessing,IOReadMultipleNetCDF4Dask.time_open_dataset_netcdf4_with_time_chunks,IOReadMultipleNetCDF4Dask.time_open_dataset_netcdf4_with_time_chunks_multiprocessing,IOReadMultipleNetCDF3Dask.setup,IOReadMultipleNetCDF3Dask.time_load_dataset_scipy_with_block_chunks,IOReadMultipleNetCDF3Dask.time_load_dataset_scipy_with_time_chunks,IOReadMultipleNetCDF3Dask.time_open_dataset_scipy_with_block_chunks,IOReadMultipleNetCDF3Dask.time_open_dataset_scipy_with_time_chunks,create_delayed_write,IOWriteNetCDFDask.setup,IOWriteNetCDFDask.time_write,IOWriteNetCDFDaskDistributed.setup,IOWriteNetCDFDaskDistributed.cleanup,IOWriteNetCDFDaskDistributed.time_write",
        "asv_bench/benchmarks/groupby.py:GroupBy.setup,GroupBy.time_init,GroupBy.time_agg_small_num_groups,GroupBy.time_agg_large_num_groups,GroupBy.time_groupby_binary_op_1d,GroupBy.time_groupby_binary_op_2d,GroupBy.peakmem_groupby_binary_op_1d,GroupBy.peakmem_groupby_binary_op_2d,GroupByDask.setup,GroupByPandasDataFrame.setup,GroupByPandasDataFrame.time_groupby_binary_op_2d,GroupByPandasDataFrame.peakmem_groupby_binary_op_2d,GroupByDaskDataFrame.setup,GroupByDaskDataFrame.time_groupby_binary_op_2d,GroupByDaskDataFrame.peakmem_groupby_binary_op_2d,Resample.setup,Resample.time_init,Resample.time_agg_small_num_groups,Resample.time_agg_large_num_groups,Resample.time_groupby_binary_op_1d,Resample.time_groupby_binary_op_2d,Resample.peakmem_groupby_binary_op_1d,Resample.peakmem_groupby_binary_op_2d,ResampleDask.setup",
        "asv_bench/benchmarks/reindexing.py:Reindex.setup,Reindex.time_1d_coarse,Reindex.time_1d_fine_all_found,Reindex.time_1d_fine_some_missing,Reindex.time_2d_coarse,Reindex.time_2d_fine_all_found,Reindex.time_2d_fine_some_missing,ReindexDask.setup",
        "asv_bench/benchmarks/indexing.py:Base.setup,Indexing.time_indexing_basic,Indexing.time_indexing_outer,Indexing.time_indexing_vectorized,Assignment.time_assignment_basic,Assignment.time_assignment_outer,Assignment.time_assignment_vectorized,IndexingDask.setup,BooleanIndexing.setup,BooleanIndexing.time_indexing,HugeAxisSmallSliceIndexing.setup,HugeAxisSmallSliceIndexing.time_indexing,HugeAxisSmallSliceIndexing.cleanup",
        "asv_bench/benchmarks/rolling.py:Rolling.setup,Rolling.time_rolling,Rolling.time_rolling_long,Rolling.time_rolling_np,Rolling.time_rolling_construct,RollingDask.setup,RollingMemory.setup,DataArrayRollingMemory.peakmem_ndrolling_reduce,DataArrayRollingMemory.peakmem_1drolling_reduce,DatasetRollingMemory.peakmem_ndrolling_reduce,DatasetRollingMemory.peakmem_1drolling_reduce",
        "asv_bench/benchmarks/unstacking.py:Unstacking.setup,Unstacking.time_unstack_fast,Unstacking.time_unstack_slow,Unstacking.time_unstack_pandas_slow,UnstackingDask.setup,UnstackingSparse.setup,UnstackingSparse.time_unstack_to_sparse_2d,UnstackingSparse.time_unstack_to_sparse_3d,UnstackingSparse.peakmem_unstack_to_sparse_2d,UnstackingSparse.peakmem_unstack_to_sparse_3d,UnstackingSparse.time_unstack_pandas_slow",
        "asv_bench/benchmarks/combine.py:Combine.setup,Combine.time_combine_nested,Combine.time_combine_by_coords",
        "asv_bench/benchmarks/interp.py:Interpolation.setup,Interpolation.time_interpolation,Interpolation.time_interpolation_2d,InterpolationDask.setup",
        ".github/workflows/configure-testpypi-version.py:split_path,extract,update",
        ".github/workflows/parse_logs.py:SessionStart._from_json,SessionFinish._from_json,parse_record,format_summary,_,_,format_report",
        "properties/test_pandas_roundtrip.py:datasets_1d_vars,test_roundtrip_dataarray,test_roundtrip_dataset,test_roundtrip_pandas_series,test_roundtrip_pandas_dataframe",
        "properties/test_encode_decode.py:test_CFMask_coder_roundtrip,test_CFScaleOffset_coder_roundtrip",
        "doc/conf.py:linkcode_resolve,html_page_context,update_team,update_gallery,update_videos,setup",
        "doc/examples/_code/accessor_example.py:GeoAccessor.__init__,GeoAccessor.center,GeoAccessor.plot",
        "ci/min_deps_check.py:error,warning,parse_requirements,query_conda,process_pkg,fmt_version,main,metadata"
    ]
}