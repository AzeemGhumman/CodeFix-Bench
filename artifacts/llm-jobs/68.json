{
    "pr": "pytest-dev/pytest/5555",
    "problem": "pytest stepwise doesn't work with xfail strict failures\n```\r\ngraingert@onomastic:~/projects/foo$ cat tests/test_foo.py \r\nimport pytest\r\n\r\n\r\n@pytest.mark.xfail(reason=\"pass\")\r\ndef test_a():\r\n    pass\r\n\r\n\r\n@pytest.mark.xfail(reason=\"pass\")\r\ndef test_b():\r\n    pass\r\ngraingert@onomastic:~/projects/foo$ cat tests/pytest.ini \r\n[pytest]\r\naddopts = --strict\r\nxfail_strict=true\r\ngraingert@onomastic:~/projects/foo$ pytest --sw tests/\r\n================================ test session starts ================================\r\nplatform linux -- Python 3.7.3, pytest-5.0.0, py-1.8.0, pluggy-0.12.0\r\nrootdir: /home/graingert/projects/foo/tests, inifile: pytest.ini\r\ncollected 2 items                                                                   \r\nstepwise: no previously failed tests, not skipping.\r\n\r\ntests/test_foo.py FF                                                          [100%]\r\n\r\n===================================== FAILURES ======================================\r\n______________________________________ test_a _______________________________________\r\n[XPASS(strict)] pass\r\n______________________________________ test_b _______________________________________\r\n[XPASS(strict)] pass\r\n============================= 2 failed in 0.01 seconds ==============================\r\n```\n",
    "hint": "I expected stepwise to stop after the first XPASS(strict) failure\nIndeed it seems it is not handling `xpass(strict)` failures. \ud83d\udc4d ",
    "base": "95824c588a333c54780e6ea82393488b6a6a81d4",
    "section": 0,
    "files": [
        "setup.py:main",
        "src/_pytest/faulthandler.py:pytest_addoption,pytest_configure,_get_stderr_fileno,pytest_unconfigure,pytest_runtest_protocol,pytest_enter_pdb,pytest_exception_interact",
        "src/_pytest/resultlog.py:pytest_addoption,pytest_configure,pytest_unconfigure,ResultLog.__init__,ResultLog.write_log_entry,ResultLog.log_outcome,ResultLog.pytest_runtest_logreport,ResultLog.pytest_collectreport,ResultLog.pytest_internalerror",
        "src/_pytest/fixtures.py:pytest_sessionstart,scopeproperty,get_scope_package,get_scope_node,add_funcarg_pseudo_fixture_def,getfixturemarker,get_parametrized_fixture_keys,reorder_items,fix_cache_order,reorder_items_atscope,fillfixtures,get_direct_param_fixture_func,FuncFixtureInfo.prune_dependency_tree,FixtureRequest.__init__,FixtureRequest.fixturenames,FixtureRequest.node,FixtureRequest._getnextfixturedef,FixtureRequest.config,FixtureRequest.function,FixtureRequest.cls,FixtureRequest.instance,FixtureRequest.module,FixtureRequest.fspath,FixtureRequest.keywords,FixtureRequest.session,FixtureRequest.addfinalizer,FixtureRequest._addfinalizer,FixtureRequest.applymarker,FixtureRequest.raiseerror,FixtureRequest._fillfixtures,FixtureRequest.getfixturevalue,FixtureRequest.getfuncargvalue,FixtureRequest._get_active_fixturedef,FixtureRequest._get_fixturestack,FixtureRequest._compute_fixture_value,FixtureRequest._schedule_finalizers,FixtureRequest._check_scope,FixtureRequest._factorytraceback,FixtureRequest._getscopeitem,FixtureRequest.__repr__,SubRequest.__init__,SubRequest.__repr__,SubRequest.addfinalizer,SubRequest._schedule_finalizers,scopemismatch,scope2index,FixtureLookupError.__init__,FixtureLookupError.formatrepr,FixtureLookupErrorRepr.__init__,FixtureLookupErrorRepr.toterminal,fail_fixturefunc,call_fixture_func,_teardown_yield_fixture,FixtureDef.__init__,FixtureDef.addfinalizer,FixtureDef.finish,FixtureDef.execute,FixtureDef.__repr__,resolve_fixture_function,pytest_fixture_setup,_ensure_immutable_ids,wrap_function_to_error_out_if_called_directly,FixtureFunctionMarker.__call__,fixture,yield_fixture,pytestconfig,pytest_addoption,FixtureManager.__init__,FixtureManager._get_direct_parametrize_args,FixtureManager.getfixtureinfo,FixtureManager.pytest_plugin_registered,FixtureManager._getautousenames,FixtureManager.getfixtureclosure,FixtureManager.pytest_generate_tests,FixtureManager.pytest_collection_modifyitems,FixtureManager.parsefactories,FixtureManager.getfixturedefs,FixtureManager._matchfactories,decoratescope,result,provide,merge,sort_by_scope",
        "src/_pytest/stepwise.py:pytest_addoption,pytest_configure,StepwisePlugin.__init__,StepwisePlugin.pytest_sessionstart,StepwisePlugin.pytest_collection_modifyitems,StepwisePlugin.pytest_runtest_logreport,StepwisePlugin.pytest_report_collectionfinish,StepwisePlugin.pytest_sessionfinish",
        "src/_pytest/pytester.py:pytest_addoption,pytest_configure,LsofFdLeakChecker.get_open_files,LsofFdLeakChecker._exec_lsof,LsofFdLeakChecker._parse_lsof_output,LsofFdLeakChecker.matching_platform,LsofFdLeakChecker.pytest_runtest_protocol,_pytest,PytestArg.__init__,PytestArg.gethookrecorder,get_public_names,ParsedCall.__init__,ParsedCall.__repr__,HookRecorder.__init__,HookRecorder.finish_recording,HookRecorder.getcalls,HookRecorder.assert_contains,HookRecorder.popcall,HookRecorder.getcall,HookRecorder.getreports,HookRecorder.matchreport,HookRecorder.getfailures,HookRecorder.getfailedcollections,HookRecorder.listoutcomes,HookRecorder.countoutcomes,HookRecorder.assertoutcome,HookRecorder.clear,linecomp,LineMatcher_fixture,testdir,_sys_snapshot,_config_for_test,RunResult.__init__,RunResult.__repr__,RunResult.parseoutcomes,RunResult.assert_outcomes,CwdSnapshot.__init__,CwdSnapshot.restore,SysModulesSnapshot.__init__,SysModulesSnapshot.restore,SysPathsSnapshot.__init__,SysPathsSnapshot.restore,Testdir.__init__,Testdir.__repr__,Testdir.__str__,Testdir.finalize,Testdir.__take_sys_modules_snapshot,Testdir.make_hook_recorder,Testdir.chdir,Testdir._makefile,Testdir.makefile,Testdir.makeconftest,Testdir.makeini,Testdir.getinicfg,Testdir.makepyfile,Testdir.maketxtfile,Testdir.syspathinsert,Testdir.mkdir,Testdir.mkpydir,Testdir.copy_example,Testdir.getnode,Testdir.getpathnode,Testdir.genitems,Testdir.runitem,Testdir.inline_runsource,Testdir.inline_genitems,Testdir.inline_run,Testdir.runpytest_inprocess,Testdir.runpytest,Testdir._ensure_basetemp,Testdir.parseconfig,Testdir.parseconfigure,Testdir.getitem,Testdir.getitems,Testdir.getmodulecol,Testdir.collect_by_name,Testdir.popen,Testdir.run,Testdir._dump_lines,Testdir._getpytestargs,Testdir.runpython,Testdir.runpython_c,Testdir.runpytest_subprocess,Testdir.spawn_pytest,Testdir.spawn,getdecoded,LineComp.__init__,LineComp.assert_contains_lines,LineMatcher.__init__,LineMatcher.str,LineMatcher._getlines,LineMatcher.fnmatch_lines_random,LineMatcher.re_match_lines_random,LineMatcher._match_lines_random,LineMatcher.get_lines_after,LineMatcher._log,LineMatcher._log_text,LineMatcher.fnmatch_lines,LineMatcher.re_match_lines,LineMatcher._match_lines,isopen,before,after,preserve_module,to_text,Collect.pytest_configure,handle_timeout",
        "src/_pytest/nodes.py:_splitnode,ischildnode,Node.__init__,Node.ihook,Node.__repr__,Node.warn,Node.nodeid,Node.__hash__,Node.setup,Node.teardown,Node.listchain,Node.add_marker,Node.iter_markers,Node.iter_markers_with_node,Node.get_closest_marker,Node.listextrakeywords,Node.listnames,Node.addfinalizer,Node.getparent,Node._prunetraceback,Node._repr_failure_py,get_fslocation_from_item,Collector.collect,Collector.repr_failure,Collector._prunetraceback,_check_initialpaths_for_relpath,FSCollector.__init__,Item.__init__,Item.add_report_section,Item.reportinfo,Item.location",
        "src/_pytest/pathlib.py:ensure_reset_dir,rmtree,find_prefixed,extract_suffixes,find_suffixes,parse_num,_force_symlink,make_numbered_dir,create_cleanup_lock,register_cleanup_lock_removal,maybe_delete_a_numbered_dir,ensure_deletable,try_cleanup,cleanup_candidates,cleanup_numbered_dir,make_numbered_dir_with_cleanup,resolve_from_str,fnmatch_ex,parts,cleanup_on_exit",
        "src/_pytest/junitxml.py:bin_xml_escape,merge_family,_NodeReporter.__init__,_NodeReporter.append,_NodeReporter.add_property,_NodeReporter.add_attribute,_NodeReporter.make_properties_node,_NodeReporter.record_testreport,_NodeReporter.to_xml,_NodeReporter._add_simple,_NodeReporter.write_captured_output,_NodeReporter.append_pass,_NodeReporter.append_failure,_NodeReporter.append_collect_error,_NodeReporter.append_collect_skipped,_NodeReporter.append_error,_NodeReporter.append_skipped,_NodeReporter.finalize,_warn_incompatibility_with_xunit2,record_property,record_xml_attribute,_check_record_param_type,record_testsuite_property,pytest_addoption,pytest_configure,pytest_unconfigure,mangle_test_address,LogXML.__init__,LogXML.finalize,LogXML.node_reporter,LogXML.add_stats,LogXML._opentestcase,LogXML.pytest_runtest_logreport,LogXML.update_testcase_duration,LogXML.pytest_collectreport,LogXML.pytest_internalerror,LogXML.pytest_sessionstart,LogXML.pytest_sessionfinish,LogXML.pytest_terminal_summary,LogXML.add_global_property,LogXML._get_global_properties_node,repl,append_property,add_attr_noop,record_func",
        "src/_pytest/python_api.py:_non_numeric_type_error,ApproxBase.__init__,ApproxBase.__repr__,ApproxBase.__eq__,ApproxBase.__ne__,ApproxBase._approx_scalar,ApproxBase._yield_comparisons,ApproxBase._check_type,_recursive_list_map,ApproxNumpy.__repr__,ApproxNumpy.__eq__,ApproxNumpy._yield_comparisons,ApproxMapping.__repr__,ApproxMapping.__eq__,ApproxMapping._yield_comparisons,ApproxMapping._check_type,ApproxSequencelike.__repr__,ApproxSequencelike.__eq__,ApproxSequencelike._yield_comparisons,ApproxSequencelike._check_type,ApproxScalar.__repr__,ApproxScalar.__eq__,ApproxScalar.tolerance,approx,_is_numpy_array,raises,RaisesContext.__init__,RaisesContext.__enter__,RaisesContext.__exit__,set_default",
        "src/_pytest/doctest.py:pytest_addoption,pytest_collect_file,_is_setup_py,_is_doctest,ReprFailDoctest.__init__,ReprFailDoctest.toterminal,MultipleDoctestFailures.__init__,_init_runner_class,_get_runner,DoctestItem.__init__,DoctestItem.setup,DoctestItem.runtest,DoctestItem._disable_output_capturing_for_darwin,DoctestItem.repr_failure,DoctestItem.reportinfo,_get_flag_lookup,get_optionflags,_get_continue_on_failure,DoctestTextfile.collect,_check_all_skipped,_is_mocked,_patch_unwrap_mock_aware,DoctestModule.collect,_setup_fixtures,_get_checker,_get_allow_unicode_flag,_get_allow_bytes_flag,_get_report_choice,doctest_namespace,PytestDoctestRunner.__init__,PytestDoctestRunner.report_failure,PytestDoctestRunner.report_unexpected_exception,_mock_aware_unwrap,func,LiteralsOutputChecker.check_output,MockAwareDocTestFinder._find,remove_prefixes",
        "src/_pytest/main.py:pytest_addoption,_ConfigDeprecated.__init__,_ConfigDeprecated.__getattr__,_ConfigDeprecated.__setattr__,_ConfigDeprecated.__repr__,pytest_configure,wrap_session,pytest_cmdline_main,_main,pytest_collection,pytest_runtestloop,_in_venv,pytest_ignore_collect,pytest_collection_modifyitems,FSHookProxy.__init__,FSHookProxy.__getattr__,_bestrelpath_cache.__missing__,Session.__init__,Session.__repr__,Session._node_location_to_relpath,Session.pytest_collectstart,Session.pytest_runtest_logreport,Session.isinitpath,Session.gethookproxy,Session.perform_collect,Session._perform_collect,Session.collect,Session._collect,Session._collectfile,Session._recurse,Session._visit_filter,Session._tryconvertpyarg,Session._parsearg,Session.matchnodes,Session._matchnodes,Session.genitems",
        "src/_pytest/logging.py:_remove_ansi_escape_sequences,ColoredLevelFormatter.__init__,ColoredLevelFormatter.format,PercentStyleMultiline._update_message,PercentStyleMultiline.format,get_option_ini,pytest_addoption,catching_logs,LogCaptureHandler.__init__,LogCaptureHandler.emit,LogCaptureHandler.reset,LogCaptureFixture.__init__,LogCaptureFixture._finalize,LogCaptureFixture.handler,LogCaptureFixture.get_records,LogCaptureFixture.text,LogCaptureFixture.records,LogCaptureFixture.record_tuples,LogCaptureFixture.messages,LogCaptureFixture.clear,LogCaptureFixture.set_level,LogCaptureFixture.at_level,caplog,get_actual_log_level,pytest_configure,LoggingPlugin.__init__,LoggingPlugin._create_formatter,LoggingPlugin._setup_cli_logging,LoggingPlugin.set_log_path,LoggingPlugin._log_cli_enabled,LoggingPlugin.pytest_collection,LoggingPlugin._runtest_for,LoggingPlugin._runtest_for_main,LoggingPlugin.pytest_runtest_setup,LoggingPlugin.pytest_runtest_call,LoggingPlugin.pytest_runtest_teardown,LoggingPlugin.pytest_runtest_logstart,LoggingPlugin.pytest_runtest_logfinish,LoggingPlugin.pytest_runtest_logreport,LoggingPlugin.pytest_sessionfinish,LoggingPlugin.pytest_sessionstart,LoggingPlugin.pytest_runtestloop,_LiveLoggingStreamHandler.__init__,_LiveLoggingStreamHandler.reset,_LiveLoggingStreamHandler.set_when,_LiveLoggingStreamHandler.emit,add_option_ini",
        "src/_pytest/terminal.py:MoreQuietAction.__init__,MoreQuietAction.__call__,pytest_addoption,pytest_configure,getreportopt,pytest_report_teststatus,WarningReport.get_location,TerminalReporter.__init__,TerminalReporter._determine_show_progress_info,TerminalReporter.verbosity,TerminalReporter.showheader,TerminalReporter.showfspath,TerminalReporter.showfspath,TerminalReporter.showlongtestinfo,TerminalReporter.hasopt,TerminalReporter.write_fspath_result,TerminalReporter.write_ensure_prefix,TerminalReporter.ensure_newline,TerminalReporter.write,TerminalReporter.write_line,TerminalReporter.rewrite,TerminalReporter.write_sep,TerminalReporter.section,TerminalReporter.line,TerminalReporter.pytest_internalerror,TerminalReporter.pytest_warning_captured,TerminalReporter.pytest_plugin_registered,TerminalReporter.pytest_deselected,TerminalReporter.pytest_runtest_logstart,TerminalReporter.pytest_runtest_logreport,TerminalReporter.pytest_runtest_logfinish,TerminalReporter._get_progress_information_message,TerminalReporter._write_progress_information_filling_space,TerminalReporter._width_of_current_line,TerminalReporter.pytest_collection,TerminalReporter.pytest_collectreport,TerminalReporter.report_collect,TerminalReporter.pytest_sessionstart,TerminalReporter._write_report_lines_from_hooks,TerminalReporter.pytest_report_header,TerminalReporter.pytest_collection_finish,TerminalReporter._printcollecteditems,TerminalReporter.pytest_sessionfinish,TerminalReporter.pytest_terminal_summary,TerminalReporter.pytest_keyboard_interrupt,TerminalReporter.pytest_unconfigure,TerminalReporter._report_keyboardinterrupt,TerminalReporter._locationline,TerminalReporter._getfailureheadline,TerminalReporter._getcrashline,TerminalReporter.getreports,TerminalReporter.summary_warnings,TerminalReporter.summary_passes,TerminalReporter.print_teardown_sections,TerminalReporter.summary_failures,TerminalReporter.summary_errors,TerminalReporter._outrep_summary,TerminalReporter.summary_stats,TerminalReporter.short_test_summary,_get_pos,_get_line_with_reprcrash_message,_folded_skips,build_summary_stats_line,_plugin_nameversions,mywriter,mkrel,show_simple,show_xfailed,show_xpassed,show_skipped",
        "src/_pytest/_argcomplete.py:FastFilesCompleter.__init__,FastFilesCompleter.__call__,try_argcomplete,try_argcomplete",
        "src/_pytest/compat.py:_format_args,is_generator,iscoroutinefunction,getlocation,num_mock_patch_args,getfuncargnames,get_default_arg_names,_translate_non_printable,_bytes_to_ascii,ascii_escaped,get_real_func,get_real_method,getfslineno,getimfunc,safe_getattr,safe_isclass,_setup_collect_fakemodule,CaptureIO.__init__,CaptureIO.getvalue,FuncargnamesCompatAttr.funcargnames,nullcontext",
        "src/_pytest/runner.py:pytest_addoption,pytest_terminal_summary,pytest_sessionstart,pytest_sessionfinish,pytest_runtest_protocol,runtestprotocol,show_test_item,pytest_runtest_setup,pytest_runtest_call,pytest_runtest_teardown,_update_current_test_var,pytest_report_teststatus,call_and_report,check_interactive_exception,call_runtest_hook,CallInfo.result,CallInfo.from_call,CallInfo.__repr__,pytest_runtest_makereport,pytest_make_collect_report,SetupState.__init__,SetupState.addfinalizer,SetupState._pop_and_teardown,SetupState._callfinalizers,SetupState._teardown_with_finalization,SetupState.teardown_all,SetupState.teardown_exact,SetupState._teardown_towards,SetupState.prepare,collect_one_node",
        "src/_pytest/helpconfig.py:HelpAction.__init__,HelpAction.__call__,pytest_addoption,pytest_cmdline_parse,showversion,pytest_cmdline_main,showhelp,getpluginversioninfo,pytest_report_header,unset_tracing",
        "src/_pytest/hookspec.py:pytest_addhooks,pytest_plugin_registered,pytest_addoption,pytest_configure,pytest_cmdline_parse,pytest_cmdline_preparse,pytest_cmdline_main,pytest_load_initial_conftests,pytest_collection,pytest_collection_modifyitems,pytest_collection_finish,pytest_ignore_collect,pytest_collect_directory,pytest_collect_file,pytest_collectstart,pytest_itemcollected,pytest_collectreport,pytest_deselected,pytest_make_collect_report,pytest_pycollect_makemodule,pytest_pycollect_makeitem,pytest_pyfunc_call,pytest_generate_tests,pytest_make_parametrize_id,pytest_runtestloop,pytest_itemstart,pytest_runtest_protocol,pytest_runtest_logstart,pytest_runtest_logfinish,pytest_runtest_setup,pytest_runtest_call,pytest_runtest_teardown,pytest_runtest_makereport,pytest_runtest_logreport,pytest_report_to_serializable,pytest_report_from_serializable,pytest_fixture_setup,pytest_fixture_post_finalizer,pytest_sessionstart,pytest_sessionfinish,pytest_unconfigure,pytest_assertrepr_compare,pytest_assertion_pass,pytest_report_header,pytest_report_collectionfinish,pytest_report_teststatus,pytest_terminal_summary,pytest_logwarning,pytest_warning_captured,pytest_doctest_prepare_content,pytest_internalerror,pytest_keyboard_interrupt,pytest_exception_interact,pytest_enter_pdb,pytest_leave_pdb",
        "src/_pytest/nose.py:get_skip_exceptions,pytest_runtest_makereport,pytest_runtest_setup,teardown_nose,is_potential_nosetest,call_optional",
        "src/_pytest/tmpdir.py:TempPathFactory.from_config,TempPathFactory.mktemp,TempPathFactory.getbasetemp,TempdirFactory.ensuretemp,TempdirFactory.mktemp,TempdirFactory.getbasetemp,get_user,pytest_configure,tmpdir_factory,tmp_path_factory,_mk_tmp,tmpdir,tmp_path",
        "src/_pytest/freeze_support.py:freeze_includes,_iter_all_modules",
        "src/_pytest/python.py:pyobj_property,pytest_addoption,pytest_cmdline_main,pytest_generate_tests,pytest_configure,pytest_pyfunc_call,pytest_collect_file,path_matches_patterns,pytest_pycollect_makemodule,pytest_pycollect_makeitem,pytest_make_parametrize_id,PyobjMixin.__init__,PyobjMixin.obj,PyobjMixin.obj,PyobjMixin._getobj,PyobjMixin.getmodpath,PyobjMixin.reportinfo,PyCollector.funcnamefilter,PyCollector.isnosetest,PyCollector.classnamefilter,PyCollector.istestfunction,PyCollector.istestclass,PyCollector._matches_prefix_or_glob_option,PyCollector.collect,PyCollector._makeitem,PyCollector._genfunctions,Module._getobj,Module.collect,Module._inject_setup_module_fixture,Module._inject_setup_function_fixture,Module._importtestmodule,Package.__init__,Package.setup,Package._recurse,Package.gethookproxy,Package._collectfile,Package.isinitpath,Package.collect,_get_xunit_setup_teardown,_call_with_optional_argument,_get_non_fixture_func,Class.collect,Class._inject_setup_class_fixture,Class._inject_setup_method_fixture,Instance._getobj,Instance.collect,Instance.newinstance,FunctionMixin.setup,FunctionMixin._prunetraceback,FunctionMixin.repr_failure,hasinit,hasnew,CallSpec2.__init__,CallSpec2.copy,CallSpec2._checkargnotcontained,CallSpec2.getparam,CallSpec2.id,CallSpec2.setmulti2,CallSpec2.setall,Metafunc.__init__,Metafunc.parametrize,Metafunc._resolve_arg_ids,Metafunc._resolve_arg_value_types,Metafunc._validate_if_using_arg_names,_find_parametrized_scope,_ascii_escaped_by_config,_idval,_idvalset,idmaker,show_fixtures_per_test,_show_fixtures_per_test,showfixtures,_showfixtures_main,write_docstring,Function.__init__,Function._initrequest,Function.function,Function._getobj,Function._pyfuncitem,Function.runtest,Function.setup,FunctionDefinition.runtest,get,get_best_relpath,write_fixture,write_item,xunit_setup_module_fixture,xunit_setup_function_fixture,xunit_setup_class_fixture,xunit_setup_method_fixture",
        "src/_pytest/warnings.py:_setoption,pytest_addoption,pytest_configure,catch_warnings_for_item,warning_record_to_str,pytest_runtest_protocol,pytest_collection,pytest_terminal_summary,_issue_warning_captured",
        "src/_pytest/reports.py:getslaveinfoline,BaseReport.__init__,BaseReport.toterminal,BaseReport.get_sections,BaseReport.longreprtext,BaseReport.caplog,BaseReport.capstdout,BaseReport.capstderr,BaseReport.fspath,BaseReport.count_towards_summary,BaseReport.head_line,BaseReport._get_verbose_word,BaseReport._to_json,BaseReport._from_json,_report_unserialization_failure,TestReport.__init__,TestReport.__repr__,TestReport.from_item_and_call,CollectReport.__init__,CollectReport.location,CollectReport.__repr__,CollectErrorRepr.__init__,CollectErrorRepr.toterminal,pytest_report_to_serializable,pytest_report_from_serializable,disassembled_report",
        "src/_pytest/unittest.py:pytest_pycollect_makeitem,UnitTestCase.collect,UnitTestCase._inject_setup_teardown_fixtures,_make_xunit_fixture,TestCaseFunction.setup,TestCaseFunction.teardown,TestCaseFunction.startTest,TestCaseFunction._addexcinfo,TestCaseFunction.addError,TestCaseFunction.addFailure,TestCaseFunction.addSkip,TestCaseFunction.addExpectedFailure,TestCaseFunction.addUnexpectedSuccess,TestCaseFunction.addSuccess,TestCaseFunction.stopTest,TestCaseFunction._handle_skip,TestCaseFunction.runtest,TestCaseFunction._prunetraceback,pytest_runtest_makereport,pytest_runtest_protocol,check_testcase_implements_trial_reporter,fixture,excstore",
        "src/_pytest/setupplan.py:pytest_addoption,pytest_fixture_setup,pytest_cmdline_main",
        "src/_pytest/setuponly.py:pytest_addoption,pytest_fixture_setup,pytest_fixture_post_finalizer,_show_fixture_action,pytest_cmdline_main",
        "src/_pytest/recwarn.py:recwarn,deprecated_call,warns,WarningsRecorder.__init__,WarningsRecorder.list,WarningsRecorder.__getitem__,WarningsRecorder.__iter__,WarningsRecorder.__len__,WarningsRecorder.pop,WarningsRecorder.clear,WarningsRecorder.__enter__,WarningsRecorder.__exit__,WarningsChecker.__init__,WarningsChecker.__exit__",
        "src/_pytest/pastebin.py:pytest_addoption,pytest_configure,pytest_unconfigure,create_new_paste,pytest_terminal_summary,tee_write",
        "src/_pytest/cacheprovider.py:Cache.for_config,Cache.cache_dir_from_config,Cache.warn,Cache.makedir,Cache._getvaluepath,Cache.get,Cache.set,Cache._ensure_supporting_files,LFPlugin.__init__,LFPlugin.last_failed_paths,LFPlugin.pytest_ignore_collect,LFPlugin.pytest_report_collectionfinish,LFPlugin.pytest_runtest_logreport,LFPlugin.pytest_collectreport,LFPlugin.pytest_collection_modifyitems,LFPlugin.pytest_sessionfinish,NFPlugin.__init__,NFPlugin.pytest_collection_modifyitems,NFPlugin._get_increasing_order,NFPlugin.pytest_sessionfinish,pytest_addoption,pytest_cmdline_main,pytest_configure,cache,pytest_report_header,cacheshow",
        "src/_pytest/debugging.py:_validate_usepdb_cls,pytest_addoption,pytest_configure,pytestPDB._is_capturing,pytestPDB._import_pdb_cls,pytestPDB._get_pdb_wrapper_class,pytestPDB._init_pdb,pytestPDB.set_trace,PdbInvoke.pytest_exception_interact,PdbInvoke.pytest_internalerror,PdbTrace.pytest_pyfunc_call,_test_pytest_function,_enter_pdb,_postmortem_traceback,post_mortem,fin,PytestPdbWrapper.do_debug,PytestPdbWrapper.do_continue,PytestPdbWrapper.do_quit,PytestPdbWrapper.setup,PytestPdbWrapper.get_stack",
        "src/_pytest/skipping.py:pytest_addoption,pytest_configure,pytest_runtest_setup,pytest_pyfunc_call,check_xfail_no_run,check_strict_xfail,pytest_runtest_makereport,pytest_report_teststatus,nop",
        "src/_pytest/warning_types.py:PytestExperimentalApiWarning.simple,UnformattedWarning.format",
        "src/_pytest/monkeypatch.py:monkeypatch,resolve,annotated_getattr,derive_importpath,Notset.__repr__,MonkeyPatch.__init__,MonkeyPatch.context,MonkeyPatch.setattr,MonkeyPatch.delattr,MonkeyPatch.setitem,MonkeyPatch.delitem,MonkeyPatch.setenv,MonkeyPatch.delenv,MonkeyPatch.syspath_prepend,MonkeyPatch.chdir,MonkeyPatch.undo",
        "src/_pytest/outcomes.py:OutcomeException.__init__,OutcomeException.__repr__,Skipped.__init__,Exit.__init__,exit,skip,fail,xfail,importorskip",
        "src/_pytest/capture.py:pytest_addoption,pytest_load_initial_conftests,CaptureManager.__init__,CaptureManager.__repr__,CaptureManager._getcapture,CaptureManager.is_capturing,CaptureManager.is_globally_capturing,CaptureManager.start_global_capturing,CaptureManager.stop_global_capturing,CaptureManager.resume_global_capture,CaptureManager.suspend_global_capture,CaptureManager.suspend,CaptureManager.resume,CaptureManager.read_global_capture,CaptureManager.activate_fixture,CaptureManager.deactivate_fixture,CaptureManager.suspend_fixture,CaptureManager.resume_fixture,CaptureManager.global_and_fixture_disabled,CaptureManager.item_capture,CaptureManager.pytest_make_collect_report,CaptureManager.pytest_runtest_protocol,CaptureManager.pytest_runtest_setup,CaptureManager.pytest_runtest_call,CaptureManager.pytest_runtest_teardown,CaptureManager.pytest_keyboard_interrupt,CaptureManager.pytest_internalerror,_ensure_only_one_capture_fixture,capsys,capsysbinary,capfd,capfdbinary,_install_capture_fixture_on_item,CaptureFixture.__init__,CaptureFixture._start,CaptureFixture.close,CaptureFixture.readouterr,CaptureFixture._suspend,CaptureFixture._resume,CaptureFixture.disabled,safe_text_dupfile,EncodedFile.__init__,EncodedFile.write,EncodedFile.writelines,EncodedFile.name,EncodedFile.mode,EncodedFile.__getattr__,MultiCapture.__init__,MultiCapture.__repr__,MultiCapture.start_capturing,MultiCapture.pop_outerr_to_orig,MultiCapture.suspend_capturing,MultiCapture.resume_capturing,MultiCapture.stop_capturing,MultiCapture.readouterr,FDCaptureBinary.__init__,FDCaptureBinary.__repr__,FDCaptureBinary.start,FDCaptureBinary.snap,FDCaptureBinary.done,FDCaptureBinary.suspend,FDCaptureBinary.resume,FDCaptureBinary.writeorg,FDCapture.snap,SysCapture.__init__,SysCapture.__repr__,SysCapture.start,SysCapture.snap,SysCapture.done,SysCapture.suspend,SysCapture.resume,SysCapture.writeorg,SysCaptureBinary.snap,DontReadFromInput.read,DontReadFromInput.__iter__,DontReadFromInput.fileno,DontReadFromInput.isatty,DontReadFromInput.close,DontReadFromInput.buffer,_colorama_workaround,_readline_workaround,_py36_windowsconsoleio_workaround,_reopen_stdio",
        "src/_pytest/config/argparsing.py:Parser.__init__,Parser.processoption,Parser.getgroup,Parser.addoption,Parser.parse,Parser._getparser,Parser.parse_setoption,Parser.parse_known_args,Parser.parse_known_and_unknown_args,Parser.addini,ArgumentError.__init__,ArgumentError.__str__,Argument.__init__,Argument.names,Argument.attrs,Argument._set_opt_strings,Argument.__repr__,OptionGroup.__init__,OptionGroup.addoption,OptionGroup._addoption,OptionGroup._addoption_instance,MyOptionParser.__init__,MyOptionParser.error,MyOptionParser.parse_args,DropShorterLongHelpFormatter._format_action_invocation,_parse_optional",
        "src/_pytest/config/findpaths.py:exists,getcfg,get_common_ancestor,get_dirs_from_args,determine_setup,is_option,get_file_part_from_node_id,get_dir_from_path",
        "src/_pytest/config/__init__.py:ConftestImportFailure.__init__,main,filename_arg,directory_arg,get_config,get_plugin_manager,_prepareconfig,PytestPluginManager.__init__,PytestPluginManager.parse_hookimpl_opts,PytestPluginManager.parse_hookspec_opts,PytestPluginManager.register,PytestPluginManager.getplugin,PytestPluginManager.hasplugin,PytestPluginManager.pytest_configure,PytestPluginManager._set_initial_conftests,PytestPluginManager._try_load_conftest,PytestPluginManager._getconftestmodules,PytestPluginManager._rget_with_confmod,PytestPluginManager._importconftest,PytestPluginManager.consider_preparse,PytestPluginManager.consider_pluginarg,PytestPluginManager.consider_conftest,PytestPluginManager.consider_env,PytestPluginManager.consider_module,PytestPluginManager._import_plugin_specs,PytestPluginManager.import_plugin,_get_plugin_specs_as_list,_ensure_removed_sysmodule,Notset.__repr__,_iter_rewritable_modules,Config.__init__,Config.add_cleanup,Config._do_configure,Config._ensure_unconfigure,Config.get_terminal_writer,Config.pytest_cmdline_parse,Config.notify_exception,Config.cwd_relative_nodeid,Config.fromdictargs,Config._processopt,Config.pytest_load_initial_conftests,Config._initini,Config._consider_importhook,Config._mark_plugins_for_rewrite,Config._validate_args,Config._preparse,Config._checkversion,Config.parse,Config.addinivalue_line,Config.getini,Config._getini,Config._getconftest_pathlist,Config._get_override_ini_value,Config.getoption,Config.getvalue,Config.getvalueorskip,_assertion_supported,_warn_about_missing_assertion,setns,create_terminal_writer,_strtobool",
        "src/_pytest/mark/legacy.py:MarkMapping.from_item,MarkMapping.__getitem__,KeywordMapping.__init__,KeywordMapping.from_item,KeywordMapping.__getitem__,matchmark,matchkeyword",
        "src/_pytest/mark/__init__.py:param,pytest_addoption,pytest_cmdline_main,deselect_by_keyword,deselect_by_mark,pytest_collection_modifyitems,pytest_configure,pytest_unconfigure",
        "src/_pytest/mark/structures.py:alias,istestfunc,get_empty_parameterset_mark,ParameterSet.param,ParameterSet.extract_from,ParameterSet._parse_parametrize_args,ParameterSet._parse_parametrize_parameters,ParameterSet._for_parametrize,Mark.combined_with,MarkDecorator.markname,MarkDecorator.__eq__,MarkDecorator.__repr__,MarkDecorator.with_args,MarkDecorator.__call__,get_unpacked_marks,normalize_mark_list,store_mark,MarkGenerator.__getattr__,NodeKeywords.__init__,NodeKeywords.__getitem__,NodeKeywords.__setitem__,NodeKeywords.__delitem__,NodeKeywords.__iter__,NodeKeywords._seen,NodeKeywords.__len__,NodeKeywords.__repr__,NodeMarkers.update,NodeMarkers.find,NodeMarkers.__iter__,warned",
        "src/_pytest/mark/evaluate.py:cached_eval,MarkEvaluator.__init__,MarkEvaluator.__bool__,MarkEvaluator.wasvalid,MarkEvaluator._get_marks,MarkEvaluator.invalidraise,MarkEvaluator.istrue,MarkEvaluator._getglobals,MarkEvaluator._istrue,MarkEvaluator.get,MarkEvaluator.getexplanation",
        "src/_pytest/assertion/util.py:format_explanation,_split_explanation,_format_lines,issequence,istext,isdict,isset,isdatacls,isattrs,isiterable,assertrepr_compare,_diff_text,_compare_eq_verbose,_compare_eq_iterable,_compare_eq_sequence,_compare_eq_set,_compare_eq_dict,_compare_eq_cls,_notin_text,escape_for_readable_diff",
        "src/_pytest/assertion/__init__.py:pytest_addoption,register_assert_rewrite,DummyRewriteHook.mark_rewrite,AssertionState.__init__,install_importhook,pytest_collection,pytest_runtest_setup,pytest_runtest_teardown,pytest_sessionfinish,undo,callbinrepr,call_assertion_pass_hook",
        "src/_pytest/assertion/truncate.py:truncate_if_required,_should_truncate_item,_running_on_ci,_truncate_explanation,_truncate_by_char_count",
        "src/_pytest/assertion/rewrite.py:AssertionRewritingHook.__init__,AssertionRewritingHook.set_session,AssertionRewritingHook.find_spec,AssertionRewritingHook.create_module,AssertionRewritingHook.exec_module,AssertionRewritingHook._early_rewrite_bailout,AssertionRewritingHook._should_rewrite,AssertionRewritingHook._is_marked_for_rewrite,AssertionRewritingHook.mark_rewrite,AssertionRewritingHook._warn_already_imported,AssertionRewritingHook.get_data,_write_pyc,_rewrite_test,_read_pyc,rewrite_asserts,_saferepr,_format_assertmsg,_should_repr_global_name,_format_boolop,_call_reprcompare,_call_assertion_pass,_check_if_assertion_pass_impl,set_location,_get_assertion_exprs,AssertionRewriter.__init__,AssertionRewriter._assert_expr_to_lineno,AssertionRewriter.run,AssertionRewriter.is_rewrite_disabled,AssertionRewriter.variable,AssertionRewriter.assign,AssertionRewriter.display,AssertionRewriter.helper,AssertionRewriter.builtin,AssertionRewriter.explanation_param,AssertionRewriter.push_format_context,AssertionRewriter.pop_format_context,AssertionRewriter.generic_visit,AssertionRewriter.visit_Assert,AssertionRewriter.warn_about_none_ast,AssertionRewriter.visit_Name,AssertionRewriter.visit_BoolOp,AssertionRewriter.visit_UnaryOp,AssertionRewriter.visit_BinOp,AssertionRewriter.visit_Call,AssertionRewriter.visit_Starred,AssertionRewriter.visit_Attribute,AssertionRewriter.visit_Compare,_fix,_write_and_reset",
        "src/_pytest/_code/code.py:Code.__init__,Code.__eq__,Code.__ne__,Code.path,Code.fullsource,Code.source,Code.getargs,Frame.__init__,Frame.statement,Frame.eval,Frame.exec_,Frame.repr,Frame.is_true,Frame.getargs,TracebackEntry.__init__,TracebackEntry.set_repr_style,TracebackEntry.frame,TracebackEntry.relline,TracebackEntry.__repr__,TracebackEntry.statement,TracebackEntry.path,TracebackEntry.getlocals,TracebackEntry.getfirstlinesource,TracebackEntry.getsource,TracebackEntry.ishidden,TracebackEntry.__str__,TracebackEntry.name,Traceback.__init__,Traceback.cut,Traceback.__getitem__,Traceback.filter,Traceback.getcrashentry,Traceback.recursionindex,ExceptionInfo.from_current,ExceptionInfo.for_later,ExceptionInfo.type,ExceptionInfo.value,ExceptionInfo.tb,ExceptionInfo.typename,ExceptionInfo.traceback,ExceptionInfo.traceback,ExceptionInfo.__repr__,ExceptionInfo.exconly,ExceptionInfo.errisinstance,ExceptionInfo._getreprcrash,ExceptionInfo.getrepr,ExceptionInfo.match,FormattedExcinfo._getindent,FormattedExcinfo._getentrysource,FormattedExcinfo.repr_args,FormattedExcinfo.get_source,FormattedExcinfo.get_exconly,FormattedExcinfo.repr_locals,FormattedExcinfo.repr_traceback_entry,FormattedExcinfo._makepath,FormattedExcinfo.repr_traceback,FormattedExcinfo._truncate_recursive_traceback,FormattedExcinfo.repr_excinfo,TerminalRepr.__str__,TerminalRepr.__repr__,ExceptionRepr.__init__,ExceptionRepr.addsection,ExceptionRepr.toterminal,ExceptionChainRepr.__init__,ExceptionChainRepr.toterminal,ReprExceptionInfo.__init__,ReprExceptionInfo.toterminal,ReprTraceback.__init__,ReprTraceback.toterminal,ReprTracebackNative.__init__,ReprEntryNative.__init__,ReprEntryNative.toterminal,ReprEntry.__init__,ReprEntry.toterminal,ReprEntry.__str__,ReprFileLocation.__init__,ReprFileLocation.toterminal,ReprLocals.__init__,ReprLocals.toterminal,ReprFuncArgs.__init__,ReprFuncArgs.toterminal,getrawcode,filter_traceback,f",
        "src/_pytest/_code/source.py:Source.__init__,Source.__eq__,Source.__getitem__,Source.__len__,Source.strip,Source.putaround,Source.indent,Source.getstatement,Source.getstatementrange,Source.deindent,Source.isparseable,Source.__str__,Source.compile,compile_,getfslineno,findsource,getsource,deindent,get_statement_startend2,getstatementrange_ast",
        "src/_pytest/_io/saferepr.py:_call_and_format_exception,SafeRepr.repr,SafeRepr.repr_unicode,SafeRepr.repr_instance,SafeRepr._callhelper,safeformat,saferepr,repr",
        "scripts/release.py:announce,regen,fix_formatting,pre_release,changelog,main",
        "doc/en/conf.py:setup",
        "doc/en/example/multipython.py:python1,python2,Python.__init__,Python.dumps,Python.load_and_is_true,test_basic_objects",
        "doc/en/example/pythoncollection.py:test_function,TestClass.test_method,TestClass.test_anothermethod",
        "doc/en/example/xfail_demo.py:test_hello,test_hello2,test_hello3,test_hello4,test_hello5,test_hello6,test_hello7",
        "doc/en/example/nonpython/conftest.py:pytest_collect_file,YamlFile.collect,YamlItem.__init__,YamlItem.runtest,YamlItem.repr_failure,YamlItem.reportinfo",
        "doc/en/example/py2py3/test_py3.py:test_exception_syntax",
        "doc/en/example/py2py3/conftest.py:DummyCollector.collect,pytest_pycollect_makemodule",
        "doc/en/example/costlysetup/conftest.py:setup,CostlySetup.__init__,CostlySetup.finalize",
        "doc/en/example/costlysetup/sub_a/test_quick.py:test_quick",
        "doc/en/example/costlysetup/sub_b/test_two.py:test_something,test_something_more",
        "doc/en/example/assertion/failure_demo.py:otherfunc,somefunc,otherfunc_multi,test_generative,TestFailing.test_simple,TestFailing.test_simple_multiline,TestFailing.test_not,TestSpecialisedExplanations.test_eq_text,TestSpecialisedExplanations.test_eq_similar_text,TestSpecialisedExplanations.test_eq_multiline_text,TestSpecialisedExplanations.test_eq_long_text,TestSpecialisedExplanations.test_eq_long_text_multiline,TestSpecialisedExplanations.test_eq_list,TestSpecialisedExplanations.test_eq_list_long,TestSpecialisedExplanations.test_eq_dict,TestSpecialisedExplanations.test_eq_set,TestSpecialisedExplanations.test_eq_longer_list,TestSpecialisedExplanations.test_in_list,TestSpecialisedExplanations.test_not_in_text_multiline,TestSpecialisedExplanations.test_not_in_text_single,TestSpecialisedExplanations.test_not_in_text_single_long,TestSpecialisedExplanations.test_not_in_text_single_long_term,TestSpecialisedExplanations.test_eq_dataclass,TestSpecialisedExplanations.test_eq_attrs,test_attribute,test_attribute_instance,test_attribute_failure,test_attribute_multiple,globf,TestRaises.test_raises,TestRaises.test_raises_doesnt,TestRaises.test_raise,TestRaises.test_tupleerror,TestRaises.test_reinterpret_fails_with_print_for_the_fun_of_it,TestRaises.test_some_error,TestRaises.func1,test_dynamic_compile_shows_nicely,TestMoreErrors.test_complex_error,TestMoreErrors.test_z1_unpack_error,TestMoreErrors.test_z2_type_error,TestMoreErrors.test_startswith,TestMoreErrors.test_startswith_nested,TestMoreErrors.test_global_func,TestMoreErrors.test_instance,TestMoreErrors.test_compare,TestMoreErrors.test_try_finally,TestCustomAssertMsg.test_single_line,TestCustomAssertMsg.test_multiline,TestCustomAssertMsg.test_custom_repr,Foo._get_b,f,g,f,f,g,f,g,JSON.__repr__",
        "doc/en/example/assertion/test_setup_flow_example.py:setup_module,TestStateFullThing.setup_class,TestStateFullThing.teardown_class,TestStateFullThing.setup_method,TestStateFullThing.test_42,TestStateFullThing.test_23,teardown_module",
        "doc/en/example/assertion/test_failures.py:test_failure_demo_fails_properly",
        "doc/en/example/assertion/global_testmodule_config/test_hello_world.py:test_func",
        "doc/en/example/assertion/global_testmodule_config/conftest.py:pytest_runtest_setup",
        "extra/get_issues.py:get_issues,main,_get_kind,report",
        "bench/skip.py:test_foo",
        "bench/manyparam.py:foo,test_it,test_it2"
    ]
}