{
    "sqlfluff/sqlfluff/4764": {
        "results": [
            {
                "file": "src/sqlfluff/rules/jinja/JJ01.py"
            },
            {
                "file": "docs/source/_ext/sqlfluff_domain.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linting_result.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/sequence.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/rules/reference.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sparksql_keywords.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/context.py"
            },
            {
                "file": "src/sqlfluff/rules/aliasing/AL07.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/raw_file_slice_predicates.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_logging.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT03.py"
            },
            {
                "file": "src/sqlfluff/core/cached_property.py"
            },
            {
                "file": "src/sqlfluff/utils/identifers.py"
            },
            {
                "file": "src/sqlfluff/core/parser/markers.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/setup.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_athena.py"
            },
            {
                "file": "src/sqlfluff/core/rules/doc_decorators.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sqlite_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_result.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2862": {
        "results": [
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "src/sqlfluff/rules/L011.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L008.py"
            },
            {
                "file": "src/sqlfluff/rules/L057.py"
            },
            {
                "file": "src/sqlfluff/rules/L004.py"
            },
            {
                "file": "src/sqlfluff/rules/L059.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/lib.py"
            },
            {
                "file": "src/sqlfluff/rules/L024.py"
            },
            {
                "file": "src/sqlfluff/rules/L014.py"
            },
            {
                "file": "src/sqlfluff/rules/L043.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive.py"
            },
            {
                "file": "src/sqlfluff/cli/formatters.py"
            },
            {
                "file": "src/sqlfluff/rules/L046.py"
            },
            {
                "file": "src/sqlfluff/rules/L040.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery_keywords.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_spark3_keywords.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/python.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2336": {
        "results": [
            {
                "file": "src/sqlfluff/core/cached_property.py"
            },
            {
                "file": "src/sqlfluff/rules/L055.py"
            },
            {
                "file": "src/sqlfluff/rules/L019.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/hookspecs.py"
            },
            {
                "file": "src/sqlfluff/cli/formatters.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/host.py"
            },
            {
                "file": "src/sqlfluff/rules/L034.py"
            },
            {
                "file": "src/sqlfluff/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/lib.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/jinja.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/placeholder.py"
            },
            {
                "file": "src/sqlfluff/core/parser/matchable.py"
            },
            {
                "file": "src/sqlfluff/rules/L006.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/templated_file_slices.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sqlite.py"
            },
            {
                "file": "src/sqlfluff/core/rules/loader.py"
            },
            {
                "file": "examples/01_basic_api_usage.py"
            },
            {
                "file": "src/sqlfluff/rules/L042.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/5074": {
        "results": [
            {
                "file": "src/sqlfluff/rules/convention/CV11.py"
            },
            {
                "file": "src/sqlfluff/utils/testing/logging.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/noncode.py"
            },
            {
                "file": "src/sqlfluff/api/info.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_duckdb.py"
            },
            {
                "file": "src/sqlfluff/utils/testing/cli.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_redshift.py"
            },
            {
                "file": "src/sqlfluff/rules/convention/CV04.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery.py"
            },
            {
                "file": "docs/generate-rule-docs.py"
            },
            {
                "file": "src/sqlfluff/utils/analysis/select_crawler.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT05.py"
            },
            {
                "file": "src/sqlfluff/rules/convention/CV03.py"
            },
            {
                "file": "src/sqlfluff/rules/capitalisation/CP01.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/convention/CV02.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT08.py"
            },
            {
                "file": "examples/04_config_overrides.py"
            },
            {
                "file": "docs/source/_ext/sqlfluff_domain.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3436": {
        "results": [
            {
                "file": "src/sqlfluff/dialects/dialect_tsql.py"
            },
            {
                "file": "src/sqlfluff/rules/L018.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sparksql.py"
            },
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/noncode.py"
            },
            {
                "file": "src/sqlfluff/rules/L038.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L044.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L013.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/base.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/host.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "src/sqlfluff/rules/L061.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L062.py"
            },
            {
                "file": "src/sqlfluff/rules/L007.py"
            },
            {
                "file": "src/sqlfluff/rules/L060.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_teradata.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2849": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L042.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/greedy.py"
            },
            {
                "file": "src/sqlfluff/core/linter/runner.py"
            },
            {
                "file": "src/sqlfluff/rules/L041.py"
            },
            {
                "file": "src/sqlfluff/rules/L019.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/segment_predicates.py"
            },
            {
                "file": "src/sqlfluff/rules/L056.py"
            },
            {
                "file": "src/sqlfluff/rules/L031.py"
            },
            {
                "file": "src/sqlfluff/cli/autocomplete.py"
            },
            {
                "file": "src/sqlfluff/rules/L061.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            },
            {
                "file": "src/sqlfluff/rules/L032.py"
            },
            {
                "file": "src/sqlfluff/rules/L052.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/slicers/tracer.py"
            },
            {
                "file": "src/sqlfluff/rules/L002.py"
            },
            {
                "file": "src/sqlfluff/rules/L062.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/templated_file_slices.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_result.py"
            },
            {
                "file": "src/sqlfluff/rules/L051.py"
            },
            {
                "file": "src/sqlfluff/rules/L017.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/884": {
        "results": [
            {
                "file": "src/sqlfluff/core/rules/std/L036.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L043.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/base.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/keyword.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/dialect_ansi.py"
            },
            {
                "file": "src/sqlfluff/diff_quality_plugin.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L045.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/dialect_postgres.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L034.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L024.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/ansi_keywords.py"
            },
            {
                "file": "examples/04_getting_rules_and_dialects.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L022.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L026.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L004.py"
            },
            {
                "file": "src/sqlfluff/core/rules/doc_decorators.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L039.py"
            },
            {
                "file": "src/sqlfluff/core/config.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/setup.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4151": {
        "results": [
            {
                "file": "src/sqlfluff/core/parser/grammar/delimited.py"
            },
            {
                "file": "src/sqlfluff/rules/L032.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/raw_file_slices.py"
            },
            {
                "file": "src/sqlfluff/rules/L027.py"
            },
            {
                "file": "src/sqlfluff/rules/L028.py"
            },
            {
                "file": "src/sqlfluff/rules/L043.py"
            },
            {
                "file": "src/sqlfluff/rules/L069.py"
            },
            {
                "file": "src/sqlfluff/rules/L037.py"
            },
            {
                "file": "examples/02_timing_api_steps.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/python.py"
            },
            {
                "file": "src/sqlfluff/rules/L064.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/context.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/raw.py"
            },
            {
                "file": "src/sqlfluff/rules/L018.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/elements.py"
            },
            {
                "file": "src/sqlfluff/rules/L066.py"
            },
            {
                "file": "src/sqlfluff/rules/L044.py"
            },
            {
                "file": "src/sqlfluff/rules/L052.py"
            },
            {
                "file": "src/sqlfluff/rules/L038.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/sequence.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3354": {
        "results": [
            {
                "file": "setup.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_redshift.py"
            },
            {
                "file": "src/sqlfluff/core/rules/loader.py"
            },
            {
                "file": "src/sqlfluff/rules/L034.py"
            },
            {
                "file": "src/sqlfluff/core/linter/common.py"
            },
            {
                "file": "src/sqlfluff/rules/L004.py"
            },
            {
                "file": "src/sqlfluff/rules/L056.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/templated_file_slice_predicates.py"
            },
            {
                "file": "src/sqlfluff/rules/L005.py"
            },
            {
                "file": "src/sqlfluff/api/info.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_redshift_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L026.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/generator.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/placeholder.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/sqlfluff_templater_dbt/templater.py"
            },
            {
                "file": "src/sqlfluff/rules/L024.py"
            },
            {
                "file": "examples/01_basic_api_usage.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3700": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L059.py"
            },
            {
                "file": "src/sqlfluff/rules/L044.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L002.py"
            },
            {
                "file": "src/sqlfluff/core/rules/reference.py"
            },
            {
                "file": "src/sqlfluff/rules/L031.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/generator.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/context.py"
            },
            {
                "file": "src/sqlfluff/rules/L052.py"
            },
            {
                "file": "examples/03_getting_rules_and_dialects.py"
            },
            {
                "file": "src/sqlfluff/utils/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/rules/L039.py"
            },
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            },
            {
                "file": "src/sqlfluff/rules/L036.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/lib.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L048.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3608": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L025.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/base.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_redshift_keywords.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/sqlfluff_templater_dbt/templater.py"
            },
            {
                "file": "src/sqlfluff/rules/L053.py"
            },
            {
                "file": "src/sqlfluff/rules/L020.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_logging.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/base.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L009.py"
            },
            {
                "file": "src/sqlfluff/rules/L038.py"
            },
            {
                "file": "src/sqlfluff/rules/L011.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_wrapper.py"
            },
            {
                "file": "src/sqlfluff/rules/L047.py"
            },
            {
                "file": "src/sqlfluff/core/rules/reference.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_athena_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linter.py"
            },
            {
                "file": "src/sqlfluff/rules/L012.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3435": {
        "results": [
            {
                "file": "plugins/sqlfluff-templater-dbt/setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L004.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/generator.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_mysql.py"
            },
            {
                "file": "src/sqlfluff/core/parser/matchable.py"
            },
            {
                "file": "src/sqlfluff/rules/L058.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/segments.py"
            },
            {
                "file": "src/sqlfluff/rules/L025.py"
            },
            {
                "file": "src/sqlfluff/core/cached_property.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi.py"
            },
            {
                "file": "util.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/delimited.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L002.py"
            },
            {
                "file": "src/sqlfluff/rules/L041.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/slicers/tracer.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L015.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3904": {
        "results": [
            {
                "file": "src/sqlfluff/core/rules/loader.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "src/sqlfluff/cli/formatters.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            },
            {
                "file": "src/sqlfluff/rules/L038.py"
            },
            {
                "file": "src/sqlfluff/core/cached_property.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/base.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linter.py"
            },
            {
                "file": "examples/02_timing_api_steps.py"
            },
            {
                "file": "src/sqlfluff/core/enums.py"
            },
            {
                "file": "src/sqlfluff/rules/L059.py"
            },
            {
                "file": "src/sqlfluff/rules/L024.py"
            },
            {
                "file": "src/sqlfluff/rules/L039.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/depthmap.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/noncode.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/elements.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4753": {
        "results": [
            {
                "file": "src/sqlfluff/core/parser/context.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/raw_file_slice_predicates.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_duckdb.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/reindent.py"
            },
            {
                "file": "src/sqlfluff/utils/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/rules/aliasing/AL06.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/context.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT01.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM04.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/templated_file_slices.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/respace.py"
            },
            {
                "file": "src/sqlfluff/core/rules/crawlers.py"
            },
            {
                "file": "src/sqlfluff/utils/testing/logging.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_clickhouse.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_databricks_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            },
            {
                "file": "src/sqlfluff/rules/references/RF02.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM07.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_greenplum.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4778": {
        "results": [
            {
                "file": "src/sqlfluff/core/linter/linter.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/generator.py"
            },
            {
                "file": "src/sqlfluff/rules/capitalisation/CP05.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sqlite.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/lib.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_logging.py"
            },
            {
                "file": "src/sqlfluff/api/info.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT03.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/segment_predicates.py"
            },
            {
                "file": "src/sqlfluff/rules/structure/ST05.py"
            },
            {
                "file": "src/sqlfluff/rules/convention/CV03.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM04.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/conditional.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT10.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_databricks.py"
            },
            {
                "file": "src/sqlfluff/utils/testing/logging.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/base.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linting_result.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2907": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L010.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/ephemeral.py"
            },
            {
                "file": "util.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parsers.py"
            },
            {
                "file": "src/sqlfluff/rules/L054.py"
            },
            {
                "file": "src/sqlfluff/rules/L051.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/slicers/tracer.py"
            },
            {
                "file": "examples/02_timing_api_steps.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            },
            {
                "file": "docs/source/conf.py"
            },
            {
                "file": "src/sqlfluff/core/rules/config_info.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/enums.py"
            },
            {
                "file": "src/sqlfluff/rules/L020.py"
            },
            {
                "file": "src/sqlfluff/rules/L007.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linting_result.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4051": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L045.py"
            },
            {
                "file": "src/sqlfluff/rules/L004.py"
            },
            {
                "file": "examples/03_getting_rules_and_dialects.py"
            },
            {
                "file": "src/sqlfluff/rules/L032.py"
            },
            {
                "file": "src/sqlfluff/api/simple.py"
            },
            {
                "file": "src/sqlfluff/utils/testing/cli.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/slicers/tracer.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sqlite.py"
            },
            {
                "file": "src/sqlfluff/core/cached_property.py"
            },
            {
                "file": "src/sqlfluff/core/parser/helpers.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parser.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "src/sqlfluff/core/linter/runner.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_mysql_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L035.py"
            },
            {
                "file": "src/sqlfluff/rules/L043.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L024.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/905": {
        "results": [
            {
                "file": "src/sqlfluff/core/rules/analysis/select.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L027.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/base.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/ephemeral.py"
            },
            {
                "file": "examples/02_timing_api_steps.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/jinja.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol.py"
            },
            {
                "file": "src/sqlfluff/core/parser/matchable.py"
            },
            {
                "file": "src/sqlfluff/core/parser/context.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/hookspecs.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L045.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L003.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_teradata.py"
            },
            {
                "file": "docs/source/conf.py"
            },
            {
                "file": "examples/04_getting_rules_and_dialects.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/1625": {
        "results": [
            {
                "file": "src/sqlfluff/core/parser/segments/ephemeral.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            },
            {
                "file": "src/sqlfluff/rules/L011.py"
            },
            {
                "file": "src/sqlfluff/rules/L041.py"
            },
            {
                "file": "src/sqlfluff/rules/L017.py"
            },
            {
                "file": "src/sqlfluff/rules/L013.py"
            },
            {
                "file": "src/sqlfluff/core/rules/analysis/select_crawler.py"
            },
            {
                "file": "src/sqlfluff/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/rules/L007.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/core/parser/markers.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L024.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/sequence.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/anyof.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/sqlfluff_templater_dbt/templater.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parsers.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2326": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L055.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/generator.py"
            },
            {
                "file": "src/sqlfluff/rules/L044.py"
            },
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            },
            {
                "file": "src/sqlfluff/rules/L034.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "docs/source/conf.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/noncode.py"
            },
            {
                "file": "src/sqlfluff/diff_quality_plugin.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_logging.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/setup.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/src/example/rules.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/delimited.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/base.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L017.py"
            },
            {
                "file": "src/sqlfluff/api/info.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "src/sqlfluff/core/linter/runner.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3220": {
        "results": [
            {
                "file": "docs/source/conf.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_redshift_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L057.py"
            },
            {
                "file": "src/sqlfluff/core/enums.py"
            },
            {
                "file": "src/sqlfluff/core/rules/loader.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/hookspecs.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/segments.py"
            },
            {
                "file": "src/sqlfluff/rules/L024.py"
            },
            {
                "file": "src/sqlfluff/rules/L012.py"
            },
            {
                "file": "src/sqlfluff/rules/L010.py"
            },
            {
                "file": "src/sqlfluff/rules/L028.py"
            },
            {
                "file": "src/sqlfluff/rules/L039.py"
            },
            {
                "file": "src/sqlfluff/rules/L030.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "examples/03_getting_rules_and_dialects.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive_keywords.py"
            },
            {
                "file": "util.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            },
            {
                "file": "src/sqlfluff/rules/L015.py"
            },
            {
                "file": "src/sqlfluff/rules/L035.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2419": {
        "results": [
            {
                "file": "src/sqlfluff/core/parser/grammar/delimited.py"
            },
            {
                "file": "src/sqlfluff/core/linter/common.py"
            },
            {
                "file": "src/sqlfluff/rules/L053.py"
            },
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_wrapper.py"
            },
            {
                "file": "src/sqlfluff/rules/L009.py"
            },
            {
                "file": "src/sqlfluff/rules/L057.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_spark3.py"
            },
            {
                "file": "src/sqlfluff/core/parser/helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L041.py"
            },
            {
                "file": "src/sqlfluff/rules/L010.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/base.py"
            },
            {
                "file": "examples/01_basic_api_usage.py"
            },
            {
                "file": "src/sqlfluff/cli/autocomplete.py"
            },
            {
                "file": "src/sqlfluff/rules/L055.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/templated_file_slices.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L054.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3170": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L044.py"
            },
            {
                "file": "src/sqlfluff/rules/L004.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql_keywords.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres.py"
            },
            {
                "file": "src/sqlfluff/rules/L024.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linting_result.py"
            },
            {
                "file": "src/sqlfluff/rules/L016.py"
            },
            {
                "file": "src/sqlfluff/rules/L062.py"
            },
            {
                "file": "src/sqlfluff/rules/L025.py"
            },
            {
                "file": "examples/01_basic_api_usage.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linter.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/delimited.py"
            },
            {
                "file": "src/sqlfluff/rules/L034.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/slicers/tracer.py"
            },
            {
                "file": "src/sqlfluff/rules/L013.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/python.py"
            },
            {
                "file": "src/sqlfluff/cli/outputstream.py"
            },
            {
                "file": "src/sqlfluff/rules/L036.py"
            },
            {
                "file": "src/sqlfluff/rules/L010.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2846": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L006.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/raw_file_slices.py"
            },
            {
                "file": "src/sqlfluff/rules/L026.py"
            },
            {
                "file": "src/sqlfluff/rules/L056.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L007.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi.py"
            },
            {
                "file": "src/sqlfluff/rules/L062.py"
            },
            {
                "file": "src/sqlfluff/rules/L014.py"
            },
            {
                "file": "src/sqlfluff/rules/L013.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/segments.py"
            },
            {
                "file": "src/sqlfluff/rules/L055.py"
            },
            {
                "file": "src/sqlfluff/core/timing.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L016.py"
            },
            {
                "file": "src/sqlfluff/rules/L034.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/python.py"
            },
            {
                "file": "src/sqlfluff/cli/formatters.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3662": {
        "results": [
            {
                "file": "src/sqlfluff/dialects/dialect_redshift.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/sequence.py"
            },
            {
                "file": "src/sqlfluff/rules/L033.py"
            },
            {
                "file": "src/sqlfluff/core/config.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L032.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/segment_predicates.py"
            },
            {
                "file": "src/sqlfluff/rules/L049.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L023.py"
            },
            {
                "file": "src/sqlfluff/rules/L017.py"
            },
            {
                "file": "src/sqlfluff/rules/L003.py"
            },
            {
                "file": "src/sqlfluff/rules/L030.py"
            },
            {
                "file": "src/sqlfluff/rules/L036.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            },
            {
                "file": "src/sqlfluff/core/parser/markers.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery.py"
            },
            {
                "file": "src/sqlfluff/core/rules/base.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery_keywords.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4997": {
        "results": [
            {
                "file": "src/sqlfluff/dialects/dialect_athena.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/raw_file_slice_predicates.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/segments.py"
            },
            {
                "file": "src/sqlfluff/rules/jinja/JJ01.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/placeholder.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/jinja.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/respace.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_databricks.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM01.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/slicers/tracer.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/templated_file_slice_predicates.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/base.py"
            },
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            },
            {
                "file": "src/sqlfluff/rules/convention/CV01.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM06.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT13.py"
            },
            {
                "file": "src/sqlfluff/rules/convention/CV02.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/sequence.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sparksql.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/reindent.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2998": {
        "results": [
            {
                "file": "src/sqlfluff/core/rules/config_info.py"
            },
            {
                "file": "src/sqlfluff/rules/L011.py"
            },
            {
                "file": "src/sqlfluff/rules/L043.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/noncode.py"
            },
            {
                "file": "examples/02_timing_api_steps.py"
            },
            {
                "file": "src/sqlfluff/rules/L040.py"
            },
            {
                "file": "src/sqlfluff/rules/L025.py"
            },
            {
                "file": "src/sqlfluff/rules/L021.py"
            },
            {
                "file": "src/sqlfluff/core/rules/analysis/select.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/host.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            },
            {
                "file": "src/sqlfluff/rules/L005.py"
            },
            {
                "file": "src/sqlfluff/rules/L006.py"
            },
            {
                "file": "src/sqlfluff/rules/L013.py"
            },
            {
                "file": "src/sqlfluff/core/rules/doc_decorators.py"
            },
            {
                "file": "src/sqlfluff/rules/L054.py"
            },
            {
                "file": "src/sqlfluff/rules/L029.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_logging.py"
            },
            {
                "file": "src/sqlfluff/rules/L016.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/1733": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L049.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L042.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            },
            {
                "file": "src/sqlfluff/rules/L023.py"
            },
            {
                "file": "src/sqlfluff/rules/L005.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L027.py"
            },
            {
                "file": "src/sqlfluff/rules/L002.py"
            },
            {
                "file": "src/sqlfluff/rules/L007.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parsers.py"
            },
            {
                "file": "examples/02_timing_api_steps.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/hookspecs.py"
            },
            {
                "file": "src/sqlfluff/rules/L018.py"
            },
            {
                "file": "src/sqlfluff/rules/L036.py"
            },
            {
                "file": "src/sqlfluff/rules/L014.py"
            },
            {
                "file": "src/sqlfluff/rules/L041.py"
            },
            {
                "file": "examples/01_basic_api_usage.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3648": {
        "results": [
            {
                "file": "docs/source/conf.py"
            },
            {
                "file": "src/sqlfluff/cli/commands.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parser.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive_keywords.py"
            },
            {
                "file": "examples/03_getting_rules_and_dialects.py"
            },
            {
                "file": "src/sqlfluff/core/rules/config_info.py"
            },
            {
                "file": "src/sqlfluff/core/rules/doc_decorators.py"
            },
            {
                "file": "src/sqlfluff/rules/L050.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/hookspecs.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol_keywords.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_redshift_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L043.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/python.py"
            },
            {
                "file": "src/sqlfluff/core/rules/reference.py"
            },
            {
                "file": "src/sqlfluff/rules/L033.py"
            },
            {
                "file": "src/sqlfluff/rules/L049.py"
            },
            {
                "file": "src/sqlfluff/core/parser/helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L032.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/delimited.py"
            },
            {
                "file": "src/sqlfluff/rules/L028.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4043": {
        "results": [
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/config.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            },
            {
                "file": "src/sqlfluff/rules/L034.py"
            },
            {
                "file": "src/sqlfluff/rules/L004.py"
            },
            {
                "file": "src/sqlfluff/core/enums.py"
            },
            {
                "file": "src/sqlfluff/rules/L060.py"
            },
            {
                "file": "src/sqlfluff/rules/L016.py"
            },
            {
                "file": "src/sqlfluff/api/info.py"
            },
            {
                "file": "src/sqlfluff/core/rules/doc_decorators.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/setup.py"
            },
            {
                "file": "src/sqlfluff/cli/autocomplete.py"
            },
            {
                "file": "src/sqlfluff/utils/analysis/select.py"
            },
            {
                "file": "src/sqlfluff/core/parser/markers.py"
            },
            {
                "file": "src/sqlfluff/core/rules/crawlers.py"
            },
            {
                "file": "src/sqlfluff/rules/L052.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/raw.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/reindent.py"
            },
            {
                "file": "src/sqlfluff/utils/analysis/select_crawler.py"
            },
            {
                "file": "src/sqlfluff/rules/L012.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2509": {
        "results": [
            {
                "file": "src/sqlfluff/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/conditional.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_result.py"
            },
            {
                "file": "src/sqlfluff/cli/formatters.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L025.py"
            },
            {
                "file": "src/sqlfluff/rules/L040.py"
            },
            {
                "file": "src/sqlfluff/rules/L046.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/src/example/rules.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi_keywords.py"
            },
            {
                "file": "examples/03_getting_rules_and_dialects.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/greedy.py"
            },
            {
                "file": "src/sqlfluff/rules/L015.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/base.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi.py"
            },
            {
                "file": "src/sqlfluff/rules/L051.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_mysql.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            },
            {
                "file": "src/sqlfluff/core/rules/doc_decorators.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/5206": {
        "results": [
            {
                "file": "src/sqlfluff/rules/aliasing/AL02.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/structure/ST02.py"
            },
            {
                "file": "src/sqlfluff/core/linter/runner.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM01.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/fix.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_result.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_mysql.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/raw_file_slices.py"
            },
            {
                "file": "src/sqlfluff/rules/structure/ST06.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT11.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/sequence.py"
            },
            {
                "file": "src/sqlfluff/rules/aliasing/AL05.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sparksql.py"
            },
            {
                "file": "src/sqlfluff/rules/convention/CV04.py"
            },
            {
                "file": "src/sqlfluff/rules/jinja/JJ01.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT10.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "src/sqlfluff/core/rules/crawlers.py"
            },
            {
                "file": "src/sqlfluff/core/linter/common.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/1577": {
        "results": [
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L005.py"
            },
            {
                "file": "src/sqlfluff/api/info.py"
            },
            {
                "file": "util.py"
            },
            {
                "file": "src/sqlfluff/core/linter/common.py"
            },
            {
                "file": "src/sqlfluff/rules/L046.py"
            },
            {
                "file": "src/sqlfluff/rules/L033.py"
            },
            {
                "file": "src/sqlfluff/rules/L048.py"
            },
            {
                "file": "src/sqlfluff/dialects/postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/host.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_result.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive.py"
            },
            {
                "file": "src/sqlfluff/rules/L029.py"
            },
            {
                "file": "src/sqlfluff/core/parser/helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L014.py"
            },
            {
                "file": "src/sqlfluff/rules/L006.py"
            },
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2386": {
        "results": [
            {
                "file": "src/sqlfluff/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/core/timing.py"
            },
            {
                "file": "src/sqlfluff/api/simple.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/setup.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql.py"
            },
            {
                "file": "src/sqlfluff/rules/L054.py"
            },
            {
                "file": "src/sqlfluff/core/rules/base.py"
            },
            {
                "file": "examples/02_timing_api_steps.py"
            },
            {
                "file": "src/sqlfluff/rules/L044.py"
            },
            {
                "file": "src/sqlfluff/rules/L055.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/conditional.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_spark3.py"
            },
            {
                "file": "src/sqlfluff/rules/L053.py"
            },
            {
                "file": "src/sqlfluff/diff_quality_plugin.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_spark3_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/python.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi_keywords.py"
            },
            {
                "file": "docs/source/conf.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/generator.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3411": {
        "results": [
            {
                "file": "src/sqlfluff/core/parser/grammar/conditional.py"
            },
            {
                "file": "src/sqlfluff/rules/L012.py"
            },
            {
                "file": "src/sqlfluff/rules/L032.py"
            },
            {
                "file": "src/sqlfluff/rules/L007.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/sequence.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L041.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/slicers/tracer.py"
            },
            {
                "file": "src/sqlfluff/core/parser/helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L063.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L003.py"
            },
            {
                "file": "src/sqlfluff/rules/L013.py"
            },
            {
                "file": "src/sqlfluff/rules/L009.py"
            },
            {
                "file": "src/sqlfluff/rules/L021.py"
            },
            {
                "file": "src/sqlfluff/rules/L036.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "src/sqlfluff/rules/L043.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/raw_file_slices.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2641": {
        "results": [
            {
                "file": "src/sqlfluff/core/parser/matchable.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L016.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi_keywords.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L051.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/segment_predicates.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L010.py"
            },
            {
                "file": "src/sqlfluff/rules/L002.py"
            },
            {
                "file": "src/sqlfluff/rules/L046.py"
            },
            {
                "file": "src/sqlfluff/rules/L041.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parsers.py"
            },
            {
                "file": "src/sqlfluff/rules/L056.py"
            },
            {
                "file": "src/sqlfluff/rules/L061.py"
            },
            {
                "file": "src/sqlfluff/core/rules/reference.py"
            },
            {
                "file": "src/sqlfluff/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/rules/L007.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4777": {
        "results": [
            {
                "file": "src/sqlfluff/rules/capitalisation/CP02.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/lib.py"
            },
            {
                "file": "src/sqlfluff/rules/structure/ST05.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/setup.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sqlite.py"
            },
            {
                "file": "src/sqlfluff/core/cached_property.py"
            },
            {
                "file": "src/sqlfluff/core/rules/context.py"
            },
            {
                "file": "src/sqlfluff/cli/commands.py"
            },
            {
                "file": "src/sqlfluff/rules/references/RF02.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_oracle.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM06.py"
            },
            {
                "file": "src/sqlfluff/rules/structure/ST01.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/raw_file_slices.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM02.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/templated_file_slice_predicates.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_materialize_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/convention/CV08.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM01.py"
            },
            {
                "file": "src/sqlfluff/rules/references/RF03.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/1517": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L039.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/dbt.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres.py"
            },
            {
                "file": "src/sqlfluff/diff_quality_plugin.py"
            },
            {
                "file": "src/sqlfluff/dialects/ansi_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L024.py"
            },
            {
                "file": "src/sqlfluff/core/rules/analysis/select.py"
            },
            {
                "file": "src/sqlfluff/rules/L004.py"
            },
            {
                "file": "src/sqlfluff/rules/L042.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/core/rules/analysis/select_crawler.py"
            },
            {
                "file": "src/sqlfluff/rules/L048.py"
            },
            {
                "file": "src/sqlfluff/rules/L009.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "src/sqlfluff/core/rules/config_info.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/src/example/rules.py"
            },
            {
                "file": "src/sqlfluff/dialects/tsql_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L015.py"
            },
            {
                "file": "src/sqlfluff/rules/L047.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/880": {
        "results": [
            {
                "file": "src/sqlfluff/core/rules/std/L008.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/generator.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/python.py"
            },
            {
                "file": "src/sqlfluff/api/simple.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L005.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L030.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L013.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L035.py"
            },
            {
                "file": "examples/04_getting_rules_and_dialects.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L038.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/dialect_exasol.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L014.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L007.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L037.py"
            },
            {
                "file": "src/sqlfluff/core/rules/doc_decorators.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L031.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L023.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L025.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L039.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L022.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4041": {
        "results": [
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linting_result.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/sequence.py"
            },
            {
                "file": "src/sqlfluff/rules/L003.py"
            },
            {
                "file": "src/sqlfluff/rules/L058.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/templated_file_slice_predicates.py"
            },
            {
                "file": "src/sqlfluff/rules/L046.py"
            },
            {
                "file": "src/sqlfluff/rules/L022.py"
            },
            {
                "file": "src/sqlfluff/utils/analysis/select.py"
            },
            {
                "file": "src/sqlfluff/rules/L021.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L047.py"
            },
            {
                "file": "src/sqlfluff/rules/L057.py"
            },
            {
                "file": "src/sqlfluff/rules/L013.py"
            },
            {
                "file": "src/sqlfluff/rules/L018.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/utils/analysis/select_crawler.py"
            },
            {
                "file": "src/sqlfluff/core/rules/config_info.py"
            },
            {
                "file": "src/sqlfluff/core/rules/context.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/lib.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4834": {
        "results": [
            {
                "file": "src/sqlfluff/rules/aliasing/AL07.py"
            },
            {
                "file": "src/sqlfluff/core/rules/crawlers.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_duckdb.py"
            },
            {
                "file": "src/sqlfluff/rules/aliasing/AL05.py"
            },
            {
                "file": "src/sqlfluff/cli/click_deprecated_option.py"
            },
            {
                "file": "src/sqlfluff/core/rules/base.py"
            },
            {
                "file": "src/sqlfluff/api/info.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/raw_file_slice_predicates.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_mysql.py"
            },
            {
                "file": "src/sqlfluff/rules/aliasing/AL03.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT12.py"
            },
            {
                "file": "src/sqlfluff/core/timing.py"
            },
            {
                "file": "src/sqlfluff/core/slice_helpers.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parser.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_clickhouse_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/references/RF05.py"
            },
            {
                "file": "src/sqlfluff/utils/identifers.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/anyof.py"
            },
            {
                "file": "src/sqlfluff/rules/ambiguous/AM05.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/5170": {
        "results": [
            {
                "file": "src/sqlfluff/dialects/dialect_redshift.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_mysql_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/rules/doc_decorators.py"
            },
            {
                "file": "src/sqlfluff/rules/capitalisation/CP01.py"
            },
            {
                "file": "util.py"
            },
            {
                "file": "src/sqlfluff/rules/capitalisation/CP04.py"
            },
            {
                "file": "src/sqlfluff/rules/references/RF06.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/context.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_trino_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linting_result.py"
            },
            {
                "file": "src/sqlfluff/utils/analysis/query.py"
            },
            {
                "file": "plugins/sqlfluff-plugin-example/setup.py"
            },
            {
                "file": "src/sqlfluff/rules/aliasing/AL02.py"
            },
            {
                "file": "src/sqlfluff/utils/identifers.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_bigquery_keywords.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_databricks_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT05.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_db2_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/layout/LT04.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3066": {
        "results": [
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol_keywords.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_teradata.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/noncode.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/delimited.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_redshift_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/common.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L044.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L026.py"
            },
            {
                "file": "src/sqlfluff/rules/L004.py"
            },
            {
                "file": "src/sqlfluff/rules/L037.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/anyof.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_redshift.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parsers.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/placeholder.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/base.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2625": {
        "results": [
            {
                "file": "src/sqlfluff/rules/L009.py"
            },
            {
                "file": "src/sqlfluff/rules/L019.py"
            },
            {
                "file": "src/sqlfluff/core/errors.py"
            },
            {
                "file": "src/sqlfluff/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/rules/L034.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/segments.py"
            },
            {
                "file": "src/sqlfluff/core/rules/loader.py"
            },
            {
                "file": "src/sqlfluff/rules/L036.py"
            },
            {
                "file": "src/sqlfluff/rules/L040.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L023.py"
            },
            {
                "file": "src/sqlfluff/cli/autocomplete.py"
            },
            {
                "file": "src/sqlfluff/rules/L012.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/conditional.py"
            },
            {
                "file": "src/sqlfluff/rules/L029.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parser.py"
            },
            {
                "file": "src/sqlfluff/rules/L044.py"
            },
            {
                "file": "src/sqlfluff/core/parser/markers.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/python.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/meta.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/891": {
        "results": [
            {
                "file": "src/sqlfluff/core/parser/match_logging.py"
            },
            {
                "file": "src/sqlfluff/core/parser/lexer.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L022.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_teradata.py"
            },
            {
                "file": "src/sqlfluff/core/dialects/base.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/greedy.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L018.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L039.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/hookspecs.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parser.py"
            },
            {
                "file": "src/sqlfluff/core/rules/analysis/select_crawler.py"
            },
            {
                "file": "src/sqlfluff/dialects/ansi_keywords.py"
            },
            {
                "file": "src/sqlfluff/api/info.py"
            },
            {
                "file": "src/sqlfluff/cli/helpers.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L006.py"
            },
            {
                "file": "src/sqlfluff/api/simple.py"
            },
            {
                "file": "src/sqlfluff/core/rules/base.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol_fs.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_exasol.py"
            },
            {
                "file": "src/sqlfluff/core/rules/std/L019.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/2573": {
        "results": [
            {
                "file": "src/sqlfluff/dialects/dialect_exasol_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L046.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/setup.py"
            },
            {
                "file": "src/sqlfluff/rules/L052.py"
            },
            {
                "file": "src/sqlfluff/rules/L017.py"
            },
            {
                "file": "src/sqlfluff/rules/L055.py"
            },
            {
                "file": "src/sqlfluff/rules/L034.py"
            },
            {
                "file": "src/sqlfluff/core/rules/analysis/select_crawler.py"
            },
            {
                "file": "src/sqlfluff/core/config.py"
            },
            {
                "file": "src/sqlfluff/rules/L008.py"
            },
            {
                "file": "src/sqlfluff/rules/L056.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/hookspecs.py"
            },
            {
                "file": "src/sqlfluff/core/parser/helpers.py"
            },
            {
                "file": "src/sqlfluff/core/timing.py"
            },
            {
                "file": "src/sqlfluff/rules/L018.py"
            },
            {
                "file": "src/sqlfluff/rules/L041.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_logging.py"
            },
            {
                "file": "src/sqlfluff/rules/L019.py"
            },
            {
                "file": "src/sqlfluff/rules/L036.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3109": {
        "results": [
            {
                "file": "src/sqlfluff/core/templaters/slicers/tracer.py"
            },
            {
                "file": "src/sqlfluff/rules/L033.py"
            },
            {
                "file": "src/sqlfluff/rules/L030.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parsers.py"
            },
            {
                "file": "src/sqlfluff/testing/rules.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/ephemeral.py"
            },
            {
                "file": "src/sqlfluff/core/parser/context.py"
            },
            {
                "file": "src/sqlfluff/core/templaters/jinja.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/host.py"
            },
            {
                "file": "src/sqlfluff/core/enums.py"
            },
            {
                "file": "src/sqlfluff/core/rules/base.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            },
            {
                "file": "src/sqlfluff/core/linter/common.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_ansi_keywords.py"
            },
            {
                "file": "util.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/noncode.py"
            },
            {
                "file": "src/sqlfluff/core/timing.py"
            },
            {
                "file": "docs/source/conf.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/parser/segments/generator.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/1763": {
        "results": [
            {
                "file": "plugins/sqlfluff-plugin-example/src/example/rules.py"
            },
            {
                "file": "src/sqlfluff/core/parser/matchable.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/sqlfluff_templater_dbt/templater.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sqlite.py"
            },
            {
                "file": "src/sqlfluff/core/linter/runner.py"
            },
            {
                "file": "src/sqlfluff/rules/L011.py"
            },
            {
                "file": "src/sqlfluff/core/parser/grammar/greedy.py"
            },
            {
                "file": "src/sqlfluff/core/string_helpers.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/setup.py"
            },
            {
                "file": "src/sqlfluff/core/file_helpers.py"
            },
            {
                "file": "src/sqlfluff/rules/L018.py"
            },
            {
                "file": "src/sqlfluff/rules/L022.py"
            },
            {
                "file": "src/sqlfluff/rules/L010.py"
            },
            {
                "file": "src/sqlfluff/core/parser/markers.py"
            },
            {
                "file": "src/sqlfluff/core/parser/helpers.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_tsql.py"
            },
            {
                "file": "src/sqlfluff/rules/L031.py"
            },
            {
                "file": "src/sqlfluff/core/parser/match_result.py"
            },
            {
                "file": "src/sqlfluff/rules/L049.py"
            },
            {
                "file": "src/sqlfluff/rules/L008.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/4084": {
        "results": [
            {
                "file": "src/sqlfluff/utils/functional/raw_file_slices.py"
            },
            {
                "file": "src/sqlfluff/core/string_helpers.py"
            },
            {
                "file": "plugins/sqlfluff-templater-dbt/setup.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sqlite.py"
            },
            {
                "file": "src/sqlfluff/rules/L012.py"
            },
            {
                "file": "src/sqlfluff/rules/L005.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/config.py"
            },
            {
                "file": "src/sqlfluff/core/linter/runner.py"
            },
            {
                "file": "src/sqlfluff/utils/reflow/sequence.py"
            },
            {
                "file": "src/sqlfluff/utils/functional/segments.py"
            },
            {
                "file": "src/sqlfluff/rules/L018.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_athena_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/host.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_soql.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linting_result.py"
            },
            {
                "file": "src/sqlfluff/core/cached_property.py"
            },
            {
                "file": "src/sqlfluff/rules/L026.py"
            },
            {
                "file": "src/sqlfluff/core/parser/markers.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_snowflake.py"
            }
        ]
    },
    "sqlfluff/sqlfluff/3330": {
        "results": [
            {
                "file": "src/sqlfluff/core/templaters/jinja.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_dir.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_hive_keywords.py"
            },
            {
                "file": "src/sqlfluff/core/parser/parser.py"
            },
            {
                "file": "src/sqlfluff/core/timing.py"
            },
            {
                "file": "src/sqlfluff/rules/L013.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/templated_file_slices.py"
            },
            {
                "file": "src/sqlfluff/core/config.py"
            },
            {
                "file": "src/sqlfluff/rules/L002.py"
            },
            {
                "file": "src/sqlfluff/core/linter/linted_file.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_teradata.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_postgres_keywords.py"
            },
            {
                "file": "src/sqlfluff/rules/L048.py"
            },
            {
                "file": "src/sqlfluff/core/enums.py"
            },
            {
                "file": "src/sqlfluff/dialects/dialect_sqlite.py"
            },
            {
                "file": "src/sqlfluff/rules/L029.py"
            },
            {
                "file": "src/sqlfluff/core/rules/functional/segments.py"
            },
            {
                "file": "src/sqlfluff/core/parser/matchable.py"
            },
            {
                "file": "src/sqlfluff/core/plugin/hookspecs.py"
            },
            {
                "file": "src/sqlfluff/rules/L045.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/1164": {
        "results": [
            {
                "file": "tests/test_py3/test_utils.py"
            },
            {
                "file": "tests/test_marshalling.py"
            },
            {
                "file": "examples/textblob_example.py"
            },
            {
                "file": "docs/conf.py"
            },
            {
                "file": "tests/test_decorators.py"
            },
            {
                "file": "src/marshmallow/decorators.py"
            },
            {
                "file": "tests/test_options.py"
            },
            {
                "file": "tests/test_schema.py"
            },
            {
                "file": "tests/test_registry.py"
            },
            {
                "file": "tests/test_serialization.py"
            },
            {
                "file": "tests/test_fields.py"
            },
            {
                "file": "src/marshmallow/exceptions.py"
            },
            {
                "file": "src/marshmallow/orderedset.py"
            },
            {
                "file": "tests/conftest.py"
            },
            {
                "file": "tests/test_validate.py"
            },
            {
                "file": "tests/base.py"
            },
            {
                "file": "examples/peewee_example.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "src/marshmallow/validate.py"
            },
            {
                "file": "src/marshmallow/warnings.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/1252": {
        "results": [
            {
                "file": "tests/test_py3/test_utils.py"
            },
            {
                "file": "tests/base.py"
            },
            {
                "file": "src/marshmallow/validate.py"
            },
            {
                "file": "src/marshmallow/class_registry.py"
            },
            {
                "file": "tests/test_utils.py"
            },
            {
                "file": "examples/textblob_example.py"
            },
            {
                "file": "tests/test_validate.py"
            },
            {
                "file": "src/marshmallow/warnings.py"
            },
            {
                "file": "tests/test_serialization.py"
            },
            {
                "file": "src/marshmallow/orderedset.py"
            },
            {
                "file": "tests/test_fields.py"
            },
            {
                "file": "src/marshmallow/fields.py"
            },
            {
                "file": "examples/flask_example.py"
            },
            {
                "file": "src/marshmallow/decorators.py"
            },
            {
                "file": "tests/test_options.py"
            },
            {
                "file": "src/marshmallow/utils.py"
            },
            {
                "file": "tests/test_schema.py"
            },
            {
                "file": "tests/foo_serializer.py"
            },
            {
                "file": "src/marshmallow/schema.py"
            },
            {
                "file": "tests/test_deserialization.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/1359": {
        "results": [
            {
                "file": "src/marshmallow/utils.py"
            },
            {
                "file": "tests/test_utils.py"
            },
            {
                "file": "examples/inflection_example.py"
            },
            {
                "file": "src/marshmallow/error_store.py"
            },
            {
                "file": "tests/foo_serializer.py"
            },
            {
                "file": "src/marshmallow/validate.py"
            },
            {
                "file": "src/marshmallow/schema.py"
            },
            {
                "file": "src/marshmallow/exceptions.py"
            },
            {
                "file": "tests/test_exceptions.py"
            },
            {
                "file": "docs/conf.py"
            },
            {
                "file": "src/marshmallow/fields.py"
            },
            {
                "file": "tests/test_decorators.py"
            },
            {
                "file": "tests/test_error_store.py"
            },
            {
                "file": "tests/test_validate.py"
            },
            {
                "file": "tests/base.py"
            },
            {
                "file": "src/marshmallow/orderedset.py"
            },
            {
                "file": "examples/package_json_example.py"
            },
            {
                "file": "tests/test_options.py"
            },
            {
                "file": "src/marshmallow/class_registry.py"
            },
            {
                "file": "examples/peewee_example.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/1343": {
        "results": [
            {
                "file": "docs/conf.py"
            },
            {
                "file": "tests/test_fields.py"
            },
            {
                "file": "tests/test_decorators.py"
            },
            {
                "file": "tests/test_options.py"
            },
            {
                "file": "tests/conftest.py"
            },
            {
                "file": "tests/base.py"
            },
            {
                "file": "src/marshmallow/warnings.py"
            },
            {
                "file": "examples/peewee_example.py"
            },
            {
                "file": "tests/test_exceptions.py"
            },
            {
                "file": "src/marshmallow/marshalling.py"
            },
            {
                "file": "src/marshmallow/decorators.py"
            },
            {
                "file": "src/marshmallow/base.py"
            },
            {
                "file": "tests/test_py3/test_utils.py"
            },
            {
                "file": "performance/benchmark.py"
            },
            {
                "file": "tests/foo_serializer.py"
            },
            {
                "file": "tests/test_registry.py"
            },
            {
                "file": "src/marshmallow/compat.py"
            },
            {
                "file": "src/marshmallow/schema.py"
            },
            {
                "file": "src/marshmallow/fields.py"
            },
            {
                "file": "tests/test_marshalling.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/2123": {
        "results": [
            {
                "file": "src/marshmallow/exceptions.py"
            },
            {
                "file": "src/marshmallow/class_registry.py"
            },
            {
                "file": "tests/test_exceptions.py"
            },
            {
                "file": "src/marshmallow/warnings.py"
            },
            {
                "file": "tests/base.py"
            },
            {
                "file": "tests/test_options.py"
            },
            {
                "file": "src/marshmallow/types.py"
            },
            {
                "file": "tests/test_fields.py"
            },
            {
                "file": "examples/flask_example.py"
            },
            {
                "file": "tests/test_deserialization.py"
            },
            {
                "file": "performance/benchmark.py"
            },
            {
                "file": "tests/test_validate.py"
            },
            {
                "file": "tests/test_error_store.py"
            },
            {
                "file": "tests/conftest.py"
            },
            {
                "file": "docs/conf.py"
            },
            {
                "file": "tests/test_serialization.py"
            },
            {
                "file": "src/marshmallow/schema.py"
            },
            {
                "file": "tests/test_registry.py"
            },
            {
                "file": "examples/textblob_example.py"
            },
            {
                "file": "src/marshmallow/validate.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/1229": {
        "results": [
            {
                "file": "setup.py"
            },
            {
                "file": "src/marshmallow/error_store.py"
            },
            {
                "file": "examples/textblob_example.py"
            },
            {
                "file": "tests/test_registry.py"
            },
            {
                "file": "tests/test_utils.py"
            },
            {
                "file": "tests/foo_serializer.py"
            },
            {
                "file": "docs/conf.py"
            },
            {
                "file": "tests/test_fields.py"
            },
            {
                "file": "src/marshmallow/validate.py"
            },
            {
                "file": "performance/benchmark.py"
            },
            {
                "file": "src/marshmallow/exceptions.py"
            },
            {
                "file": "src/marshmallow/fields.py"
            },
            {
                "file": "src/marshmallow/schema.py"
            },
            {
                "file": "src/marshmallow/decorators.py"
            },
            {
                "file": "src/marshmallow/class_registry.py"
            },
            {
                "file": "src/marshmallow/utils.py"
            },
            {
                "file": "tests/test_error_store.py"
            },
            {
                "file": "tests/test_py3/test_utils.py"
            },
            {
                "file": "tests/test_deserialization.py"
            },
            {
                "file": "examples/flask_example.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/1810": {
        "results": [
            {
                "file": "tests/foo_serializer.py"
            },
            {
                "file": "src/marshmallow/validate.py"
            },
            {
                "file": "tests/test_serialization.py"
            },
            {
                "file": "examples/package_json_example.py"
            },
            {
                "file": "tests/test_schema.py"
            },
            {
                "file": "tests/base.py"
            },
            {
                "file": "src/marshmallow/warnings.py"
            },
            {
                "file": "tests/test_validate.py"
            },
            {
                "file": "src/marshmallow/decorators.py"
            },
            {
                "file": "performance/benchmark.py"
            },
            {
                "file": "tests/test_exceptions.py"
            },
            {
                "file": "src/marshmallow/error_store.py"
            },
            {
                "file": "src/marshmallow/class_registry.py"
            },
            {
                "file": "tests/test_deserialization.py"
            },
            {
                "file": "src/marshmallow/utils.py"
            },
            {
                "file": "tests/test_options.py"
            },
            {
                "file": "src/marshmallow/types.py"
            },
            {
                "file": "tests/conftest.py"
            },
            {
                "file": "docs/conf.py"
            },
            {
                "file": "examples/peewee_example.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/1702": {
        "results": [
            {
                "file": "src/marshmallow/utils.py"
            },
            {
                "file": "src/marshmallow/error_store.py"
            },
            {
                "file": "src/marshmallow/warnings.py"
            },
            {
                "file": "tests/conftest.py"
            },
            {
                "file": "examples/peewee_example.py"
            },
            {
                "file": "src/marshmallow/schema.py"
            },
            {
                "file": "src/marshmallow/validate.py"
            },
            {
                "file": "src/marshmallow/orderedset.py"
            },
            {
                "file": "tests/test_serialization.py"
            },
            {
                "file": "tests/test_options.py"
            },
            {
                "file": "tests/test_error_store.py"
            },
            {
                "file": "performance/benchmark.py"
            },
            {
                "file": "examples/textblob_example.py"
            },
            {
                "file": "tests/base.py"
            },
            {
                "file": "tests/test_exceptions.py"
            },
            {
                "file": "src/marshmallow/types.py"
            },
            {
                "file": "tests/test_fields.py"
            },
            {
                "file": "src/marshmallow/base.py"
            },
            {
                "file": "tests/test_schema.py"
            },
            {
                "file": "tests/test_decorators.py"
            }
        ]
    },
    "marshmallow-code/marshmallow/1524": {
        "results": [
            {
                "file": "src/marshmallow/schema.py"
            },
            {
                "file": "src/marshmallow/marshalling.py"
            },
            {
                "file": "tests/test_py3/test_utils.py"
            },
            {
                "file": "src/marshmallow/base.py"
            },
            {
                "file": "examples/textblob_example.py"
            },
            {
                "file": "src/marshmallow/compat.py"
            },
            {
                "file": "src/marshmallow/class_registry.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "src/marshmallow/ordereddict.py"
            },
            {
                "file": "src/marshmallow/exceptions.py"
            },
            {
                "file": "src/marshmallow/warnings.py"
            },
            {
                "file": "src/marshmallow/orderedset.py"
            },
            {
                "file": "tests/test_fields.py"
            },
            {
                "file": "tests/base.py"
            },
            {
                "file": "src/marshmallow/utils.py"
            },
            {
                "file": "tests/test_utils.py"
            },
            {
                "file": "tests/test_schema.py"
            },
            {
                "file": "tests/test_marshalling.py"
            },
            {
                "file": "examples/flask_example.py"
            },
            {
                "file": "examples/peewee_example.py"
            }
        ]
    },
    "pvlib/pvlib-python/1160": {
        "results": [
            {
                "file": "docs/examples/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/tests/test_shading.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/tests/test_inverter.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "pvlib/tests/test_temperature.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "benchmarks/benchmarks/tracking.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/solarposition.py"
            }
        ]
    },
    "pvlib/pvlib-python/1738": {
        "results": [
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_seasonal_tilt.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "docs/examples/bifacial/plot_pvfactors_fixed_tilt.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/pvarray.py"
            },
            {
                "file": "docs/sphinx/source/_static/version-alert.js"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "benchmarks/benchmarks/detect_clearsky.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "pvlib/bifacial/utils.py"
            },
            {
                "file": "docs/examples/adr-pvarray/plot_simulate_system.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            }
        ]
    },
    "pvlib/pvlib-python/1782": {
        "results": [
            {
                "file": "docs/examples/solar-tracking/plot_dual_axis_tracking.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_discontinuous_tracking.py"
            },
            {
                "file": "docs/sphinx/source/_static/version-alert.js"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_pvfactors.py"
            },
            {
                "file": "pvlib/tests/test_temperature.py"
            },
            {
                "file": "pvlib/spectrum/mismatch.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_seasonal_tilt.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "docs/examples/adr-pvarray/plot_simulate_fast.py"
            }
        ]
    },
    "pvlib/pvlib-python/1719": {
        "results": [
            {
                "file": "docs/examples/adr-pvarray/plot_simulate_system.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "benchmarks/benchmarks/temperature.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_pvfactors.py"
            },
            {
                "file": "docs/examples/bifacial/plot_bifi_model_pvwatts.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_mixed_orientation.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "docs/sphinx/source/_static/version-alert.js"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/clearsky.py"
            }
        ]
    },
    "pvlib/pvlib-python/1426": {
        "results": [
            {
                "file": "docs/examples/iv-modeling/plot_singlediode.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "docs/examples/shading/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_discontinuous_tracking.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/tests/iotools/test_bsrn.py"
            },
            {
                "file": "pvlib/tests/test_shading.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_utils.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            }
        ]
    },
    "pvlib/pvlib-python/807": {
        "results": [
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "pvlib/bifacial.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "versioneer.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/irradiance.py"
            }
        ]
    },
    "pvlib/pvlib-python/1138": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "benchmarks/benchmarks/temperature.py"
            },
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/modelchain.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/atmosphere.py"
            }
        ]
    },
    "pvlib/pvlib-python/1213": {
        "results": [
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "docs/examples/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "docs/examples/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "docs/examples/plot_partial_module_shading_simple.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "docs/examples/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "versioneer.py"
            }
        ]
    },
    "pvlib/pvlib-python/1707": {
        "results": [
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_utils.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "benchmarks/benchmarks/temperature.py"
            },
            {
                "file": "docs/examples/bifacial/plot_bifi_model_pvwatts.py"
            },
            {
                "file": "pvlib/spectrum/spectrl2.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "docs/examples/irradiance-decomposition/plot_diffuse_fraction.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/pvarray.py"
            }
        ]
    },
    "pvlib/pvlib-python/1395": {
        "results": [
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "docs/examples/soiling/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/bifacial/infinite_sheds.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "docs/sphinx/source/_static/version-alert.js"
            },
            {
                "file": "pvlib/atmosphere.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_dual_axis_tracking.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "docs/examples/soiling/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/spectrum/mismatch.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "pvlib/tests/test_shading.py"
            }
        ]
    },
    "pvlib/pvlib-python/1216": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/iotools/bsrn.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/bifacial.py"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "docs/examples/plot_interval_transposition_error.py"
            },
            {
                "file": "pvlib/tests/test_bifacial.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "docs/examples/plot_partial_module_shading_simple.py"
            },
            {
                "file": "pvlib/tests/test_modelchain.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "pvlib/scaling.py"
            }
        ]
    },
    "pvlib/pvlib-python/1191": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "docs/examples/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "docs/examples/plot_spectrl2_fig51A.py"
            },
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/tests/test_modelchain.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            }
        ]
    },
    "pvlib/pvlib-python/823": {
        "results": [
            {
                "file": "docs/examples/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "docs/examples/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "docs/examples/plot_singlediode.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/snow.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            }
        ]
    },
    "pvlib/pvlib-python/1368": {
        "results": [
            {
                "file": "benchmarks/benchmarks/tracking.py"
            },
            {
                "file": "docs/examples/soiling/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_transposition_gain.py"
            },
            {
                "file": "docs/examples/spectrum/plot_spectrl2_fig51A.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/tests/test_bifacial.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "pvlib/tests/test_modelchain.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            }
        ]
    },
    "pvlib/pvlib-python/1448": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "docs/examples/reflections/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "docs/examples/soiling/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "pvlib/bifacial/utils.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_mixed_orientation.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            }
        ]
    },
    "pvlib/pvlib-python/1589": {
        "results": [
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/tests/iotools/test_sodapro.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_pvfactors.py"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_discontinuous_tracking.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "docs/examples/shading/plot_passias_diffuse_shading.py"
            },
            {
                "file": "docs/examples/bifacial/plot_pvfactors_fixed_tilt.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            }
        ]
    },
    "pvlib/pvlib-python/1031": {
        "results": [
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/bifacial.py"
            },
            {
                "file": "docs/examples/plot_transposition_gain.py"
            },
            {
                "file": "pvlib/snow.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/modelchain.py"
            },
            {
                "file": "docs/examples/plot_partial_module_shading_simple.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            }
        ]
    },
    "pvlib/pvlib-python/1349": {
        "results": [
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "docs/examples/plot_dual_axis_tracking.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "docs/examples/plot_mixed_orientation.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "pvlib/tests/iotools/test_sodapro.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "docs/examples/plot_transposition_gain.py"
            },
            {
                "file": "docs/examples/plot_singlediode.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/shading.py"
            }
        ]
    },
    "pvlib/pvlib-python/980": {
        "results": [
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/atmosphere.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "docs/examples/plot_partial_module_shading_simple.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "pvlib/snow.py"
            }
        ]
    },
    "pvlib/pvlib-python/1048": {
        "results": [
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "docs/examples/plot_singlediode.py"
            },
            {
                "file": "pvlib/snow.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/ivtools/utility.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            }
        ]
    },
    "pvlib/pvlib-python/1623": {
        "results": [
            {
                "file": "docs/examples/irradiance-transposition/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_utils.py"
            },
            {
                "file": "docs/examples/solar-position/plot_sunpath_diagrams.py"
            },
            {
                "file": "docs/examples/bifacial/plot_bifi_model_mc.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "pvlib/spectrum/mismatch.py"
            },
            {
                "file": "pvlib/bifacial/pvfactors.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "benchmarks/benchmarks/detect_clearsky.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/tests/test_clearsky.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_interval_transposition_error.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "docs/sphinx/source/_static/version-alert.js"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "docs/examples/bifacial/plot_pvfactors_fixed_tilt.py"
            },
            {
                "file": "pvlib/location.py"
            }
        ]
    },
    "pvlib/pvlib-python/1273": {
        "results": [
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "docs/examples/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/test_clearsky.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "docs/examples/plot_spectrl2_fig51A.py"
            },
            {
                "file": "pvlib/bifacial.py"
            }
        ]
    },
    "pvlib/pvlib-python/1186": {
        "results": [
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/tests/test_temperature.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/tests/iotools/test_sodapro.py"
            },
            {
                "file": "pvlib/tests/test_bifacial.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/spectrum/spectrl2.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            }
        ]
    },
    "pvlib/pvlib-python/1822": {
        "results": [
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "benchmarks/benchmarks/temperature.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_utils.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "pvlib/bifacial/infinite_sheds.py"
            },
            {
                "file": "docs/examples/bifacial/plot_pvfactors_fixed_tilt.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            }
        ]
    },
    "pvlib/pvlib-python/1165": {
        "results": [
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "docs/examples/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "docs/examples/plot_transposition_gain.py"
            },
            {
                "file": "benchmarks/benchmarks/detect_clearsky.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            }
        ]
    },
    "pvlib/pvlib-python/1026": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "docs/examples/plot_singlediode.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "docs/examples/plot_ghi_transposition.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/tests/test_bifacial.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/tests/test_modelchain.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            }
        ]
    },
    "pvlib/pvlib-python/1616": {
        "results": [
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "benchmarks/benchmarks/infinite_sheds.py"
            },
            {
                "file": "docs/examples/shading/plot_partial_module_shading_simple.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "docs/sphinx/source/_static/version-alert.js"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/iotools/bsrn.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_interval_transposition_error.py"
            },
            {
                "file": "pvlib/spectrum/mismatch.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "docs/examples/bifacial/plot_bifi_model_pvwatts.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/tests/test_clearsky.py"
            },
            {
                "file": "pvlib/spectrum/spectrl2.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            }
        ]
    },
    "pvlib/pvlib-python/1740": {
        "results": [
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/atmosphere.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "docs/examples/soiling/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_seasonal_tilt.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_transposition_gain.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "pvlib/spectrum/mismatch.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "docs/examples/reflections/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "docs/examples/soiling/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            }
        ]
    },
    "pvlib/pvlib-python/1225": {
        "results": [
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/tests/iotools/test_bsrn.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            },
            {
                "file": "docs/examples/plot_sunpath_diagrams.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "benchmarks/benchmarks/tracking.py"
            },
            {
                "file": "pvlib/irradiance.py"
            }
        ]
    },
    "pvlib/pvlib-python/1093": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            },
            {
                "file": "pvlib/modelchain.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_utils.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/tests/test_bifacial.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "docs/examples/plot_ghi_transposition.py"
            },
            {
                "file": "docs/examples/plot_diffuse_aoi_correction.py"
            }
        ]
    },
    "pvlib/pvlib-python/1193": {
        "results": [
            {
                "file": "pvlib/tests/test_shading.py"
            },
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "docs/examples/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "pvlib/iotools/bsrn.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            }
        ]
    },
    "pvlib/pvlib-python/1176": {
        "results": [
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/tests/test_temperature.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "docs/examples/plot_singlediode.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "pvlib/tests/iotools/test_bsrn.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "docs/examples/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/atmosphere.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "pvlib/tests/test_shading.py"
            }
        ]
    },
    "pvlib/pvlib-python/1157": {
        "results": [
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "docs/examples/plot_partial_module_shading_simple.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/iotools/srml.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "pvlib/snow.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "docs/examples/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "docs/examples/plot_ghi_transposition.py"
            }
        ]
    },
    "pvlib/pvlib-python/1737": {
        "results": [
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/modelchain.py"
            },
            {
                "file": "pvlib/tests/test_shading.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "docs/examples/adr-pvarray/plot_simulate_fast.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "docs/examples/irradiance-decomposition/plot_diffuse_fraction.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_infinite_sheds.py"
            },
            {
                "file": "docs/examples/reflections/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            }
        ]
    },
    "pvlib/pvlib-python/1852": {
        "results": [
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/tests/test_modelchain.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_pvfactors.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_interval_transposition_error.py"
            },
            {
                "file": "docs/examples/shading/plot_partial_module_shading_simple.py"
            },
            {
                "file": "docs/examples/reflections/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/iotools/srml.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "docs/examples/solar-position/plot_sunpath_diagrams.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            }
        ]
    },
    "pvlib/pvlib-python/1469": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_infinite_sheds.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            },
            {
                "file": "pvlib/bifacial/utils.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_discontinuous_tracking.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_utils.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "docs/examples/solar-position/plot_sunpath_diagrams.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/irradiance.py"
            }
        ]
    },
    "pvlib/pvlib-python/1666": {
        "results": [
            {
                "file": "docs/examples/shading/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "docs/examples/bifacial/plot_bifi_model_pvwatts.py"
            },
            {
                "file": "pvlib/bifacial/infinite_sheds.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_dual_axis_tracking.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/spectrum/spectrl2.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "docs/examples/soiling/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/tests/iotools/test_bsrn.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "benchmarks/benchmarks/detect_clearsky.py"
            }
        ]
    },
    "pvlib/pvlib-python/1764": {
        "results": [
            {
                "file": "docs/examples/adr-pvarray/plot_fit_to_matrix.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_discontinuous_tracking.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_ghi_transposition.py"
            },
            {
                "file": "docs/examples/solar-position/plot_sunpath_diagrams.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_mixed_orientation.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/tests/iotools/test_bsrn.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "pvlib/bifacial/utils.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_seasonal_tilt.py"
            }
        ]
    },
    "pvlib/pvlib-python/1478": {
        "results": [
            {
                "file": "pvlib/snow.py"
            },
            {
                "file": "docs/examples/shading/plot_passias_diffuse_shading.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_mixed_orientation.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_interval_transposition_error.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "docs/examples/bifacial/plot_pvfactors_fixed_tilt.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            }
        ]
    },
    "pvlib/pvlib-python/1072": {
        "results": [
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/bifacial.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "docs/examples/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "benchmarks/benchmarks/tracking.py"
            },
            {
                "file": "pvlib/tests/test_temperature.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "docs/examples/plot_partial_module_shading_simple.py"
            },
            {
                "file": "pvlib/tests/test_clearsky.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_utils.py"
            }
        ]
    },
    "pvlib/pvlib-python/1073": {
        "results": [
            {
                "file": "versioneer.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "docs/examples/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "docs/examples/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "benchmarks/benchmarks/tracking.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/tests/test_shading.py"
            },
            {
                "file": "docs/examples/plot_singlediode.py"
            },
            {
                "file": "docs/examples/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "pvlib/tests/test_modelchain.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/tests/test_bifacial.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            }
        ]
    },
    "pvlib/pvlib-python/1181": {
        "results": [
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "pvlib/tests/test_clearsky.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "benchmarks/benchmarks/temperature.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_utils.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            }
        ]
    },
    "pvlib/pvlib-python/1606": {
        "results": [
            {
                "file": "pvlib/bifacial/infinite_sheds.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_pvfactors.py"
            },
            {
                "file": "docs/examples/bifacial/plot_bifi_model_pvwatts.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "docs/sphinx/source/_static/version-alert.js"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/tests/test_temperature.py"
            }
        ]
    },
    "pvlib/pvlib-python/1480": {
        "results": [
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/bifacial/utils.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "docs/examples/shading/plot_partial_module_shading_simple.py"
            },
            {
                "file": "docs/examples/soiling/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/tests/test_inverter.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "pvlib/tests/test_singlediode.py"
            }
        ]
    },
    "pvlib/pvlib-python/1682": {
        "results": [
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/bifacial/pvfactors.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "benchmarks/benchmarks/temperature.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/bifacial/utils.py"
            },
            {
                "file": "docs/examples/reflections/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "benchmarks/benchmarks/infinite_sheds.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "pvlib/iotools/bsrn.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_seasonal_tilt.py"
            },
            {
                "file": "docs/examples/shading/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "docs/examples/iv-modeling/plot_singlediode.py"
            }
        ]
    },
    "pvlib/pvlib-python/1832": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_sodapro.py"
            },
            {
                "file": "pvlib/iotools/acis.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "pvlib/pvarray.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "benchmarks/benchmarks/tracking.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "benchmarks/benchmarks/temperature.py"
            },
            {
                "file": "pvlib/tests/iotools/test_bsrn.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "docs/examples/adr-pvarray/plot_simulate_system.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_ghi_transposition.py"
            }
        ]
    },
    "pvlib/pvlib-python/1089": {
        "results": [
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "benchmarks/benchmarks/tracking.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "benchmarks/benchmarks/temperature.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_utils.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/iotools/srml.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_mixed_orientation.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "docs/examples/iv-modeling/plot_singlediode.py"
            },
            {
                "file": "docs/examples/soiling/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/tests/test_clearsky.py"
            },
            {
                "file": "pvlib/irradiance.py"
            }
        ]
    },
    "pvlib/pvlib-python/1033": {
        "results": [
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/snow.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "pvlib/ivtools.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            }
        ]
    },
    "pvlib/pvlib-python/718": {
        "results": [
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/bifacial.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/atmosphere.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/iotools/srml.py"
            },
            {
                "file": "pvlib/modelchain.py"
            },
            {
                "file": "versioneer.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/spa.py"
            }
        ]
    },
    "pvlib/pvlib-python/1653": {
        "results": [
            {
                "file": "benchmarks/benchmarks/infinite_sheds.py"
            },
            {
                "file": "docs/sphinx/source/_static/version-alert.js"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_mixed_orientation.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/bifacial/infinite_sheds.py"
            },
            {
                "file": "pvlib/tests/test_pvarray.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_utils.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/tests/iotools/test_srml.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_utils.py"
            },
            {
                "file": "pvlib/tests/test_shading.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            }
        ]
    },
    "pvlib/pvlib-python/1854": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_sodapro.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/tests/test_clearsky.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "docs/examples/shading/plot_partial_module_shading_simple.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/iotools/srml.py"
            },
            {
                "file": "docs/examples/shading/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_utils.py"
            },
            {
                "file": "benchmarks/benchmarks/scaling.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_transposition_gain.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "docs/examples/soiling/plot_greensboro_kimber_soiling.py"
            }
        ]
    },
    "pvlib/pvlib-python/1140": {
        "results": [
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "pvlib/irradiance.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "docs/examples/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "benchmarks/benchmarks/detect_clearsky.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/tests/test_modelchain.py"
            }
        ]
    },
    "pvlib/pvlib-python/1296": {
        "results": [
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "docs/examples/irradiance-transposition/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "pvlib/spectrum/spectrl2.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "docs/examples/bifacial/plot_pvfactors_fixed_tilt.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/tests/test_inverter.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            },
            {
                "file": "docs/examples/adr-pvarray/plot_simulate_system.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "docs/examples/shading/plot_partial_module_shading_simple.py"
            }
        ]
    },
    "pvlib/pvlib-python/1739": {
        "results": [
            {
                "file": "docs/examples/solar-tracking/plot_dual_axis_tracking.py"
            },
            {
                "file": "docs/examples/adr-pvarray/plot_simulate_system.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "pvlib/tests/test_inverter.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "docs/examples/solar-tracking/plot_single_axis_tracking.py"
            },
            {
                "file": "docs/examples/adr-pvarray/plot_fit_to_matrix.py"
            },
            {
                "file": "pvlib/tests/test_pvarray.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "pvlib/bifacial/utils.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            },
            {
                "file": "pvlib/modelchain.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "docs/examples/bifacial/plot_bifi_model_pvwatts.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            }
        ]
    },
    "pvlib/pvlib-python/1224": {
        "results": [
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/tests/test_modelchain.py"
            },
            {
                "file": "pvlib/snow.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sde.py"
            },
            {
                "file": "docs/examples/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "docs/examples/plot_spectrl2_fig51A.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/iam.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/spa_c_files/setup.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "versioneer.py"
            },
            {
                "file": "docs/examples/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            }
        ]
    },
    "pvlib/pvlib-python/763": {
        "results": [
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "versioneer.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/spa_c_files/spa_py_example.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/iotools/tmy.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/iotools/epw.py"
            },
            {
                "file": "pvlib/bifacial.py"
            },
            {
                "file": "pvlib/_version.py"
            },
            {
                "file": "pvlib/forecast.py"
            },
            {
                "file": "pvlib/atmosphere.py"
            }
        ]
    },
    "pvlib/pvlib-python/907": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_pvgis.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/tests/test_solarposition.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "docs/examples/plot_greensboro_kimber_soiling.py"
            },
            {
                "file": "docs/examples/plot_sunpath_diagrams.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/tests/iotools/test_ecmwf_macc.py"
            },
            {
                "file": "pvlib/tests/test_conftest.py"
            },
            {
                "file": "pvlib/tests/iotools/test_epw.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/tests/test_ivtools.py"
            },
            {
                "file": "pvlib/solarposition.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "pvlib/tests/test_temperature.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            }
        ]
    },
    "pvlib/pvlib-python/1053": {
        "results": [
            {
                "file": "pvlib/iotools/ecmwf_macc.py"
            },
            {
                "file": "pvlib/tests/test_inverter.py"
            },
            {
                "file": "docs/examples/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "pvlib/soiling.py"
            },
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "docs/examples/plot_partial_module_shading_simple.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "docs/examples/plot_diffuse_aoi_correction.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_sdm.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/pvsystem.py"
            },
            {
                "file": "pvlib/tests/test_location.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/tests/test_bifacial.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            }
        ]
    },
    "pvlib/pvlib-python/1518": {
        "results": [
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/bifacial/utils.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            },
            {
                "file": "pvlib/tests/test_spectrum.py"
            },
            {
                "file": "pvlib/singlediode.py"
            },
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "pvlib/tests/test_inverter.py"
            },
            {
                "file": "pvlib/ivtools/utils.py"
            },
            {
                "file": "pvlib/scaling.py"
            },
            {
                "file": "pvlib/tests/test_shading.py"
            },
            {
                "file": "pvlib/tests/test_tracking.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_utils.py"
            },
            {
                "file": "pvlib/spa.py"
            },
            {
                "file": "docs/examples/shading/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/inverter.py"
            },
            {
                "file": "benchmarks/benchmarks/scaling.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            }
        ]
    },
    "pvlib/pvlib-python/1239": {
        "results": [
            {
                "file": "pvlib/tests/test_modelchain.py"
            },
            {
                "file": "pvlib/ivtools/sde.py"
            },
            {
                "file": "benchmarks/benchmarks/tracking.py"
            },
            {
                "file": "pvlib/tests/test_spa.py"
            },
            {
                "file": "pvlib/tests/test_numerical_precision.py"
            },
            {
                "file": "docs/examples/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "pvlib/shading.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition.py"
            },
            {
                "file": "pvlib/tests/test_iam.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "benchmarks/benchmarks/solarposition_numba.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/temperature.py"
            },
            {
                "file": "pvlib/tests/iotools/test_surfrad.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/iotools/crn.py"
            },
            {
                "file": "docs/sphinx/source/conf.py"
            }
        ]
    },
    "pvlib/pvlib-python/1458": {
        "results": [
            {
                "file": "pvlib/tests/iotools/test_sodapro.py"
            },
            {
                "file": "pvlib/tests/iotools/test_bsrn.py"
            },
            {
                "file": "pvlib/tests/iotools/test_psm3.py"
            },
            {
                "file": "pvlib/iotools/midc.py"
            },
            {
                "file": "pvlib/tests/bifacial/test_utils.py"
            },
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "pvlib/iotools/bsrn.py"
            },
            {
                "file": "pvlib/ivtools/sdm.py"
            },
            {
                "file": "pvlib/iotools/solrad.py"
            },
            {
                "file": "pvlib/tests/iotools/test_solrad.py"
            },
            {
                "file": "pvlib/tracking.py"
            },
            {
                "file": "pvlib/tests/test_scaling.py"
            },
            {
                "file": "pvlib/tests/iotools/test_crn.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/iotools/sodapro.py"
            },
            {
                "file": "docs/examples/bifacial/plot_bifi_model_pvwatts.py"
            },
            {
                "file": "pvlib/tools.py"
            },
            {
                "file": "pvlib/tests/test_snow.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "pvlib/version.py"
            }
        ]
    },
    "pvlib/pvlib-python/1218": {
        "results": [
            {
                "file": "pvlib/bifacial.py"
            },
            {
                "file": "pvlib/tests/test_tools.py"
            },
            {
                "file": "pvlib/snow.py"
            },
            {
                "file": "pvlib/_deprecation.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "docs/examples/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "docs/examples/plot_ghi_transposition.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "pvlib/version.py"
            },
            {
                "file": "pvlib/atmosphere.py"
            },
            {
                "file": "pvlib/location.py"
            },
            {
                "file": "pvlib/tests/test_pvsystem.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "benchmarks/benchmarks/irradiance.py"
            },
            {
                "file": "pvlib/iotools/surfrad.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            },
            {
                "file": "pvlib/tests/test_atmosphere.py"
            }
        ]
    },
    "pvlib/pvlib-python/1154": {
        "results": [
            {
                "file": "pvlib/tests/test_forecast.py"
            },
            {
                "file": "docs/examples/plot_fig3A_hsu_soiling_example.py"
            },
            {
                "file": "pvlib/iotools/psm3.py"
            },
            {
                "file": "pvlib/iotools/pvgis.py"
            },
            {
                "file": "docs/examples/plot_passias_diffuse_shading.py"
            },
            {
                "file": "pvlib/tests/iotools/test_midc.py"
            },
            {
                "file": "pvlib/tests/test_soiling.py"
            },
            {
                "file": "benchmarks/benchmarks/location.py"
            },
            {
                "file": "pvlib/tests/iotools/test_tmy.py"
            },
            {
                "file": "pvlib/tests/ivtools/test_utils.py"
            },
            {
                "file": "pvlib/clearsky.py"
            },
            {
                "file": "pvlib/tests/conftest.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pvlib/tests/test_singlediode.py"
            },
            {
                "file": "versioneer.py"
            },
            {
                "file": "pvlib/tests/test_irradiance.py"
            },
            {
                "file": "pvlib/tests/test_bifacial.py"
            },
            {
                "file": "pvlib/tests/test_clearsky.py"
            },
            {
                "file": "pvlib/spectrum/spectrl2.py"
            },
            {
                "file": "docs/examples/plot_single_axis_tracking_on_sloped_terrain.py"
            }
        ]
    },
    "pylint-dev/astroid/1741": {
        "results": [
            {
                "file": "tests/unittest_nodes.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/module2.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_3/package/baz.py"
            },
            {
                "file": "astroid/brain/brain_pathlib.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_numeric.py"
            },
            {
                "file": "astroid/interpreter/objectmodel.py"
            },
            {
                "file": "tests/unittest_brain_dataclasses.py"
            },
            {
                "file": "astroid/brain/brain_hashlib.py"
            },
            {
                "file": "tests/unittest_inference_calls.py"
            },
            {
                "file": "astroid/brain/brain_mechanize.py"
            },
            {
                "file": "tests/testdata/python3/data/email.py"
            },
            {
                "file": "astroid/brain/brain_ssl.py"
            },
            {
                "file": "astroid/brain/helpers.py"
            },
            {
                "file": "astroid/nodes/scoped_nodes/mixin.py"
            },
            {
                "file": "tests/unittest_brain_argparse.py"
            },
            {
                "file": "astroid/brain/brain_typing.py"
            },
            {
                "file": "astroid/mixins.py"
            },
            {
                "file": "tests/testdata/python3/data/noendingnewline.py"
            },
            {
                "file": "astroid/scoped_nodes.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_umath.py"
            }
        ]
    },
    "pylint-dev/astroid/1616": {
        "results": [
            {
                "file": "astroid/context.py"
            },
            {
                "file": "astroid/brain/brain_numpy_random_mtrand.py"
            },
            {
                "file": "astroid/brain/helpers.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_umath.py"
            },
            {
                "file": "astroid/brain/brain_hypothesis.py"
            },
            {
                "file": "astroid/protocols.py"
            },
            {
                "file": "astroid/brain/brain_sqlalchemy.py"
            },
            {
                "file": "astroid/interpreter/objectmodel.py"
            },
            {
                "file": "astroid/nodes/scoped_nodes/utils.py"
            },
            {
                "file": "astroid/interpreter/_import/util.py"
            },
            {
                "file": "tests/testdata/python3/data/notamodule/file.py"
            },
            {
                "file": "tests/unittest_brain_dataclasses.py"
            },
            {
                "file": "tests/testdata/python3/data/conditional.py"
            },
            {
                "file": "tests/test_brain_ssl.py"
            },
            {
                "file": "astroid/inference_tip.py"
            },
            {
                "file": "astroid/brain/brain_http.py"
            },
            {
                "file": "astroid/brain/brain_dateutil.py"
            },
            {
                "file": "tests/unittest_inference.py"
            },
            {
                "file": "tests/testdata/python3/data/noendingnewline.py"
            },
            {
                "file": "tests/unittest_transforms.py"
            }
        ]
    },
    "pylint-dev/astroid/1978": {
        "results": [
            {
                "file": "astroid/brain/brain_numpy_ndarray.py"
            },
            {
                "file": "astroid/inference_tip.py"
            },
            {
                "file": "astroid/brain/brain_builtin_inference.py"
            },
            {
                "file": "astroid/brain/brain_dataclasses.py"
            },
            {
                "file": "tests/testdata/python3/data/import_conflicting_names/math.py"
            },
            {
                "file": "astroid/brain/brain_scipy_signal.py"
            },
            {
                "file": "tests/test_brain_ssl.py"
            },
            {
                "file": "tests/unittest_brain_numpy_ma.py"
            },
            {
                "file": "astroid/nodes/scoped_nodes/utils.py"
            },
            {
                "file": "tests/unittest_python3.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/nonregr.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_3/package/baz.py"
            },
            {
                "file": "tests/testdata/python3/data/operator_precedence.py"
            },
            {
                "file": "astroid/brain/brain_http.py"
            },
            {
                "file": "tests/testdata/python3/data/notamodule/file.py"
            },
            {
                "file": "tests/unittest_constraint.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_multiarray.py"
            },
            {
                "file": "astroid/builder.py"
            },
            {
                "file": "tests/testdata/python3/data/package/import_package_subpackage_module.py"
            },
            {
                "file": "tests/testdata/python3/data/package/absimport.py"
            }
        ]
    },
    "pylint-dev/astroid/934": {
        "results": [
            {
                "file": "astroid/brain/brain_crypt.py"
            },
            {
                "file": "tests/testdata/python3/data/format.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/nonregr.py"
            },
            {
                "file": "tests/testdata/python3/data/operator_precedence.py"
            },
            {
                "file": "tests/testdata/python3/data/appl/myConnection.py"
            },
            {
                "file": "tests/unittest_helpers.py"
            },
            {
                "file": "astroid/brain/brain_random.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/module2.py"
            },
            {
                "file": "tests/unittest_lookup.py"
            },
            {
                "file": "astroid/brain/brain_multiprocessing.py"
            },
            {
                "file": "astroid/brain/brain_attrs.py"
            },
            {
                "file": "astroid/brain/brain_type.py"
            },
            {
                "file": "tests/testdata/python3/data/recursion.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_1/package/foo.py"
            },
            {
                "file": "astroid/_ast.py"
            },
            {
                "file": "astroid/builder.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "tests/resources.py"
            },
            {
                "file": "tests/unittest_builder.py"
            },
            {
                "file": "astroid/brain/brain_six.py"
            }
        ]
    },
    "pylint-dev/astroid/1962": {
        "results": [
            {
                "file": "astroid/nodes/utils.py"
            },
            {
                "file": "tests/testdata/python3/data/all.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "tests/testdata/python3/data/email.py"
            },
            {
                "file": "tests/testdata/python3/data/metaclass_recursion/parent.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_multiarray.py"
            },
            {
                "file": "astroid/brain/brain_io.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_fromnumeric.py"
            },
            {
                "file": "astroid/manager.py"
            },
            {
                "file": "astroid/brain/brain_random.py"
            },
            {
                "file": "astroid/brain/brain_numpy_ma.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_umath.py"
            },
            {
                "file": "astroid/helpers.py"
            },
            {
                "file": "tests/resources.py"
            },
            {
                "file": "astroid/astroid_manager.py"
            },
            {
                "file": "tests/unittest_brain_unittest.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_1/package/foo.py"
            },
            {
                "file": "tests/testdata/python3/data/recursion.py"
            },
            {
                "file": "tests/testdata/python3/data/nonregr.py"
            },
            {
                "file": "astroid/arguments.py"
            }
        ]
    },
    "pylint-dev/astroid/2240": {
        "results": [
            {
                "file": "tests/testdata/python3/data/metaclass_recursion/parent.py"
            },
            {
                "file": "tests/test_modutils.py"
            },
            {
                "file": "tests/testdata/python3/data/module_dict_items_call/test.py"
            },
            {
                "file": "tests/brain/test_enum.py"
            },
            {
                "file": "astroid/arguments.py"
            },
            {
                "file": "astroid/brain/brain_ssl.py"
            },
            {
                "file": "tests/test_utils.py"
            },
            {
                "file": "tests/testdata/python3/pyi_data/module.py"
            },
            {
                "file": "astroid/brain/brain_regex.py"
            },
            {
                "file": "tests/test_helpers.py"
            },
            {
                "file": "astroid/brain/brain_random.py"
            },
            {
                "file": "tests/testdata/python3/data/module1abs/core.py"
            },
            {
                "file": "tests/testdata/python3/data/conditional.py"
            },
            {
                "file": "astroid/test_utils.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_function_base.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_einsumfunc.py"
            },
            {
                "file": "astroid/brain/brain_pkg_resources.py"
            },
            {
                "file": "tests/test_python3.py"
            },
            {
                "file": "tests/brain/test_dataclasses.py"
            },
            {
                "file": "astroid/brain/brain_mechanize.py"
            }
        ]
    },
    "pylint-dev/astroid/941": {
        "results": [
            {
                "file": "tests/testdata/python3/data/namespace_pep_420/module.py"
            },
            {
                "file": "astroid/brain/brain_functools.py"
            },
            {
                "file": "astroid/builder.py"
            },
            {
                "file": "astroid/brain/brain_multiprocessing.py"
            },
            {
                "file": "tests/testdata/python3/data/package/import_package_subpackage_module.py"
            },
            {
                "file": "tests/testdata/python3/data/package/hello.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_function_base.py"
            },
            {
                "file": "astroid/interpreter/objectmodel.py"
            },
            {
                "file": "astroid/brain/brain_numpy_random_mtrand.py"
            },
            {
                "file": "astroid/mixins.py"
            },
            {
                "file": "astroid/brain/brain_pytest.py"
            },
            {
                "file": "astroid/inference.py"
            },
            {
                "file": "tests/testdata/python3/data/contribute_to_namespace/namespace_pep_420/submodule.py"
            },
            {
                "file": "astroid/nodes.py"
            },
            {
                "file": "tests/unittest_modutils.py"
            },
            {
                "file": "astroid/brain/brain_threading.py"
            },
            {
                "file": "tests/testdata/python3/data/package/subpackage/module.py"
            },
            {
                "file": "astroid/modutils.py"
            },
            {
                "file": "astroid/brain/brain_re.py"
            },
            {
                "file": "astroid/brain/brain_hypothesis.py"
            }
        ]
    },
    "pylint-dev/astroid/1417": {
        "results": [
            {
                "file": "tests/testdata/python3/data/lmfp/foo.py"
            },
            {
                "file": "astroid/builder.py"
            },
            {
                "file": "astroid/brain/brain_type.py"
            },
            {
                "file": "tests/unittest_regrtest.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level/namespace_package/lower_level/helper_function.py"
            },
            {
                "file": "astroid/brain/brain_signal.py"
            },
            {
                "file": "astroid/brain/brain_curses.py"
            },
            {
                "file": "tests/unittest_brain_signal.py"
            },
            {
                "file": "tests/unittest_brain.py"
            },
            {
                "file": "astroid/brain/brain_gi.py"
            },
            {
                "file": "astroid/brain/brain_functools.py"
            },
            {
                "file": "astroid/brain/brain_random.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/nonregr.py"
            },
            {
                "file": "tests/unittest_brain_dataclasses.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level/import_package.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_1/package/foo.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "astroid/context.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_multiarray.py"
            },
            {
                "file": "tests/testdata/python3/data/absimp/string.py"
            }
        ]
    },
    "pylint-dev/astroid/1364": {
        "results": [
            {
                "file": "tests/unittest_brain_numpy_core_umath.py"
            },
            {
                "file": "astroid/brain/brain_namedtuple_enum.py"
            },
            {
                "file": "tests/unittest_helpers.py"
            },
            {
                "file": "astroid/brain/brain_builtin_inference.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/nonregr.py"
            },
            {
                "file": "astroid/brain/brain_argparse.py"
            },
            {
                "file": "astroid/brain/brain_typing.py"
            },
            {
                "file": "tests/unittest_brain_signal.py"
            },
            {
                "file": "astroid/brain/brain_attrs.py"
            },
            {
                "file": "tests/unittest_brain_dataclasses.py"
            },
            {
                "file": "astroid/exceptions.py"
            },
            {
                "file": "astroid/filter_statements.py"
            },
            {
                "file": "astroid/nodes/const.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_numeric.py"
            },
            {
                "file": "astroid/inference.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level_two/level1/beyond_top_level_two.py"
            },
            {
                "file": "astroid/nodes/node_classes.py"
            },
            {
                "file": "tests/testdata/python3/data/foogle/fax/a.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_2/package/bar.py"
            },
            {
                "file": "astroid/brain/brain_gi.py"
            }
        ]
    },
    "pylint-dev/astroid/2023": {
        "results": [
            {
                "file": "astroid/brain/brain_ctypes.py"
            },
            {
                "file": "astroid/brain/brain_attrs.py"
            },
            {
                "file": "tests/testdata/python3/data/contribute_to_namespace/namespace_pep_420/submodule.py"
            },
            {
                "file": "astroid/brain/brain_typing.py"
            },
            {
                "file": "astroid/brain/brain_re.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_1/package/foo.py"
            },
            {
                "file": "astroid/brain/brain_multiprocessing.py"
            },
            {
                "file": "tests/brain/test_qt.py"
            },
            {
                "file": "tests/testdata/python3/data/package/import_package_subpackage_module.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/noendingnewline.py"
            },
            {
                "file": "astroid/mixins.py"
            },
            {
                "file": "astroid/nodes/as_string.py"
            },
            {
                "file": "tests/test_filter_statements.py"
            },
            {
                "file": "tests/test_python3.py"
            },
            {
                "file": "astroid/constraint.py"
            },
            {
                "file": "tests/brain/numpy/test_ma.py"
            },
            {
                "file": "astroid/protocols.py"
            },
            {
                "file": "astroid/typing.py"
            },
            {
                "file": "astroid/interpreter/objectmodel.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/nodes/roles.py"
            }
        ]
    },
    "pylint-dev/astroid/1719": {
        "results": [
            {
                "file": "tests/testdata/python3/data/module_dict_items_call/models.py"
            },
            {
                "file": "tests/unittest_nodes_lineno.py"
            },
            {
                "file": "tests/testdata/python3/data/nonregr.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_umath.py"
            },
            {
                "file": "tests/testdata/python3/data/lmfp/foo.py"
            },
            {
                "file": "astroid/builder.py"
            },
            {
                "file": "tests/unittest_decorators.py"
            },
            {
                "file": "script/test_bump_changelog.py"
            },
            {
                "file": "astroid/bases.py"
            },
            {
                "file": "tests/resources.py"
            },
            {
                "file": "tests/testdata/python3/data/module_dict_items_call/test.py"
            },
            {
                "file": "astroid/interpreter/_import/spec.py"
            },
            {
                "file": "tests/unittest_utils.py"
            },
            {
                "file": "astroid/brain/brain_dataclasses.py"
            },
            {
                "file": "astroid/helpers.py"
            },
            {
                "file": "astroid/brain/brain_argparse.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_einsumfunc.py"
            },
            {
                "file": "astroid/exceptions.py"
            },
            {
                "file": "astroid/brain/brain_http.py"
            },
            {
                "file": "tests/testdata/python3/data/all.py"
            }
        ]
    },
    "pylint-dev/astroid/1614": {
        "results": [
            {
                "file": "script/test_bump_changelog.py"
            },
            {
                "file": "astroid/arguments.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "astroid/interpreter/objectmodel.py"
            },
            {
                "file": "astroid/bases.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_function_base.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/nodes/roles.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_umath.py"
            },
            {
                "file": "tests/testdata/python3/data/SSL1/Connection1.py"
            },
            {
                "file": "astroid/nodes/const.py"
            },
            {
                "file": "astroid/brain/brain_namedtuple_enum.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_fromnumeric.py"
            },
            {
                "file": "astroid/brain/brain_functools.py"
            },
            {
                "file": "tests/unittest_brain_signal.py"
            },
            {
                "file": "astroid/interpreter/dunder_lookup.py"
            },
            {
                "file": "tests/unittest_brain_qt.py"
            },
            {
                "file": "astroid/manager.py"
            },
            {
                "file": "astroid/brain/brain_qt.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_numerictypes.py"
            },
            {
                "file": "tests/unittest_utils.py"
            }
        ]
    },
    "pylint-dev/astroid/984": {
        "results": [
            {
                "file": "astroid/as_string.py"
            },
            {
                "file": "tests/unittest_objects.py"
            },
            {
                "file": "tests/testdata/python3/data/lmfp/foo.py"
            },
            {
                "file": "tests/unittest_manager.py"
            },
            {
                "file": "astroid/brain/brain_argparse.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "tests/unittest_regrtest.py"
            },
            {
                "file": "astroid/brain/brain_nose.py"
            },
            {
                "file": "astroid/rebuilder.py"
            },
            {
                "file": "tests/unittest_transforms.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_2/package/bar.py"
            },
            {
                "file": "astroid/brain/brain_numpy_random_mtrand.py"
            },
            {
                "file": "astroid/brain/brain_numpy_utils.py"
            },
            {
                "file": "astroid/brain/brain_threading.py"
            },
            {
                "file": "astroid/brain/brain_six.py"
            },
            {
                "file": "astroid/brain/brain_gi.py"
            },
            {
                "file": "tests/testdata/python3/data/descriptor_crash.py"
            },
            {
                "file": "astroid/brain/brain_qt.py"
            },
            {
                "file": "tests/testdata/python3/data/metaclass_recursion/parent.py"
            },
            {
                "file": "astroid/node_classes.py"
            }
        ]
    },
    "pylint-dev/astroid/1164": {
        "results": [
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_2/package/bar.py"
            },
            {
                "file": "astroid/nodes/scoped_nodes.py"
            },
            {
                "file": "tests/testdata/python3/data/package/subpackage/module.py"
            },
            {
                "file": "astroid/brain/brain_collections.py"
            },
            {
                "file": "astroid/bases.py"
            },
            {
                "file": "astroid/test_utils.py"
            },
            {
                "file": "astroid/node_classes.py"
            },
            {
                "file": "astroid/arguments.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_function_base.py"
            },
            {
                "file": "astroid/nodes/node_classes.py"
            },
            {
                "file": "astroid/brain/brain_sqlalchemy.py"
            },
            {
                "file": "tests/testdata/python3/data/module.py"
            },
            {
                "file": "astroid/brain/brain_uuid.py"
            },
            {
                "file": "astroid/brain/brain_mechanize.py"
            },
            {
                "file": "astroid/interpreter/_import/spec.py"
            },
            {
                "file": "astroid/brain/brain_six.py"
            },
            {
                "file": "tests/testdata/python3/data/nonregr.py"
            },
            {
                "file": "tests/testdata/python3/data/operator_precedence.py"
            },
            {
                "file": "astroid/const.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/noendingnewline.py"
            }
        ]
    },
    "pylint-dev/astroid/1030": {
        "results": [
            {
                "file": "astroid/util.py"
            },
            {
                "file": "astroid/brain/brain_qt.py"
            },
            {
                "file": "tests/testdata/python3/data/module.py"
            },
            {
                "file": "astroid/brain/brain_six.py"
            },
            {
                "file": "tests/unittest_transforms.py"
            },
            {
                "file": "astroid/brain/brain_crypt.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_numeric.py"
            },
            {
                "file": "astroid/brain/brain_type.py"
            },
            {
                "file": "astroid/context.py"
            },
            {
                "file": "astroid/manager.py"
            },
            {
                "file": "astroid/brain/brain_mechanize.py"
            },
            {
                "file": "astroid/brain/brain_nose.py"
            },
            {
                "file": "tests/unittest_object_model.py"
            },
            {
                "file": "astroid/mixins.py"
            },
            {
                "file": "astroid/brain/brain_re.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_3/package/baz.py"
            },
            {
                "file": "astroid/brain/brain_pytest.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_numerictypes.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_2/package/bar.py"
            },
            {
                "file": "tests/testdata/python3/data/appl/myConnection.py"
            }
        ]
    },
    "pylint-dev/astroid/1333": {
        "results": [
            {
                "file": "tests/unittest_brain_dataclasses.py"
            },
            {
                "file": "astroid/arguments.py"
            },
            {
                "file": "tests/unittest_brain_ctypes.py"
            },
            {
                "file": "astroid/rebuilder.py"
            },
            {
                "file": "astroid/brain/brain_subprocess.py"
            },
            {
                "file": "astroid/brain/brain_sqlalchemy.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_numerictypes.py"
            },
            {
                "file": "astroid/brain/brain_hypothesis.py"
            },
            {
                "file": "astroid/brain/brain_numpy_utils.py"
            },
            {
                "file": "astroid/inference.py"
            },
            {
                "file": "tests/testdata/python3/data/nonregr.py"
            },
            {
                "file": "tests/unittest_inference.py"
            },
            {
                "file": "astroid/brain/helpers.py"
            },
            {
                "file": "astroid/interpreter/objectmodel.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_3/package/baz.py"
            },
            {
                "file": "astroid/brain/brain_qt.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_numeric.py"
            },
            {
                "file": "tests/unittest_brain_unittest.py"
            },
            {
                "file": "astroid/helpers.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_fromnumeric.py"
            }
        ]
    },
    "pylint-dev/astroid/1903": {
        "results": [
            {
                "file": "astroid/brain/brain_uuid.py"
            },
            {
                "file": "astroid/brain/brain_typing.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_1/package/foo.py"
            },
            {
                "file": "astroid/brain/brain_argparse.py"
            },
            {
                "file": "tests/testdata/python3/data/absimp/string.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level/namespace_package/plugin_api.py"
            },
            {
                "file": "astroid/raw_building.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/main.py"
            },
            {
                "file": "tests/unittest_utils.py"
            },
            {
                "file": "astroid/nodes/scoped_nodes/utils.py"
            },
            {
                "file": "tests/testdata/python3/data/contribute_to_namespace/namespace_pep_420/submodule.py"
            },
            {
                "file": "tests/unittest_inference_calls.py"
            },
            {
                "file": "tests/unittest_nodes.py"
            },
            {
                "file": "astroid/brain/brain_curses.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/other_funcs.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_2/package/bar.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level_three/module/sub_module/sub_sub_module/main.py"
            },
            {
                "file": "astroid/brain/brain_random.py"
            },
            {
                "file": "tests/unittest_nodes_lineno.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/module.py"
            }
        ]
    },
    "pylint-dev/astroid/1196": {
        "results": [
            {
                "file": "tests/testdata/python3/data/notamodule/file.py"
            },
            {
                "file": "tests/unittest_nodes_lineno.py"
            },
            {
                "file": "astroid/scoped_nodes.py"
            },
            {
                "file": "astroid/modutils.py"
            },
            {
                "file": "tests/resources.py"
            },
            {
                "file": "tests/testdata/python3/data/nonregr.py"
            },
            {
                "file": "astroid/interpreter/_import/util.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/main.py"
            },
            {
                "file": "tests/testdata/python3/data/notall.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level/import_package.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_fromnumeric.py"
            },
            {
                "file": "astroid/manager.py"
            },
            {
                "file": "astroid/brain/brain_random.py"
            },
            {
                "file": "tests/unittest_python3.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_2/package/bar.py"
            },
            {
                "file": "tests/unittest_lookup.py"
            },
            {
                "file": "astroid/brain/brain_re.py"
            },
            {
                "file": "astroid/brain/brain_nose.py"
            },
            {
                "file": "astroid/transforms.py"
            },
            {
                "file": "tests/testdata/python3/data/all.py"
            }
        ]
    },
    "pylint-dev/astroid/2307": {
        "results": [
            {
                "file": "astroid/brain/brain_type.py"
            },
            {
                "file": "astroid/brain/brain_re.py"
            },
            {
                "file": "astroid/brain/brain_io.py"
            },
            {
                "file": "tests/test_stdlib.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/nonregr.py"
            },
            {
                "file": "astroid/brain/brain_datetime.py"
            },
            {
                "file": "astroid/builder.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_1/package/foo.py"
            },
            {
                "file": "astroid/brain/brain_scipy_signal.py"
            },
            {
                "file": "tests/test_raw_building.py"
            },
            {
                "file": "tests/brain/numpy/test_ndarray.py"
            },
            {
                "file": "astroid/nodes/scoped_nodes/mixin.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_2/package/bar.py"
            },
            {
                "file": "tests/test_lookup.py"
            },
            {
                "file": "tests/brain/numpy/test_core_numerictypes.py"
            },
            {
                "file": "tests/brain/test_attr.py"
            },
            {
                "file": "tests/brain/test_nose.py"
            },
            {
                "file": "tests/testdata/python3/data/package/hello.py"
            },
            {
                "file": "astroid/brain/brain_fstrings.py"
            },
            {
                "file": "astroid/nodes/scoped_nodes/scoped_nodes.py"
            }
        ]
    },
    "pylint-dev/astroid/927": {
        "results": [
            {
                "file": "astroid/rebuilder.py"
            },
            {
                "file": "tests/testdata/python3/data/package/absimport.py"
            },
            {
                "file": "astroid/brain/brain_multiprocessing.py"
            },
            {
                "file": "astroid/nodes.py"
            },
            {
                "file": "astroid/brain/brain_hypothesis.py"
            },
            {
                "file": "astroid/scoped_nodes.py"
            },
            {
                "file": "tests/unittest_regrtest.py"
            },
            {
                "file": "tests/testdata/python3/data/module1abs/core.py"
            },
            {
                "file": "astroid/brain/brain_uuid.py"
            },
            {
                "file": "astroid/interpreter/_import/spec.py"
            },
            {
                "file": "astroid/objects.py"
            },
            {
                "file": "astroid/brain/brain_dateutil.py"
            },
            {
                "file": "tests/unittest_transforms.py"
            },
            {
                "file": "astroid/bases.py"
            },
            {
                "file": "astroid/brain/brain_numpy_random_mtrand.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_numeric.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_function_base.py"
            },
            {
                "file": "astroid/decorators.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "tests/testdata/python3/data/SSL1/Connection1.py"
            }
        ]
    },
    "pylint-dev/astroid/1866": {
        "results": [
            {
                "file": "tests/unittest_manager.py"
            },
            {
                "file": "astroid/protocols.py"
            },
            {
                "file": "astroid/brain/brain_io.py"
            },
            {
                "file": "astroid/modutils.py"
            },
            {
                "file": "astroid/brain/brain_pytest.py"
            },
            {
                "file": "tests/testdata/python3/data/nonregr.py"
            },
            {
                "file": "tests/testdata/python3/data/all.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/nodes/roles.py"
            },
            {
                "file": "tests/testdata/python3/data/notall.py"
            },
            {
                "file": "tests/unittest_object_model.py"
            },
            {
                "file": "astroid/brain/brain_builtin_inference.py"
            },
            {
                "file": "astroid/brain/brain_signal.py"
            },
            {
                "file": "tests/testdata/python3/data/foogle/fax/a.py"
            },
            {
                "file": "tests/testdata/python3/data/operator_precedence.py"
            },
            {
                "file": "tests/unittest_helpers.py"
            },
            {
                "file": "astroid/brain/brain_dataclasses.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "tests/testdata/python3/data/contribute_to_namespace/namespace_pep_420/submodule.py"
            },
            {
                "file": "tests/unittest_brain.py"
            },
            {
                "file": "tests/unittest_nodes.py"
            }
        ]
    },
    "pylint-dev/astroid/1092": {
        "results": [
            {
                "file": "tests/testdata/python3/data/all.py"
            },
            {
                "file": "tests/unittest_utils.py"
            },
            {
                "file": "tests/testdata/python3/data/operator_precedence.py"
            },
            {
                "file": "tests/unittest_python3.py"
            },
            {
                "file": "astroid/brain/brain_gi.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "script/test_bump_changelog.py"
            },
            {
                "file": "tests/unittest_raw_building.py"
            },
            {
                "file": "astroid/interpreter/_import/util.py"
            },
            {
                "file": "tests/testdata/python3/data/notall.py"
            },
            {
                "file": "tests/testdata/python3/data/email.py"
            },
            {
                "file": "astroid/brain/brain_qt.py"
            },
            {
                "file": "astroid/util.py"
            },
            {
                "file": "tests/testdata/python3/data/package/hello.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_1/package/foo.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_fromnumeric.py"
            },
            {
                "file": "astroid/brain/brain_dataclasses.py"
            },
            {
                "file": "tests/unittest_regrtest.py"
            },
            {
                "file": "astroid/brain/brain_http.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_2/package/bar.py"
            }
        ]
    },
    "pylint-dev/astroid/2309": {
        "results": [
            {
                "file": "astroid/brain/brain_pytest.py"
            },
            {
                "file": "astroid/_backport_stdlib_names.py"
            },
            {
                "file": "tests/test_inference_calls.py"
            },
            {
                "file": "astroid/bases.py"
            },
            {
                "file": "astroid/exceptions.py"
            },
            {
                "file": "tests/resources.py"
            },
            {
                "file": "tests/brain/test_six.py"
            },
            {
                "file": "astroid/brain/brain_sqlalchemy.py"
            },
            {
                "file": "astroid/brain/brain_boto3.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_function_base.py"
            },
            {
                "file": "tests/brain/test_dateutil.py"
            },
            {
                "file": "astroid/brain/brain_unittest.py"
            },
            {
                "file": "tests/testdata/python3/data/module1abs/core.py"
            },
            {
                "file": "tests/testdata/python3/data/nonregr.py"
            },
            {
                "file": "script/create_contributor_list.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_numeric.py"
            },
            {
                "file": "tests/test_decorators.py"
            },
            {
                "file": "astroid/nodes/const.py"
            },
            {
                "file": "astroid/modutils.py"
            },
            {
                "file": "tests/brain/test_unittest.py"
            }
        ]
    },
    "pylint-dev/astroid/2219": {
        "results": [
            {
                "file": "tests/testdata/python3/data/find_test/module2.py"
            },
            {
                "file": "tests/brain/test_signal.py"
            },
            {
                "file": "astroid/filter_statements.py"
            },
            {
                "file": "tests/testdata/python3/data/metaclass_recursion/parent.py"
            },
            {
                "file": "astroid/brain/brain_scipy_signal.py"
            },
            {
                "file": "tests/testdata/python3/data/invalid_encoding.py"
            },
            {
                "file": "astroid/interpreter/dunder_lookup.py"
            },
            {
                "file": "tests/testdata/python3/data/SSL1/Connection1.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_fromnumeric.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level/namespace_package/lower_level/helper_function.py"
            },
            {
                "file": "tests/testdata/python3/data/absimport.py"
            },
            {
                "file": "tests/testdata/python3/data/package/hello.py"
            },
            {
                "file": "astroid/brain/brain_namedtuple_enum.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/main.py"
            },
            {
                "file": "tests/test_modutils.py"
            },
            {
                "file": "tests/testdata/python3/data/lmfp/foo.py"
            },
            {
                "file": "tests/brain/test_dataclasses.py"
            },
            {
                "file": "astroid/test_utils.py"
            },
            {
                "file": "tests/testdata/python3/data/notamodule/file.py"
            },
            {
                "file": "astroid/brain/brain_re.py"
            }
        ]
    },
    "pylint-dev/astroid/983": {
        "results": [
            {
                "file": "tests/testdata/python3/data/noendingnewline.py"
            },
            {
                "file": "tests/testdata/python3/data/package/hello.py"
            },
            {
                "file": "tests/testdata/python3/data/package/import_package_subpackage_module.py"
            },
            {
                "file": "astroid/brain/brain_six.py"
            },
            {
                "file": "tests/unittest_modutils.py"
            },
            {
                "file": "tests/unittest_raw_building.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_umath.py"
            },
            {
                "file": "tests/testdata/python3/data/module1abs/core.py"
            },
            {
                "file": "astroid/inference.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/noendingnewline.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_1/package/foo.py"
            },
            {
                "file": "astroid/brain/brain_fstrings.py"
            },
            {
                "file": "astroid/brain/brain_typing.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_fromnumeric.py"
            },
            {
                "file": "astroid/modutils.py"
            },
            {
                "file": "astroid/util.py"
            },
            {
                "file": "tests/testdata/python3/data/recursion.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_1/package/foo.py"
            },
            {
                "file": "astroid/brain/brain_qt.py"
            },
            {
                "file": "astroid/context.py"
            }
        ]
    },
    "pylint-dev/astroid/1268": {
        "results": [
            {
                "file": "astroid/const.py"
            },
            {
                "file": "tests/unittest_brain_numpy_ma.py"
            },
            {
                "file": "astroid/brain/helpers.py"
            },
            {
                "file": "tests/testdata/python3/data/absimport.py"
            },
            {
                "file": "astroid/nodes/as_string.py"
            },
            {
                "file": "tests/testdata/python3/data/package/subpackage/module.py"
            },
            {
                "file": "astroid/brain/brain_pkg_resources.py"
            },
            {
                "file": "astroid/brain/brain_numpy_random_mtrand.py"
            },
            {
                "file": "astroid/arguments.py"
            },
            {
                "file": "tests/unittest_utils.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/module.py"
            },
            {
                "file": "astroid/builder.py"
            },
            {
                "file": "astroid/brain/brain_ssl.py"
            },
            {
                "file": "astroid/interpreter/_import/spec.py"
            },
            {
                "file": "astroid/nodes/node_classes.py"
            },
            {
                "file": "tests/unittest_object_model.py"
            },
            {
                "file": "astroid/brain/brain_pytest.py"
            },
            {
                "file": "tests/unittest_brain_signal.py"
            },
            {
                "file": "tests/testdata/python3/data/nonregr.py"
            },
            {
                "file": "tests/unittest_manager.py"
            }
        ]
    },
    "pylint-dev/astroid/946": {
        "results": [
            {
                "file": "astroid/brain/brain_hypothesis.py"
            },
            {
                "file": "tests/unittest_scoped_nodes.py"
            },
            {
                "file": "astroid/raw_building.py"
            },
            {
                "file": "tests/testdata/python3/data/absimport.py"
            },
            {
                "file": "tests/testdata/python3/data/module2.py"
            },
            {
                "file": "tests/testdata/python3/data/metaclass_recursion/parent.py"
            },
            {
                "file": "astroid/decorators.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/module2.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_function_base.py"
            },
            {
                "file": "tests/unittest_utils.py"
            },
            {
                "file": "astroid/brain/brain_numpy_core_fromnumeric.py"
            },
            {
                "file": "astroid/node_classes.py"
            },
            {
                "file": "astroid/brain/brain_fstrings.py"
            },
            {
                "file": "astroid/brain/brain_nose.py"
            },
            {
                "file": "astroid/interpreter/_import/util.py"
            },
            {
                "file": "tests/unittest_raw_building.py"
            },
            {
                "file": "astroid/as_string.py"
            },
            {
                "file": "astroid/_ast.py"
            },
            {
                "file": "astroid/transforms.py"
            },
            {
                "file": "tests/unittest_regrtest.py"
            }
        ]
    },
    "pylint-dev/astroid/2015": {
        "results": [
            {
                "file": "astroid/astroid_manager.py"
            },
            {
                "file": "tests/brain/test_six.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_2/package/bar.py"
            },
            {
                "file": "tests/testdata/python3/data/module.py"
            },
            {
                "file": "tests/testdata/python3/data/absimp/string.py"
            },
            {
                "file": "tests/testdata/python3/data/descriptor_crash.py"
            },
            {
                "file": "astroid/interpreter/dunder_lookup.py"
            },
            {
                "file": "astroid/brain/brain_random.py"
            },
            {
                "file": "tests/brain/numpy/test_core_fromnumeric.py"
            },
            {
                "file": "astroid/brain/brain_ssl.py"
            },
            {
                "file": "tests/test_constraint.py"
            },
            {
                "file": "tests/testdata/python3/data/conditional.py"
            },
            {
                "file": "tests/brain/numpy/test_ma.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkg_resources_3/package/baz.py"
            },
            {
                "file": "astroid/brain/brain_fstrings.py"
            },
            {
                "file": "tests/testdata/python3/data/contribute_to_namespace/namespace_pep_420/submodule.py"
            },
            {
                "file": "tests/testdata/python3/data/fake_module_with_broken_getattr.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_3/package/baz.py"
            },
            {
                "file": "tests/test_decorators.py"
            },
            {
                "file": "astroid/brain/brain_pytest.py"
            }
        ]
    },
    "pylint-dev/astroid/1262": {
        "results": [
            {
                "file": "tests/unittest_brain_unittest.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level/import_package.py"
            },
            {
                "file": "astroid/astroid_manager.py"
            },
            {
                "file": "tests/testdata/python3/data/noendingnewline.py"
            },
            {
                "file": "astroid/brain/brain_signal.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_1/package/foo.py"
            },
            {
                "file": "astroid/brain/brain_uuid.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level/namespace_package/plugin_api.py"
            },
            {
                "file": "tests/unittest_brain_numpy_random_mtrand.py"
            },
            {
                "file": "script/bump_changelog.py"
            },
            {
                "file": "tests/unittest_scoped_nodes.py"
            },
            {
                "file": "tests/testdata/python3/data/package/hello.py"
            },
            {
                "file": "tests/testdata/python3/data/beyond_top_level/namespace_package/top_level_function.py"
            },
            {
                "file": "astroid/brain/brain_numpy_ndarray.py"
            },
            {
                "file": "astroid/interpreter/_import/util.py"
            },
            {
                "file": "astroid/rebuilder.py"
            },
            {
                "file": "tests/testdata/python3/data/all.py"
            },
            {
                "file": "tests/testdata/python3/data/notamodule/file.py"
            }
        ]
    },
    "pylint-dev/astroid/1351": {
        "results": [
            {
                "file": "astroid/mixins.py"
            },
            {
                "file": "tests/testdata/python3/data/notamodule/file.py"
            },
            {
                "file": "astroid/builder.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_function_base.py"
            },
            {
                "file": "astroid/nodes/node_ng.py"
            },
            {
                "file": "tests/unittest_brain_numpy_ma.py"
            },
            {
                "file": "astroid/brain/brain_numpy_ma.py"
            },
            {
                "file": "astroid/modutils.py"
            },
            {
                "file": "astroid/nodes/scoped_nodes/scoped_nodes.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/module2.py"
            },
            {
                "file": "tests/unittest_transforms.py"
            },
            {
                "file": "astroid/brain/brain_curses.py"
            },
            {
                "file": "astroid/brain/brain_responses.py"
            },
            {
                "file": "astroid/brain/brain_subprocess.py"
            },
            {
                "file": "tests/testdata/python3/data/package/import_package_subpackage_module.py"
            },
            {
                "file": "tests/testdata/python3/data/find_test/nonregr.py"
            },
            {
                "file": "astroid/brain/brain_re.py"
            },
            {
                "file": "astroid/brain/brain_hypothesis.py"
            },
            {
                "file": "astroid/brain/brain_http.py"
            },
            {
                "file": "astroid/brain/brain_type.py"
            }
        ]
    },
    "pylint-dev/astroid/1959": {
        "results": [
            {
                "file": "astroid/brain/brain_signal.py"
            },
            {
                "file": "astroid/protocols.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/other_funcs.py"
            },
            {
                "file": "tests/testdata/python3/data/all.py"
            },
            {
                "file": "tests/unittest_brain_numpy_ma.py"
            },
            {
                "file": "tests/testdata/python3/data/max_inferable_limit_for_classes/main.py"
            },
            {
                "file": "tests/testdata/python3/data/notall.py"
            },
            {
                "file": "script/bump_changelog.py"
            },
            {
                "file": "tests/testdata/python3/data/descriptor_crash.py"
            },
            {
                "file": "tests/testdata/python3/data/import_conflicting_names/math.py"
            },
            {
                "file": "tests/testdata/python3/data/package/absimport.py"
            },
            {
                "file": "tests/unittest_brain_numpy_random_mtrand.py"
            },
            {
                "file": "astroid/brain/brain_multiprocessing.py"
            },
            {
                "file": "astroid/decorators.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_multiarray.py"
            },
            {
                "file": "astroid/context.py"
            },
            {
                "file": "tests/unittest_brain_dataclasses.py"
            },
            {
                "file": "tests/unittest_brain_numpy_core_function_base.py"
            },
            {
                "file": "astroid/brain/brain_sqlalchemy.py"
            },
            {
                "file": "tests/testdata/python3/data/path_pkgutil_3/package/baz.py"
            }
        ]
    },
    "pyvista/pyvista/4853": {
        "results": [
            {
                "file": "examples/99-advanced/openfoam-cooling.py"
            },
            {
                "file": "tests/core/test_parametric_geometry.py"
            },
            {
                "file": "tests/plotting/test_plotting.py"
            },
            {
                "file": "tests/core/test_grid.py"
            },
            {
                "file": "pyvista/examples/examples.py"
            },
            {
                "file": "pyvista/plotting/picking.py"
            },
            {
                "file": "examples/02-plot/opacity.py"
            },
            {
                "file": "examples/02-plot/gif.py"
            },
            {
                "file": "doc/source/make_external_gallery.py"
            },
            {
                "file": "tests/core/test_reader.py"
            },
            {
                "file": "examples/01-filter/reflect.py"
            },
            {
                "file": "examples/04-lights/attenuation.py"
            },
            {
                "file": "examples/03-widgets/clip-volume.py"
            },
            {
                "file": "tests/plotting/test_colors.py"
            },
            {
                "file": "tests/plotting/test_theme.py"
            },
            {
                "file": "pyvista/core/filters/rectilinear_grid.py"
            },
            {
                "file": "pyvista/utilities/cell_type_helper.py"
            },
            {
                "file": "tests/plotting/test_camera.py"
            },
            {
                "file": "tests/plotting/test_render_pass.py"
            },
            {
                "file": "examples/02-plot/floors.py"
            }
        ]
    },
    "pyvista/pyvista/4648": {
        "results": [
            {
                "file": "pyvista/core/cell.py"
            },
            {
                "file": "pyvista/core/utilities/cell_type_helper.py"
            },
            {
                "file": "examples/01-filter/extrude-trim.py"
            },
            {
                "file": "examples/02-plot/plot-over-line.py"
            },
            {
                "file": "examples/02-plot/background_image.py"
            },
            {
                "file": "pyvista/utilities/helpers.py"
            },
            {
                "file": "tests/plotting/jupyter/test_ipyvtk.py"
            },
            {
                "file": "pyvista/plotting/theme.py"
            },
            {
                "file": "examples/00-load/create-truss.py"
            },
            {
                "file": "examples/01-filter/extract-cells-inside-surface.py"
            },
            {
                "file": "examples/02-plot/point-clouds.py"
            },
            {
                "file": "examples_trame/basic/PyVistaLocalView.py"
            },
            {
                "file": "tests/examples/test_cell_examples.py"
            },
            {
                "file": "examples/02-plot/backface_props.py"
            },
            {
                "file": "pyvista/utilities/errors.py"
            },
            {
                "file": "examples/03-widgets/spline-widget.py"
            },
            {
                "file": "examples/04-lights/attenuation.py"
            },
            {
                "file": "examples/01-filter/connectivity.py"
            },
            {
                "file": "examples/01-filter/integrate-data.py"
            },
            {
                "file": "examples/01-filter/mesh-quality.py"
            }
        ]
    },
    "pyvista/pyvista/4808": {
        "results": [
            {
                "file": "pyvista/utilities/sphinx_gallery.py"
            },
            {
                "file": "pyvista/utilities/cell_type_helper.py"
            },
            {
                "file": "examples/99-advanced/openfoam-cooling.py"
            },
            {
                "file": "pyvista/utilities/wrappers.py"
            },
            {
                "file": "tests/plotting/test_render_window_interactor.py"
            },
            {
                "file": "examples/02-plot/point-picking.py"
            },
            {
                "file": "examples/02-plot/isovalue.py"
            },
            {
                "file": "tests/core/test_unstructured_grid_filters.py"
            },
            {
                "file": "examples/03-widgets/clip-volume.py"
            },
            {
                "file": "examples_trame/basic/algorithm.py"
            },
            {
                "file": "examples/01-filter/sampling_functions_3d.py"
            },
            {
                "file": "examples/02-plot/interpolate-before-map.py"
            },
            {
                "file": "pyvista/core/utilities/features.py"
            },
            {
                "file": "examples/00-load/create-surface-draped.py"
            },
            {
                "file": "pyvista/core/filters/data_set.py"
            },
            {
                "file": "examples_trame/basic/mesh_scalars.py"
            },
            {
                "file": "examples/00-load/create-polyhedron.py"
            },
            {
                "file": "doc/source/conf.py"
            },
            {
                "file": "examples/99-advanced/sphere_eversion.py"
            },
            {
                "file": "tests/plotting/test_colors.py"
            }
        ]
    },
    "pyvista/pyvista/4311": {
        "results": [
            {
                "file": "examples/02-plot/lookup-table.py"
            },
            {
                "file": "pyvista/utilities/cells.py"
            },
            {
                "file": "tests/test_meshio.py"
            },
            {
                "file": "tests/test_renderer.py"
            },
            {
                "file": "pyvista/core/composite.py"
            },
            {
                "file": "examples/02-plot/labels.py"
            },
            {
                "file": "examples/02-plot/orbit.py"
            },
            {
                "file": "examples_trame/basic/ui_template.py"
            },
            {
                "file": "examples/01-filter/integrate-data.py"
            },
            {
                "file": "tests/check_doctest_names.py"
            },
            {
                "file": "pyvista/ext/coverage.py"
            },
            {
                "file": "doc/source/make_external_gallery.py"
            },
            {
                "file": "tests/jupyter/test_panel.py"
            },
            {
                "file": "examples/01-filter/sampling_functions_3d.py"
            },
            {
                "file": "examples_trame/advanced/contour.py"
            },
            {
                "file": "examples/99-advanced/osmnx-example.py"
            },
            {
                "file": "examples/02-plot/spherical.py"
            },
            {
                "file": "tests/test_plotter.py"
            },
            {
                "file": "examples/01-filter/distance-between-surfaces.py"
            },
            {
                "file": "pyvista/core/filters/rectilinear_grid.py"
            }
        ]
    },
    "pyvista/pyvista/4414": {
        "results": [
            {
                "file": "examples/99-advanced/osmnx-example.py"
            },
            {
                "file": "tests/jupyter/test_ipyvtk.py"
            },
            {
                "file": "tests/test_meta.py"
            },
            {
                "file": "examples/02-plot/ghost-cells.py"
            },
            {
                "file": "examples/00-load/create-parametric-geometric-objects.py"
            },
            {
                "file": "pyvista/plotting/lookup_table.py"
            },
            {
                "file": "examples/99-advanced/openfoam-cooling.py"
            },
            {
                "file": "examples/00-load/linear-cells.py"
            },
            {
                "file": "tests/examples/test_cells.py"
            },
            {
                "file": "tests/test_dataset.py"
            },
            {
                "file": "examples/02-plot/themes.py"
            },
            {
                "file": "pyvista/errors.py"
            },
            {
                "file": "tests/test_charts.py"
            },
            {
                "file": "tests/test_cells.py"
            },
            {
                "file": "pyvista/plotting/lights.py"
            },
            {
                "file": "tests/jupyter/test_static.py"
            },
            {
                "file": "doc/source/make_external_gallery.py"
            },
            {
                "file": "pyvista/plotting/actor_properties.py"
            },
            {
                "file": "pyvista/utilities/cell_type_helper.py"
            },
            {
                "file": "examples/01-filter/extract-surface.py"
            }
        ]
    },
    "pyvista/pyvista/4417": {
        "results": [
            {
                "file": "examples/02-plot/movie.py"
            },
            {
                "file": "examples/00-load/create-platonic-solids.py"
            },
            {
                "file": "pyvista/plotting/cube_axes_actor.py"
            },
            {
                "file": "pyvista/core/datasetattributes.py"
            },
            {
                "file": "pyvista/plotting/composite_mapper.py"
            },
            {
                "file": "examples/01-filter/decimate.py"
            },
            {
                "file": "tests/filters/test_rectilinear_grid.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "examples_trame/basic/PyVistaLocalView.py"
            },
            {
                "file": "examples/99-advanced/fea-hertzian-contact-pressure.py"
            },
            {
                "file": "tests/check_doctest_names.py"
            },
            {
                "file": "tests/tinypages/samples.py"
            },
            {
                "file": "examples/02-plot/edl.py"
            },
            {
                "file": "examples/02-plot/image_depth.py"
            },
            {
                "file": "examples_trame/basic/mesh_scalars.py"
            },
            {
                "file": "examples/01-filter/project-plane.py"
            },
            {
                "file": "examples/01-filter/extract-edges.py"
            },
            {
                "file": "examples/01-filter/flying_edges.py"
            },
            {
                "file": "tests/test_imaging.py"
            },
            {
                "file": "examples/01-filter/subdivide.py"
            }
        ]
    },
    "pyvista/pyvista/4406": {
        "results": [
            {
                "file": "doc/source/make_external_gallery.py"
            },
            {
                "file": "examples_trame/advanced/custom_ui.py"
            },
            {
                "file": "tests/test_polydata.py"
            },
            {
                "file": "tests/test_plotter.py"
            },
            {
                "file": "pyvista/trame/views.py"
            },
            {
                "file": "examples/02-plot/chart_basics.py"
            },
            {
                "file": "examples/02-plot/distance-along-spline.py"
            },
            {
                "file": "tests/tinypages/plot_cone.py"
            },
            {
                "file": "pyvista/core/filters/unstructured_grid.py"
            },
            {
                "file": "pyvista/utilities/cell_type_helper.py"
            },
            {
                "file": "pyvista/jupyter/pv_ipygany.py"
            },
            {
                "file": "examples/02-plot/bounds.py"
            },
            {
                "file": "pyvista/plotting/theme.py"
            },
            {
                "file": "pyvista/core/errors.py"
            },
            {
                "file": "examples/00-load/reader.py"
            },
            {
                "file": "examples/01-filter/sampling_functions_3d.py"
            },
            {
                "file": "pyvista/examples/examples.py"
            },
            {
                "file": "pyvista/core/texture.py"
            },
            {
                "file": "examples_trame/basic/ui_template.py"
            },
            {
                "file": "examples/01-filter/compute-volume.py"
            }
        ]
    },
    "pyvista/pyvista/4226": {
        "results": [
            {
                "file": "tests/test_helpers.py"
            },
            {
                "file": "tests/test_init.py"
            },
            {
                "file": "tests/mappers/test_mapper.py"
            },
            {
                "file": "examples/01-filter/mesh-quality.py"
            },
            {
                "file": "pyvista/core/texture.py"
            },
            {
                "file": "examples/02-plot/lookup-table.py"
            },
            {
                "file": "pyvista/plotting/theme.py"
            },
            {
                "file": "tests/examples/test_cells.py"
            },
            {
                "file": "examples/01-filter/extrude-trim.py"
            },
            {
                "file": "examples/01-filter/distance-between-surfaces.py"
            },
            {
                "file": "examples/02-plot/spherical.py"
            },
            {
                "file": "examples/00-load/create-point-cloud.py"
            },
            {
                "file": "tests/mappers/test_gaussian_mapper.py"
            },
            {
                "file": "doc/source/make_external_gallery.py"
            },
            {
                "file": "examples/02-plot/movie_glyphs.py"
            },
            {
                "file": "tests/test_axes.py"
            },
            {
                "file": "examples/01-filter/gradients.py"
            },
            {
                "file": "examples/02-plot/edges.py"
            },
            {
                "file": "pyvista/core/composite.py"
            },
            {
                "file": "pyvista/_typing.py"
            }
        ]
    },
    "pyvista/pyvista/3750": {
        "results": [
            {
                "file": "examples/01-filter/rotate.py"
            },
            {
                "file": "tests/tinypages/plot_polygon.py"
            },
            {
                "file": "pyvista/plotting/plotting.py"
            },
            {
                "file": "tests/test_axes.py"
            },
            {
                "file": "tests/test_polydata.py"
            },
            {
                "file": "examples/01-filter/compute-volume.py"
            },
            {
                "file": "pyvista/utilities/geometric_objects.py"
            },
            {
                "file": "examples/01-filter/using-filters.py"
            },
            {
                "file": "tests/test_scraper.py"
            },
            {
                "file": "examples/02-plot/plot-over-line.py"
            },
            {
                "file": "tests/test_property.py"
            },
            {
                "file": "pyvista/jupyter/notebook.py"
            },
            {
                "file": "examples/02-plot/isovalue.py"
            },
            {
                "file": "examples/02-plot/ssao.py"
            },
            {
                "file": "examples/02-plot/ghost-cells.py"
            },
            {
                "file": "examples/00-load/read-dolfin.py"
            },
            {
                "file": "tests/test_picking.py"
            },
            {
                "file": "pyvista/examples/planets.py"
            },
            {
                "file": "examples/02-plot/topo-map.py"
            },
            {
                "file": "examples/02-plot/point-cell-scalars.py"
            }
        ]
    },
    "pyvista/pyvista/3747": {
        "results": [
            {
                "file": "examples/01-filter/connectivity.py"
            },
            {
                "file": "examples/01-filter/surface-smoothing.py"
            },
            {
                "file": "examples/00-load/read-dolfin.py"
            },
            {
                "file": "tests/test_polydata.py"
            },
            {
                "file": "examples/03-widgets/line-widget.py"
            },
            {
                "file": "examples/01-filter/extrude-rotate.py"
            },
            {
                "file": "examples/01-filter/clipping.py"
            },
            {
                "file": "examples/02-plot/ghost-cells.py"
            },
            {
                "file": "examples/02-plot/interpolate-before-map.py"
            },
            {
                "file": "examples/01-filter/project-plane.py"
            },
            {
                "file": "pyvista/core/filters/structured_grid.py"
            },
            {
                "file": "examples/01-filter/poly-ray-trace.py"
            },
            {
                "file": "doc/make_tables.py"
            },
            {
                "file": "examples/04-lights/light_types.py"
            },
            {
                "file": "examples/01-filter/extract-edges.py"
            },
            {
                "file": "examples/01-filter/compute-volume.py"
            },
            {
                "file": "tests/test_dataset.py"
            },
            {
                "file": "examples/04-lights/beam_shape.py"
            },
            {
                "file": "tests/mappers/test_gaussian_mapper.py"
            },
            {
                "file": "tests/test_composite.py"
            }
        ]
    },
    "pyvista/pyvista/4329": {
        "results": [
            {
                "file": "examples/02-plot/plot-over-line.py"
            },
            {
                "file": "examples/02-plot/isovalue.py"
            },
            {
                "file": "examples_trame/basic/actor_color.py"
            },
            {
                "file": "pyvista/examples/planets.py"
            },
            {
                "file": "pyvista/utilities/xvfb.py"
            },
            {
                "file": "pyvista/examples/vrml.py"
            },
            {
                "file": "examples_trame/basic/PyVistaRemoteLocalView.py"
            },
            {
                "file": "tests/test_cube_axes_actor.py"
            },
            {
                "file": "examples/99-advanced/add-example.py"
            },
            {
                "file": "examples/02-plot/multi-window.py"
            },
            {
                "file": "tests/test_helpers.py"
            },
            {
                "file": "examples/02-plot/opacity.py"
            },
            {
                "file": "pyvista/core/objects.py"
            },
            {
                "file": "examples_trame/validation/many_actors.py"
            },
            {
                "file": "examples/01-filter/glyphs.py"
            },
            {
                "file": "examples/01-filter/surface_reconstruction.py"
            },
            {
                "file": "tests/test_meta.py"
            },
            {
                "file": "pyvista/utilities/geometric_objects.py"
            },
            {
                "file": "examples/00-load/create-explicit-structured-grid.py"
            },
            {
                "file": "examples/02-plot/volume.py"
            }
        ]
    },
    "pyvista/pyvista/4225": {
        "results": [
            {
                "file": "tests/test_dataobject.py"
            },
            {
                "file": "examples/99-advanced/ray-trace-moeller.py"
            },
            {
                "file": "examples/99-advanced/openfoam-cooling.py"
            },
            {
                "file": "pyvista/core/dataset.py"
            },
            {
                "file": "examples/00-load/create-structured-surface.py"
            },
            {
                "file": "pyvista/errors.py"
            },
            {
                "file": "examples/02-plot/pbr.py"
            },
            {
                "file": "pyvista/utilities/cells.py"
            },
            {
                "file": "examples/02-plot/volume.py"
            },
            {
                "file": "examples/03-widgets/sphere-widget.py"
            },
            {
                "file": "tests/test_meshio.py"
            },
            {
                "file": "examples/99-advanced/plotting-algorithms.py"
            },
            {
                "file": "examples/99-advanced/fea-hertzian-contact-pressure.py"
            },
            {
                "file": "tests/test_geometric_objects.py"
            },
            {
                "file": "examples/01-filter/gradients.py"
            },
            {
                "file": "pyvista/plotting/render_passes.py"
            },
            {
                "file": "pyvista/jupyter/notebook.py"
            },
            {
                "file": "pyvista/plotting/mapper.py"
            },
            {
                "file": "examples/02-plot/point-picking.py"
            },
            {
                "file": "tests/test_property.py"
            }
        ]
    },
    "pyvista/pyvista/432": {
        "results": [
            {
                "file": "pyvista/_version.py"
            },
            {
                "file": "tests/test_geometric_objects.py"
            },
            {
                "file": "pyvista/utilities/utilities.py"
            },
            {
                "file": "examples/01-filter/compute-volume.py"
            },
            {
                "file": "tests/test_plotting.py"
            },
            {
                "file": "tests/test_parametric_geometry.py"
            },
            {
                "file": "examples/02-plot/clear.py"
            },
            {
                "file": "examples/00-load/create-poly.py"
            },
            {
                "file": "examples/00-load/read-parallel.py"
            },
            {
                "file": "tests/test_export.py"
            },
            {
                "file": "examples/01-filter/geodesic.py"
            },
            {
                "file": "pyvista/utilities/features.py"
            },
            {
                "file": "pyvista/core/composite.py"
            },
            {
                "file": "examples/00-load/create-parametric-geometric-objects.py"
            },
            {
                "file": "pyvista/examples/downloads.py"
            },
            {
                "file": "tests/test_composite.py"
            },
            {
                "file": "pyvista/plotting/plotting.py"
            },
            {
                "file": "pyvista/examples/examples.py"
            },
            {
                "file": "pyvista/utilities/geometric_objects.py"
            },
            {
                "file": "examples/02-plot/volume.py"
            }
        ]
    },
    "pyvista/pyvista/3710": {
        "results": [
            {
                "file": "tests/test_tinypages.py"
            },
            {
                "file": "tests/plotting/conftest.py"
            },
            {
                "file": "pyvista/core/composite.py"
            },
            {
                "file": "tests/test_theme.py"
            },
            {
                "file": "pyvista/plotting/actor.py"
            },
            {
                "file": "examples/00-load/create-tri-surface.py"
            },
            {
                "file": "examples/02-plot/chart_overlays.py"
            },
            {
                "file": "examples/01-filter/image-fft.py"
            },
            {
                "file": "examples/00-load/create-platonic-solids.py"
            },
            {
                "file": "tests/mappers/test_gaussian_mapper.py"
            },
            {
                "file": "examples/01-filter/glyphs.py"
            },
            {
                "file": "examples/01-filter/cell-centers.py"
            },
            {
                "file": "examples/99-advanced/planets.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "examples/01-filter/boolean-operations.py"
            },
            {
                "file": "examples/99-advanced/ray-trace.py"
            },
            {
                "file": "examples/02-plot/topo-map.py"
            },
            {
                "file": "examples/02-plot/depth_of_field.py"
            },
            {
                "file": "pyvista/utilities/transformations.py"
            },
            {
                "file": "examples/02-plot/ghost-cells.py"
            }
        ]
    },
    "pyvista/pyvista/3675": {
        "results": [
            {
                "file": "examples/01-filter/contouring.py"
            },
            {
                "file": "examples/03-widgets/box-widget.py"
            },
            {
                "file": "examples/03-widgets/line-widget.py"
            },
            {
                "file": "tests/test_pointset.py"
            },
            {
                "file": "pyvista/core/filters/poly_data.py"
            },
            {
                "file": "examples/00-load/create-pixel-art.py"
            },
            {
                "file": "examples/02-plot/labels.py"
            },
            {
                "file": "tests/test_utilities.py"
            },
            {
                "file": "examples/00-load/wrap-trimesh.py"
            },
            {
                "file": "doc/make_external_gallery.py"
            },
            {
                "file": "tests/jupyter/test_ipyvtk.py"
            },
            {
                "file": "pyvista/core/composite.py"
            },
            {
                "file": "tests/test_plotter.py"
            },
            {
                "file": "examples/01-filter/using-filters.py"
            },
            {
                "file": "examples/02-plot/edl.py"
            },
            {
                "file": "examples/01-filter/gradients.py"
            },
            {
                "file": "examples/00-load/create-platonic-solids.py"
            },
            {
                "file": "pyvista/core/filters/data_set.py"
            },
            {
                "file": "examples/99-advanced/ray-trace-moeller.py"
            },
            {
                "file": "examples/02-plot/silhouette.py"
            }
        ]
    },
    "pyvista/pyvista/4315": {
        "results": [
            {
                "file": "examples/03-widgets/slider-bar-widget.py"
            },
            {
                "file": "examples/00-load/create-geometric-objects.py"
            },
            {
                "file": "examples/99-advanced/openfoam-example.py"
            },
            {
                "file": "examples/00-load/create-tri-surface.py"
            },
            {
                "file": "examples/02-plot/movie_glyphs.py"
            },
            {
                "file": "pyvista/plotting/helpers.py"
            },
            {
                "file": "examples/01-filter/sampling_functions_2d.py"
            },
            {
                "file": "examples/02-plot/ssao.py"
            },
            {
                "file": "pyvista/plotting/plotting.py"
            },
            {
                "file": "examples/01-filter/extract-edges.py"
            },
            {
                "file": "examples/99-advanced/openfoam-tubes.py"
            },
            {
                "file": "examples_trame/validation/many_actors.py"
            },
            {
                "file": "examples/02-plot/silhouette.py"
            },
            {
                "file": "pyvista/errors.py"
            },
            {
                "file": "pyvista/utilities/cells.py"
            },
            {
                "file": "pyvista/core/objects.py"
            },
            {
                "file": "examples/00-load/create-polyhedron.py"
            },
            {
                "file": "examples/02-plot/moving_cmap.py"
            },
            {
                "file": "examples/00-load/create-explicit-structured-grid.py"
            },
            {
                "file": "tests/test_volume_property.py"
            }
        ]
    },
    "pydicom/pydicom/996": {
        "results": [
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/tests/_handler_common.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/dicomio.py"
            },
            {
                "file": "source/scripts/dicomdir_test.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/tests/test_compat.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_dataset.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            }
        ]
    },
    "pydicom/pydicom/1241": {
        "results": [
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/env_info.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/util/fixer.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "source/scripts/dicomdir_test.py"
            },
            {
                "file": "pydicom/sr/_concepts_dict.py"
            },
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/tests/test_pylibjpeg.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "examples/plot_dicom_difference.py"
            }
        ]
    },
    "pydicom/pydicom/866": {
        "results": [
            {
                "file": "pydicom/pixel_data_handlers/jpeg_ls_handler.py"
            },
            {
                "file": "pydicom/tests/test_tag.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "source/generate_uids/generate_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/tests/performance/raw_convert_test.py"
            },
            {
                "file": "doc/_templates/numpydoc_docstring.py"
            },
            {
                "file": "doc/sphinxext/sphinx_issues.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "pydicom/data/test_files/test.py"
            },
            {
                "file": "source/generate_dict/generate_dicom_dict.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/tests/performance/time_test.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "pydicom/tests/test_dataelem.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/tests/test_JPEG_LS_transfer_syntax.py"
            },
            {
                "file": "examples/show_charset_name.py"
            }
        ]
    },
    "pydicom/pydicom/1050": {
        "results": [
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "pydicom/sr/_cid_dict.py"
            },
            {
                "file": "examples/plot_dicom_difference.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom_directory.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/jsonrep.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "build_tools/sphinx/sphinx_issues.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            }
        ]
    },
    "pydicom/pydicom/944": {
        "results": [
            {
                "file": "pydicom/tests/test_gdcm_pixel_data.py"
            },
            {
                "file": "pydicom/data/tests/test_data_manager.py"
            },
            {
                "file": "pydicom/sequence.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "source/generate_dict/generate_private_dict.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/_uid_dict.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/benchmarks/bench_pixel_util.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/tests/performance/write_profiling.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            }
        ]
    },
    "pydicom/pydicom/1255": {
        "results": [
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "pydicom/env_info.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "examples/input_output/plot_read_fileset.py"
            },
            {
                "file": "pydicom/jsonrep.py"
            },
            {
                "file": "pydicom/tests/test_gdcm_pixel_data.py"
            },
            {
                "file": "pydicom/sr/codedict.py"
            },
            {
                "file": "pydicom/sr/_concepts_dict.py"
            },
            {
                "file": "examples/plot_dicom_difference.py"
            },
            {
                "file": "pydicom/tests/test_waveform.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            },
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom_directory.py"
            }
        ]
    },
    "pydicom/pydicom/1017": {
        "results": [
            {
                "file": "pydicom/tests/test_overlay_np.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/pillow_handler.py"
            },
            {
                "file": "pydicom/encaps.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/tests/test_config.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/codedict.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "pydicom/benchmarks/bench_pixel_util.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "pydicom/overlay_data_handlers/numpy_handler.py"
            },
            {
                "file": "pydicom/fileutil.py"
            },
            {
                "file": "examples/show_charset_name.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "examples/plot_dicom_difference.py"
            },
            {
                "file": "pydicom/tests/test_multival.py"
            }
        ]
    },
    "pydicom/pydicom/1048": {
        "results": [
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/tests/test_codedict.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "pydicom/overlay_data_handlers/numpy_handler.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/sr/_concepts_dict.py"
            },
            {
                "file": "pydicom/sr/_cid_dict.py"
            },
            {
                "file": "build_tools/sphinx/sphinx_issues.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "pydicom/tests/test_tag.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/sr/_snomed_dict.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/charset.py"
            }
        ]
    },
    "pydicom/pydicom/1608": {
        "results": [
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/tests/test_dataelem.py"
            },
            {
                "file": "pydicom/tests/test_encoders_gdcm.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/tests/_write_stds.py"
            },
            {
                "file": "pydicom/benchmarks/bench_rle_decode.py"
            },
            {
                "file": "source/generate_dict/generate_dicom_dict.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/benchmarks/bench_pixel_util.py"
            },
            {
                "file": "pydicom/tests/test_codes.py"
            },
            {
                "file": "pydicom/encoders/pylibjpeg.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/encoders/native.py"
            },
            {
                "file": "examples/memory_dataset.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "pydicom/tests/test_filereader.py"
            },
            {
                "file": "pydicom/encoders/gdcm.py"
            }
        ]
    },
    "pydicom/pydicom/839": {
        "results": [
            {
                "file": "pydicom/tests/test_fixes.py"
            },
            {
                "file": "pydicom/tests/performance/write_profiling.py"
            },
            {
                "file": "examples/image_processing/plot_downsize_image.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "doc/_templates/numpydoc_docstring.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            }
        ]
    },
    "pydicom/pydicom/995": {
        "results": [
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "pydicom/encaps.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "pydicom/sequence.py"
            },
            {
                "file": "pydicom/tests/test_environment.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/tests/test_gdcm_pixel_data.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "build_tools/sphinx/sphinx_issues.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            }
        ]
    },
    "pydicom/pydicom/1416": {
        "results": [
            {
                "file": "pydicom/data/download.py"
            },
            {
                "file": "source/scripts/charlist.py"
            },
            {
                "file": "pydicom/encoders/base.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/tests/test_data_manager.py"
            },
            {
                "file": "examples/show_charset_name.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            },
            {
                "file": "pydicom/sequence.py"
            },
            {
                "file": "pydicom/fileutil.py"
            },
            {
                "file": "source/generate_uids/generate_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "examples/image_processing/plot_downsize_image.py"
            }
        ]
    },
    "pydicom/pydicom/1000": {
        "results": [
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "build_tools/sphinx/sphinx_issues.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/tests/test_config.py"
            },
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/encaps.py"
            }
        ]
    },
    "pydicom/pydicom/1069": {
        "results": [
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/dataelem.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/jpeg_ls_handler.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "pydicom/sr/_snomed_dict.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_JPEG_LS_transfer_syntax.py"
            },
            {
                "file": "source/scripts/dicomdir_test.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/benchmarks/bench_pixel_util.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            }
        ]
    },
    "pydicom/pydicom/1439": {
        "results": [
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/env_info.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "pydicom/tests/test_cli.py"
            },
            {
                "file": "pydicom/tests/test_gdcm_pixel_data.py"
            },
            {
                "file": "source/generate_uids/generate_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/sr/codedict.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_env_info.py"
            },
            {
                "file": "pydicom/overlays/numpy_handler.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/tests/test_config.py"
            },
            {
                "file": "pydicom/data/download.py"
            },
            {
                "file": "pydicom/tests/test_dataelem.py"
            }
        ]
    },
    "pydicom/pydicom/900": {
        "results": [
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/sequence.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "examples/show_charset_name.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "doc/sphinxext/sphinx_issues.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/tests/test_environment.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom_directory.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            }
        ]
    },
    "pydicom/pydicom/897": {
        "results": [
            {
                "file": "examples/show_charset_name.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "source/generate_uids/generate_storage_sopclass_uids.py"
            },
            {
                "file": "doc/_templates/numpydoc_docstring.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "pydicom/dataset.py"
            },
            {
                "file": "pydicom/tests/test_multival.py"
            },
            {
                "file": "pydicom/dicomio.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/pillow_handler.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/tests/test_gdcm_pixel_data.py"
            }
        ]
    },
    "pydicom/pydicom/903": {
        "results": [
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "pydicom/_uid_dict.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_rle_decode.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "examples/dicomtree.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/tests/test_multival.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            }
        ]
    },
    "pydicom/pydicom/1033": {
        "results": [
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_rle_decode.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/tests/test_overlay_np.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            },
            {
                "file": "pydicom/tests/test_filereader.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            },
            {
                "file": "pydicom/fileutil.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "source/generate_dict/generate_private_dict.py"
            },
            {
                "file": "pydicom/valuerep.py"
            },
            {
                "file": "pydicom/tests/test_multival.py"
            },
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "pydicom/dataset.py"
            },
            {
                "file": "pydicom/tests/test_errors.py"
            },
            {
                "file": "source/scripts/charlist.py"
            },
            {
                "file": "pydicom/sequence.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            }
        ]
    },
    "pydicom/pydicom/1076": {
        "results": [
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "examples/image_processing/plot_downsize_image.py"
            },
            {
                "file": "pydicom/tests/test_dataelem.py"
            },
            {
                "file": "pydicom/tests/test_filereader.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "examples/dicomtree.py"
            },
            {
                "file": "pydicom/tests/test_dataset.py"
            },
            {
                "file": "source/scripts/charlist.py"
            },
            {
                "file": "pydicom/tests/test_dictionary.py"
            },
            {
                "file": "pydicom/tests/test_coding.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/tests/test_gdcm_pixel_data.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "source/generate_dict/generate_dicom_dict.py"
            },
            {
                "file": "pydicom/tests/test_environment.py"
            }
        ]
    },
    "pydicom/pydicom/1458": {
        "results": [
            {
                "file": "pydicom/filereader.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "pydicom/tests/conftest.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/tests/test_tag.py"
            },
            {
                "file": "pydicom/cli/show.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/env_info.py"
            },
            {
                "file": "pydicom/tests/test_data_manager.py"
            },
            {
                "file": "pydicom/sr/coding.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/encoders/gdcm.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/tests/test_dataelem.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            },
            {
                "file": "pydicom/tests/test_fileutil.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            },
            {
                "file": "pydicom/tests/test_multival.py"
            }
        ]
    },
    "pydicom/pydicom/1720": {
        "results": [
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/tests/test_pylibjpeg.py"
            },
            {
                "file": "pydicom/fileset.py"
            },
            {
                "file": "pydicom/tests/test_fileutil.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "pydicom/data/download.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            },
            {
                "file": "pydicom/dataset.py"
            },
            {
                "file": "pydicom/tests/test_tag.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "pydicom/sr/coding.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/_uid_dict.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            }
        ]
    },
    "pydicom/pydicom/816": {
        "results": [
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/tests/test_fixes.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "pydicom/_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/util/fixer.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/tests/test_dataset.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/valuerep.py"
            },
            {
                "file": "pydicom/encaps.py"
            },
            {
                "file": "pydicom/tests/test_JPEG_LS_transfer_syntax.py"
            },
            {
                "file": "pydicom/filewriter.py"
            }
        ]
    },
    "pydicom/pydicom/916": {
        "results": [
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/dicomio.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            },
            {
                "file": "pydicom/tests/test_multival.py"
            },
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "pydicom/data/tests/test_data_manager.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "pydicom/tests/test_gdcm_pixel_data.py"
            },
            {
                "file": "pydicom/data/test_files/test.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom_directory.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/pillow_handler.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/jsonrep.py"
            }
        ]
    },
    "pydicom/pydicom/1674": {
        "results": [
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "pydicom/sr/codedict.py"
            },
            {
                "file": "pydicom/fileset.py"
            },
            {
                "file": "pydicom/sr/_concepts_dict.py"
            },
            {
                "file": "pydicom/data/download.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            },
            {
                "file": "pydicom/sr/_cid_dict.py"
            },
            {
                "file": "pydicom/encoders/native.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/tests/test_overlay_np.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "source/generate_dict/generate_private_dict.py"
            },
            {
                "file": "pydicom/tests/test_cli.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/jpeg_ls_handler.py"
            },
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            }
        ]
    },
    "pydicom/pydicom/1228": {
        "results": [
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "pydicom/env_info.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            },
            {
                "file": "pydicom/tests/test_dictionary.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/dicomio.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "pydicom/fileset.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/sr/_concepts_dict.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            }
        ]
    },
    "pydicom/pydicom/1365": {
        "results": [
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/tests/test_coding.py"
            },
            {
                "file": "pydicom/data/download.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/dicomio.py"
            },
            {
                "file": "pydicom/tests/test_env_info.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_fileutil.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/tests/test_filereader.py"
            },
            {
                "file": "pydicom/cli/show.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_colourspace.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            }
        ]
    },
    "pydicom/pydicom/965": {
        "results": [
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "examples/show_charset_name.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "pydicom/tests/_handler_common.py"
            },
            {
                "file": "pydicom/tests/test_tag.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/tests/performance/time_test.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/jsonrep.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "pydicom/encaps.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/tests/test_errors.py"
            }
        ]
    },
    "pydicom/pydicom/1375": {
        "results": [
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/tests/test_environment.py"
            },
            {
                "file": "pydicom/tests/test_fileutil.py"
            },
            {
                "file": "pydicom/fileutil.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/tests/test_JPEG_LS_transfer_syntax.py"
            },
            {
                "file": "pydicom/tests/test_pylibjpeg.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "pydicom/sr/codedict.py"
            },
            {
                "file": "examples/image_processing/plot_waveforms.py"
            },
            {
                "file": "pydicom/cli/main.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "examples/input_output/plot_read_fileset.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "pydicom/sr/_cid_dict.py"
            },
            {
                "file": "pydicom/_uid_dict.py"
            }
        ]
    },
    "pydicom/pydicom/1334": {
        "results": [
            {
                "file": "examples/memory_dataset.py"
            },
            {
                "file": "pydicom/tests/test_JPEG_LS_transfer_syntax.py"
            },
            {
                "file": "pydicom/tests/_write_stds.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/tests/test_overlay_np.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "pydicom/env_info.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/tests/test_filereader.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_codedict.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/fileutil.py"
            },
            {
                "file": "pydicom/sr/codedict.py"
            },
            {
                "file": "dicom.py"
            }
        ]
    },
    "pydicom/pydicom/958": {
        "results": [
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/tests/test_JPEG_LS_transfer_syntax.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "examples/plot_dicom_difference.py"
            },
            {
                "file": "pydicom/values.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "source/scripts/dicomdir_test.py"
            },
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "pydicom/tests/test_compat.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/dataelem.py"
            },
            {
                "file": "pydicom/dataset.py"
            },
            {
                "file": "pydicom/tests/test_multival.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            }
        ]
    },
    "pydicom/pydicom/863": {
        "results": [
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "source/generate_dict/generate_dicom_dict.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/tests/_handler_common.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "pydicom/data/tests/test_data_manager.py"
            },
            {
                "file": "examples/image_processing/plot_downsize_image.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_rle_encode.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            },
            {
                "file": "pydicom/filereader.py"
            },
            {
                "file": "pydicom/tests/test_filereader.py"
            },
            {
                "file": "examples/show_charset_name.py"
            }
        ]
    },
    "pydicom/pydicom/1694": {
        "results": [
            {
                "file": "pydicom/data/retry.py"
            },
            {
                "file": "pydicom/encaps.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "examples/input_output/plot_read_fileset.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/pylibjpeg_handler.py"
            },
            {
                "file": "pydicom/encoders/gdcm.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "pydicom/tests/test_dataelem.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/benchmarks/bench_encaps.py"
            },
            {
                "file": "pydicom/jsonrep.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "pydicom/util/fixer.py"
            }
        ]
    },
    "pydicom/pydicom/1562": {
        "results": [
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/cli/main.py"
            },
            {
                "file": "pydicom/encoders/base.py"
            },
            {
                "file": "pydicom/tests/test_errors.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "examples/image_processing/plot_downsize_image.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/sr/_cid_dict.py"
            },
            {
                "file": "pydicom/cli/codify.py"
            },
            {
                "file": "pydicom/data/retry.py"
            },
            {
                "file": "pydicom/tests/test_fileset.py"
            },
            {
                "file": "pydicom/tests/test_encoders.py"
            },
            {
                "file": "pydicom/tests/test_environment.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            }
        ]
    },
    "pydicom/pydicom/1413": {
        "results": [
            {
                "file": "pydicom/util/fixer.py"
            },
            {
                "file": "examples/dicomtree.py"
            },
            {
                "file": "source/scripts/dicomdir_test.py"
            },
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "pydicom/tests/test_filereader.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/filereader.py"
            },
            {
                "file": "pydicom/tests/test_config.py"
            },
            {
                "file": "pydicom/tests/test_cli.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "pydicom/tests/test_fileutil.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            },
            {
                "file": "pydicom/benchmarks/bench_rle_encode.py"
            },
            {
                "file": "pydicom/tests/conftest.py"
            },
            {
                "file": "pydicom/sr/_snomed_dict.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            },
            {
                "file": "source/generate_cids/generate_concept_dicts.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            }
        ]
    },
    "pydicom/pydicom/1090": {
        "results": [
            {
                "file": "pydicom/_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_data_manager.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/tests/test_dictionary.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_tag.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "examples/image_processing/plot_downsize_image.py"
            }
        ]
    },
    "pydicom/pydicom/800": {
        "results": [
            {
                "file": "source/generate_dict/generate_dicom_dict.py"
            },
            {
                "file": "pydicom/tests/_handler_common.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/pillow_handler.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/benchmarks/bench_encaps.py"
            },
            {
                "file": "pydicom/tests/test_dictionary.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "pydicom/tests/test_filereader.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "doc/_templates/numpydoc_docstring.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/tests/test_fixes.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/jpeg_ls_handler.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/tests/_write_stds.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            }
        ]
    },
    "pydicom/pydicom/938": {
        "results": [
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "pydicom/data/tests/test_data_manager.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/_uid_dict.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/encaps.py"
            },
            {
                "file": "pydicom/tests/performance/write_profiling.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/tests/test_dataset.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "examples/image_processing/plot_downsize_image.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pydicom/tests/performance/time_test.py"
            },
            {
                "file": "pydicom/tests/_write_stds.py"
            }
        ]
    },
    "pydicom/pydicom/1194": {
        "results": [
            {
                "file": "pydicom/tests/test_fileutil.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_rle_decode.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "examples/plot_dicom_difference.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "pydicom/util/fixer.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "pydicom/sr/coding.py"
            },
            {
                "file": "pydicom/tests/_handler_common.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            }
        ]
    },
    "pydicom/pydicom/997": {
        "results": [
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/tests/test_dataset.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "examples/dicomtree.py"
            },
            {
                "file": "pydicom/benchmarks/bench_encaps.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom_directory.py"
            },
            {
                "file": "pydicom/dataelem.py"
            },
            {
                "file": "pydicom/tests/test_errors.py"
            },
            {
                "file": "examples/show_charset_name.py"
            }
        ]
    },
    "pydicom/pydicom/811": {
        "results": [
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "pydicom/data/charset_files/charlist.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "source/generate_dict/generate_dicom_dict.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "source/generate_uids/generate_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/filereader.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "examples/dicomtree.py"
            },
            {
                "file": "pydicom/tests/test_fixes.py"
            },
            {
                "file": "pydicom/compat.py"
            }
        ]
    },
    "pydicom/pydicom/1539": {
        "results": [
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/overlays/numpy_handler.py"
            },
            {
                "file": "pydicom/benchmarks/bench_rle_encode.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "examples/input_output/plot_read_fileset.py"
            },
            {
                "file": "pydicom/dataelem.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/encoders/native.py"
            },
            {
                "file": "pydicom/tests/test_encoders_pydicom.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/tests/test_codes.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/compat.py"
            }
        ]
    },
    "pydicom/pydicom/901": {
        "results": [
            {
                "file": "pydicom/tests/test_dataelem.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/util/fixer.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "pydicom/valuerep.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/tests/test_errors.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/data/test_files/test.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/dataset.py"
            },
            {
                "file": "pydicom/tests/test_handler_util.py"
            }
        ]
    },
    "pydicom/pydicom/1598": {
        "results": [
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "source/generate_dict/generate_private_dict.py"
            },
            {
                "file": "examples/image_processing/plot_waveforms.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "pydicom/tests/test_dataset.py"
            },
            {
                "file": "source/generate_cids/generate_concept_dicts.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/fileset.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "pydicom/tests/test_dictionary.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/sr/_concepts_dict.py"
            },
            {
                "file": "pydicom/sr/coding.py"
            },
            {
                "file": "pydicom/tests/test_cli.py"
            }
        ]
    },
    "pydicom/pydicom/1139": {
        "results": [
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "pydicom/tests/test_environment.py"
            },
            {
                "file": "examples/show_charset_name.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/tests/test_env_info.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/pillow_handler.py"
            },
            {
                "file": "pydicom/data/retry.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_data_manager.py"
            },
            {
                "file": "pydicom/util/fixer.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "pydicom/sr/_cid_dict.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "pydicom/filewriter.py"
            }
        ]
    },
    "pydicom/pydicom/793": {
        "results": [
            {
                "file": "pydicom/tests/test_compat.py"
            },
            {
                "file": "pydicom/sequence.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/pillow_handler.py"
            },
            {
                "file": "setup.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            },
            {
                "file": "pydicom/data/charset_files/charlist.py"
            },
            {
                "file": "pydicom/tests/test_unicode.py"
            },
            {
                "file": "doc/sphinxext/sphinx_issues.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "pydicom/filereader.py"
            },
            {
                "file": "pydicom/util/fixer.py"
            }
        ]
    },
    "pydicom/pydicom/1192": {
        "results": [
            {
                "file": "pydicom/tests/test_dictionary.py"
            },
            {
                "file": "pydicom/tests/conftest.py"
            },
            {
                "file": "pydicom/tests/test_fileutil.py"
            },
            {
                "file": "pydicom/tests/test_dataset.py"
            },
            {
                "file": "pydicom/tests/test_coding.py"
            },
            {
                "file": "pydicom/tests/_handler_common.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/tests/test_tag.py"
            },
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/jpeg_ls_handler.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "source/scripts/charlist.py"
            },
            {
                "file": "pydicom/fileutil.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom_directory.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            }
        ]
    },
    "pydicom/pydicom/1236": {
        "results": [
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "pydicom/tests/test_env_info.py"
            },
            {
                "file": "pydicom/util/dump.py"
            },
            {
                "file": "pydicom/tests/test_fileset.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/data/download.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            },
            {
                "file": "source/scripts/charlist.py"
            },
            {
                "file": "pydicom/tests/test_fileutil.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/tests/_write_stds.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/jpeg_ls_handler.py"
            },
            {
                "file": "pydicom/data/data_manager.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/uid.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/tag.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            }
        ]
    },
    "pydicom/pydicom/955": {
        "results": [
            {
                "file": "pydicom/tests/test_overlay_np.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/tests/test_filebase.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "pydicom/dicomio.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_rle_encode.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_rle_decode.py"
            },
            {
                "file": "build_tools/sphinx/github_link.py"
            },
            {
                "file": "pydicom/tests/test_JPEG_LS_transfer_syntax.py"
            },
            {
                "file": "pydicom/valuerep.py"
            },
            {
                "file": "examples/show_charset_name.py"
            },
            {
                "file": "pydicom/tests/performance/write_profiling.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/tests/test_dictionary.py"
            }
        ]
    },
    "pydicom/pydicom/1031": {
        "results": [
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "pydicom/misc.py"
            },
            {
                "file": "pydicom/sr/_snomed_dict.py"
            },
            {
                "file": "pydicom/tests/test_pillow_pixel_data.py"
            },
            {
                "file": "source/generate_uids/generate_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/util/leanread.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "pydicom/tests/test_dataelem.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "dicom.py"
            },
            {
                "file": "pydicom/sequence.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "examples/dicomtree.py"
            },
            {
                "file": "pydicom/util/codify.py"
            }
        ]
    },
    "pydicom/pydicom/1555": {
        "results": [
            {
                "file": "source/generate_dict/generate_dicom_dict.py"
            },
            {
                "file": "pydicom/jsonrep.py"
            },
            {
                "file": "pydicom/tests/test_environment.py"
            },
            {
                "file": "pydicom/cli/show.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "source/generate_dict/generate_private_dict.py"
            },
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "pydicom/tests/test_sequence.py"
            },
            {
                "file": "pydicom/tests/test_values.py"
            },
            {
                "file": "pydicom/overlays/numpy_handler.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/data/retry.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "pydicom/benchmarks/bench_pixel_util.py"
            },
            {
                "file": "pydicom/util/hexutil.py"
            },
            {
                "file": "pydicom/encaps.py"
            }
        ]
    },
    "pydicom/pydicom/809": {
        "results": [
            {
                "file": "pydicom/pixel_data_handlers/jpeg_ls_handler.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "source/generate_dict/generate_private_dict.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "doc/sphinxext/sphinx_issues.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/dicomdir.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "examples/metadata_processing/plot_anonymize.py"
            },
            {
                "file": "pydicom/filewriter.py"
            },
            {
                "file": "pydicom/tests/test_fixes.py"
            },
            {
                "file": "pydicom/tests/test_util.py"
            },
            {
                "file": "examples/input_output/plot_printing_dataset.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom_directory.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/numpy_handler.py"
            }
        ]
    },
    "pydicom/pydicom/933": {
        "results": [
            {
                "file": "pydicom/dicomio.py"
            },
            {
                "file": "pydicom/benchmarks/bench_encaps.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/gdcm_handler.py"
            },
            {
                "file": "examples/input_output/plot_read_rtplan.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/util/fixes.py"
            },
            {
                "file": "pydicom/dataset.py"
            },
            {
                "file": "examples/image_processing/reslice.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/tests/test_fixes.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            },
            {
                "file": "pydicom/valuerep.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/_storage_sopclass_uids.py"
            },
            {
                "file": "pydicom/config.py"
            },
            {
                "file": "pydicom/overlay_data_handlers/numpy_handler.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/pillow_handler.py"
            },
            {
                "file": "pydicom/tests/test_config.py"
            }
        ]
    },
    "pydicom/pydicom/1633": {
        "results": [
            {
                "file": "pydicom/filebase.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "source/generate_cids/generate_concept_dicts.py"
            },
            {
                "file": "pydicom/sr/_concepts_dict.py"
            },
            {
                "file": "source/generate_dict/generate_dicom_dict.py"
            },
            {
                "file": "examples/input_output/plot_read_fileset.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/util.py"
            },
            {
                "file": "pydicom/tests/test_numpy_pixel_data.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/errors.py"
            },
            {
                "file": "pydicom/tests/test_overlay_np.py"
            },
            {
                "file": "pydicom/charset.py"
            },
            {
                "file": "pydicom/tests/test_json.py"
            },
            {
                "file": "pydicom/tests/test_uid.py"
            },
            {
                "file": "pydicom/tests/test_jpeg_ls_pixel_data.py"
            },
            {
                "file": "pydicom/overlays/numpy_handler.py"
            },
            {
                "file": "pydicom/datadict.py"
            },
            {
                "file": "pydicom/sr/codedict.py"
            },
            {
                "file": "pydicom/tests/test_rle_pixel_data.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            }
        ]
    },
    "pydicom/pydicom/1428": {
        "results": [
            {
                "file": "pydicom/fileset.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/jpeg_ls_handler.py"
            },
            {
                "file": "pydicom/sequence.py"
            },
            {
                "file": "examples/metadata_processing/plot_add_dict_entries.py"
            },
            {
                "file": "pydicom/cli/codify.py"
            },
            {
                "file": "pydicom/tests/test_charset.py"
            },
            {
                "file": "examples/input_output/plot_write_dicom.py"
            },
            {
                "file": "pydicom/multival.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/tests/test_valuerep.py"
            },
            {
                "file": "pydicom/pixel_data_handlers/rle_handler.py"
            },
            {
                "file": "pydicom/tests/test_dicomdir.py"
            },
            {
                "file": "pydicom/tests/test_filewriter.py"
            },
            {
                "file": "pydicom/_private_dict.py"
            },
            {
                "file": "pydicom/tests/test_errors.py"
            },
            {
                "file": "pydicom/tests/test_multival.py"
            },
            {
                "file": "pydicom/tests/test_misc.py"
            },
            {
                "file": "pydicom/sr/codedict.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_numpy.py"
            }
        ]
    },
    "pydicom/pydicom/1256": {
        "results": [
            {
                "file": "examples/image_processing/plot_waveforms.py"
            },
            {
                "file": "pydicom/dataelem.py"
            },
            {
                "file": "pydicom/compat.py"
            },
            {
                "file": "pydicom/tests/test_encaps.py"
            },
            {
                "file": "pydicom/filereader.py"
            },
            {
                "file": "pydicom/benchmarks/bench_handler_rle_decode.py"
            },
            {
                "file": "pydicom/_dicom_dict.py"
            },
            {
                "file": "doc/conf.py"
            },
            {
                "file": "source/generate_dict/generate_uid_dict.py"
            },
            {
                "file": "pydicom/tests/test_overlay_np.py"
            },
            {
                "file": "pydicom/util/codify.py"
            },
            {
                "file": "examples/dicomtree.py"
            },
            {
                "file": "pydicom/fileset.py"
            },
            {
                "file": "examples/metadata_processing/plot_sequences.py"
            },
            {
                "file": "pydicom/_version.py"
            },
            {
                "file": "pydicom/tests/test_dataelem.py"
            },
            {
                "file": "source/scripts/dicomdir_test.py"
            },
            {
                "file": "examples/input_output/plot_read_dicom.py"
            },
            {
                "file": "pydicom/tests/test_rawread.py"
            },
            {
                "file": "pydicom/encaps.py"
            }
        ]
    }
}